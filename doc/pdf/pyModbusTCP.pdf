%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 50 0 R /F4 52 0 R /F5 53 0 R /F6 64 0 R 
  /F7 67 0 R /F8 68 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /Contents 150 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
5 0 obj
<< /Contents 151 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
6 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.7894 251.3057 766.7894 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot >>
endobj
8 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.7894 135.0457 748.7894 ] /Subtype /Link /Type /Annot >>
endobj
9 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 80.01575 718.7894 190.0657 730.7894 ] /Subtype /Link /Type /Annot >>
endobj
11 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot >>
endobj
12 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 549.8594 0 ] /Rect [ 80.01575 700.7894 146.1657 712.7894 ] /Subtype /Link /Type /Annot >>
endobj
13 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 549.8594 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot >>
endobj
14 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 345.4594 0 ] /Rect [ 80.01575 682.7894 159.4857 694.7894 ] /Subtype /Link /Type /Annot >>
endobj
15 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 345.4594 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot >>
endobj
16 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 129.0594 0 ] /Rect [ 80.01575 664.7894 223.3957 676.7894 ] /Subtype /Link /Type /Annot >>
endobj
17 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 129.0594 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot >>
endobj
18 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 605.4394 0 ] /Rect [ 80.01575 646.7894 308.4457 658.7894 ] /Subtype /Link /Type /Annot >>
endobj
19 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 605.4394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot >>
endobj
20 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 156.6394 0 ] /Rect [ 80.01575 628.7894 202.2957 640.7894 ] /Subtype /Link /Type /Annot >>
endobj
21 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 156.6394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot >>
endobj
22 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 626.6394 0 ] /Rect [ 80.01575 610.7894 240.0857 622.7894 ] /Subtype /Link /Type /Annot >>
endobj
23 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 626.6394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot >>
endobj
24 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 92.63937 0 ] /Rect [ 60.01575 592.7894 235.0857 604.7894 ] /Subtype /Link /Type /Annot >>
endobj
25 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 92.63937 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot >>
endobj
26 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 574.7894 207.8357 586.7894 ] /Subtype /Link /Type /Annot >>
endobj
27 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot >>
endobj
28 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 736.2394 0 ] /Rect [ 100.0157 556.7894 281.7357 568.7894 ] /Subtype /Link /Type /Annot >>
endobj
29 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 736.2394 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot >>
endobj
30 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 40.01575 672.0394 0 ] /Rect [ 80.01575 538.7894 202.2757 550.7894 ] /Subtype /Link /Type /Annot >>
endobj
31 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 40.01575 672.0394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot >>
endobj
32 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 702.0394 0 ] /Rect [ 60.01575 520.7894 171.7157 532.7894 ] /Subtype /Link /Type /Annot >>
endobj
33 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 702.0394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot >>
endobj
34 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 648.8394 0 ] /Rect [ 80.01575 502.7894 215.0557 514.7894 ] /Subtype /Link /Type /Annot >>
endobj
35 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 648.8394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot >>
endobj
36 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 484.7894 192.2757 496.7894 ] /Subtype /Link /Type /Annot >>
endobj
37 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot >>
endobj
38 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 466.7894 193.3757 478.7894 ] /Subtype /Link /Type /Annot >>
endobj
39 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 544.1398 466.7894 555.2598 478.7894 ] /Subtype /Link /Type /Annot >>
endobj
40 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 80.01575 448.7894 262.8757 460.7894 ] /Subtype /Link /Type /Annot >>
endobj
41 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 544.1398 448.7894 555.2598 460.7894 ] /Subtype /Link /Type /Annot >>
endobj
42 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 82.63937 0 ] /Rect [ 40.01575 430.7894 126.7157 442.7894 ] /Subtype /Link /Type /Annot >>
endobj
43 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 82.63937 0 ] /Rect [ 544.1398 430.7894 555.2598 442.7894 ] /Subtype /Link /Type /Annot >>
endobj
44 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 120 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 40.01575 412.7894 66.13575 424.7894 ] /Subtype /Link /Type /Annot >>
endobj
45 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 120 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 544.1398 412.7894 555.2598 424.7894 ] /Subtype /Link /Type /Annot >>
endobj
46 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 124 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 40.01575 394.7894 140.5857 406.7894 ] /Subtype /Link /Type /Annot >>
endobj
47 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 124 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 544.1398 394.7894 555.2598 406.7894 ] /Subtype /Link /Type /Annot >>
endobj
48 0 obj
<< /Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 
  46 0 R 47 0 R ] /Contents 152 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
49 0 obj
<< /Contents 153 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
50 0 obj
<< /BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
51 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 251 /Length 38123 /Subtype /Image 
  /Type /XObject /Width 968 >>
stream
Gb"-VG?e'Jrs*L7fR(^O&]BASWONNfcJfTuXV3XRC2k$EE>H#3U=>0+'jCoF'i@g80&26b;.P=Gg#)Po5#6VV+JOOZ!2'!-^1'WN^:F!nF$AdLk2r:czzzzzz!%P%RYV7@L,q^f&3]d-:rVPR4iBdKeqXeM%Eg:lsBP8eGjMd#nDr/.#-0O@MY^VK1z?RI'CK*!VNg[jUS+$Fr"gY5pT&1h(rE8%[5UIUAgEcUHtZ(n_7[@*GNJUrB<Q55P%X!83kC22JVg@Vu=k2pO8[dDbSVmE_9X/kRaq=@[j>e+_+[K?aE"9\i1#7!J>oI(k+Tt%V"ost8+!!%Nf.m#iifs>=X044GEo:s)`GOA]P(RI=6qUjKS)&jMF.Op<F=c1H5)Dn\&Yb3!%kibPtG5V.*ZY%HcZ=F8)GOstAPe)nq3HF,tM4gN7CY,_CLPJ*>ng$7W3]T2\V%R6H@V?pl1lD%7A4k&Err,)F5!*uVUt8n\CtZIHo-dHH)`Fd9hnBR1%^rgSPd`)abK7j4Ms'^-qYL%h<`WM;F;ZfB`/GQik_ZopmJ>k(5ORFDT9PSYH;aeD!!#8A&0E!DoB+<TIf#,A,Xp)K^]30Eg0.!:7i4>LjlIpI[qjTuJ,fM3-;@[TFQqAY>E9jj:@\,De#2Hpl)`dY2p07aTicd0eh'MS'ZF.T=>=mZ9M4663d!2:2cipV'<V?^-)IJ5Rs+2QQ"Cei(+l9-*Z,aho&\'3_Eugl!WW3#!#S7!9"K?A.V6\T$Ptic4+I"\GO"JY>]c3oPAA[H&OjhsA&c$j]5QB.jij,KiSia8EH/(\B'/-oO,k>F\o?WFhS"8!4Zt/fSCj`8+%o7"@H=:'#N]g6P61RBc("b2o?ZXaBUi'(!!!!q_o0U9#6b9VH$Qs1\CfKfBkV1!Bi%`,e)&s<e^[YB&GZ/";g;&/8RYn@23X5f6P2@%+Fr#dX[u#Q7l)qWmK@R!TibE!d'Ud0_h2"Y_hSb\MMbNf$NL/,!+-lo,NILcCE#3M*&1njj2R(hR&?gYetu02n`.Zn?bcU<q=Cds^W$<).[$<lI/Wp7h7ImWRPg"dG.i4p\;?09SmJU,]p:3PEotT6GOOCn/e\3b!!#WcKREh!r>dtCN#O_$b0#Ufk>R6o1,9b1GjsFpCUk/(]#Io*,pe8.[^Wa?`/,/0Xf[9rB]-[WX&c@6FQl\HFuJY)!<<*"C8mr%U@@YkJO&/Wkbt5M69.b18&r`nahu"@-n)%jIZ(EgaNr1^q!]HGC_mm($O[=[)&Z'#G'8&smd:)V!SDPq!!!!3OHu2Uq!d7iUITB<(T=@6p?pa`c'gLKDr*#n-t$=$I#Fr%-m'P'0k85QY@!p1.F"$%p$/r)j2Mlg?Ec$k!!!"lVMU.dfsYa%NugIF5O$k-Va)@1%1PalY$i_OEuA1`=-k\NQ'KnZ`J_XN_Jh7m!!!!aAL&NHr;,`_X]i,qOc`L>;]@W2fT@CKdaHQGf*,0WYd!W^eZ6#hcSdX<j\Ege2/CeAqtF7F"TSN&:n8:7'V%=5G0lmJo()A:lKT$09K77a>]+F3lahV+]6E^iG^)&_gmA/OSXnTfX]od66i[2eJFZQD>./78TqNWja)c?E4F$?<XqUo,io8sZO:[jkd8Wb9;/sgI0p.T\XG[,[!!&*A+$P'kGB[+e;q'4E>J>K19M>l\MEjdFARulAE59cE:.@]bi4snP@:?5f!WW3#O:#]9BliF\;,U:I2E'F)Gr)9DeeLLDE8eZf:7XGrWDf]rY?j23%0-A.[G6lh7goh9ld`'!j5Z>iQcHZWW.%'"699>Y/12f(J,]AibY6ULz8D9OlDgM'>_;k&tba;750(Dg%IsUkW/UBY[=84/J]Ys"4.n4Y2J9tgHEUel!-i3T+DdZs<nPr"H`QH><b*4?KTqQ$MNR-e:>\WEKU#Fth<De$U<2$M!YE"W<K*De1T0Fus(Bjd=!0@CDDVWUjf;Ek:qt=mX[<r-12p0:c;S5[u:?Lt<8kS+2WKFafj2[4TZ\C5fpZIi3lQeGL\13@h;aNgfW)9='VRCBu3f1Nuz6\#(-Qa3o;^OH,:1,;t`no_IPaQ:W/HhME&mbYXHrnF>HTB_]BbC<fkrr)`CrE<B.)`DMgMMfR"bKJ&NHMmOm^$?.K3gBI4gt^[HGOBS;dY7,Re>\W7MAN[?j$npWmdBKUIU)pR!!!>#8>`De3bZm5lM+;7>^G27D]erDkig+DftD`VqX=F^qeKN@5(EPoh5R*An`7fUYC69%[r:LPRQu_?cjK:4nY'X`jlIfaQNdEi!0E/6U7rDT>-r/$QH>3#E7llp/'HJn<C]Q7ir-ZD"(/`fp!9O'kk$5)"+q5QbGI=[N/ZsrQS)PV/g3)0<F0"'cf`>u69",CBk_:XZXmHLSj4Ek\#f3.h,q.(?%.7:n,Y1L^)Sh7J;T3keMCdZ'WS:Z>[:sdU(8[DST;2Rrj$tLp3,iWeZE%W:/9*]cu@'f+[JC[jZGtF`/#"IkN^Tu/%BIcmpVTaM5R7!D%p5#"98E%C8umk&'E&;5(!!^afBL9Dt)]$U?;O.Y@!n`;n>>O%eSWf)`EL9A]pAkFD'pjX[SRA2u<457lPVXfKkXbDY3DTs.<3BOto%A't=mfG4!F@l_L=%H?IV"$#?SLc)"dSoUY$_O"Xd+q+hSX0eo@`^Ncuo`7&EYEUVbtDV_nS@<!=oLLtM6[^NQ2R(PH[!!#8ald;KJd%Ng0]fMMY-nAW;H8Qolj3!W;%2q'rH[btikC<JTc@_^[T(#p#'TDA.X%.C5rql/Y9DI]!"G(H4l-cDLkK\20d%Ni,P_u=>JUma#WN#.Jl^RCchS"9de^`nZmYc5[\n0Gk3`gg6k0bndqG(U5A\.9nkntEZ96m*1q:W)eHhQf/c;TB1'c#uYS=H)VY1jR7r4U&^%Ndl.P;qM("98E%TI-@3\U4'g<j0f&]mtV5iB=)6SYCJ"2fI"?[oKJ0oO#bYgjckeeb%JQiaU:]r:B/&)3d.,T-u-;EF6L4&P[+YD!HC/)-aHP+!2T9e(3*9DO[,bQW[,K>[:+L?d.'UX&+nL4aT*#H;mjC3@h#GS_oa6q0]o-J\dEk6iR)^mk6l0l;44P@S39_!WW3#:u)j%(/bM4p\/<#!13O[;cADEUnjg54d7"us.2E&Rf9@_UI.&0_Ba?0HN4!C-'l@&(7q!]!OD?)s7p"M9h\4pXW\i2JaT<^::CrP'[!MTFKR6ojtGl^)`MZ%R[T,rhVPqma2c5eo+[m:3tF_OE:*&fn`-\Y!<<*"&3hBaUU=mhZ?l0sB%5i"@dYB1b*=J9Dr+/H)Dl+MqDCXfoQ]`T1%)fnR0&RW/L)K-rtQSP-e[2+,o0BT:dF8kh7@_rLCR<a<M_p>(bqc/PuH[;mX'k-euU<AI=C_NCdgc];+[KH?3:0-!)R0a+$[JNbEf59S]cKDS5V^%,hMj6\Rn2r6b9O6bEgRLi,31=AZ:&D2bO,CTDtGeiofJP\ccAIh`>40&&c9!JH#H:j\+P7/mc1m:<JQVNi#$TCMT9IE_>-/STCs5WVON:RS%"kVTFt'Y&8BpS0J"6!5KC>6q#,;aKR]?KZei+HjB/5:Y1`%aN?ZODV_lM0"Y26H7\SfmX'j+d4&6HI^3nL50BgH`;7/9m]mf1qtH/.M>?r:iu`dK@;Ka2\e#)OLB@bk]RB[C&nXHs_V2D5l]cPf]?e/JmWW(fLMtnRM)'@*IQjlt-Vp=uo=H^)JDM`Wq5$`NZ7Z7[!!&[l9UIMbZK9Q5:F6%h>kT*nBM]]]U=ZL,:^Z=`ZuY9N17(i:nqI+gc-<(Y>Gm]<?+T+Yjo+d.f@_[Pk&]_2Putci_KqqL.)FHa[=W>aX+&+eoBT_WB_?Q9g==^&1d+!mFY*Rn!!$"F.kAfgcAn(HM\e#lr6ejDbKS2+Cp0\3V4s\>@))ci1FP5lDV_%BWMukRT%,C'K^tH_H4NG[JO!UQA#$!$W2-4W2qG-;bCs[@]mB_XrM^EHD='oY-@P<+@EPe,f@SX0gg!TLcIgcofs51CKnZ6/#n7??k;I//O<1'qX4s=8#B+O!H;)<8>&eQPn`.[ep$66u?m$sM9/TgS=\YGJ<V4dPl,hJ_H3Xp"84Bht)@6BD!.Y1t,pfs8foe*s?soWQ?akX?DqqjBoWXs:qFL`7JU#/R`jTgCT&rELYF>t$!!"-5R@0J<7ZHEtGgiNaPLtZ`(!5"0?G4e9e"_[]HLs``<In6d(DlPr]2qWubM:nNn`.Zkb5hSC!0F.cB?rJLcp1rF^ViPsWlPut[ICQ^^4#lNTH4X\RKRcscp9r`5p-_p?5F1R!!&\c84cC@3,t[ON(gE]]rLq8qhjHL77G2P]mIM@pT@+=!HEsQM/dTX;c6M.eZ./j4*Oen!rr<$^t=Vc2n4c@FR7ZMgpqL-bCOEdq=Eb_-;9MfQZ(BPOcPQ!l#1#4!!!#K>2eH!K*DeEnT`X9f"_4\C['a1#0>!2qu-9HqtKR*kOYgWX:?73KL?7L!!#imLCYJ%Rl3u691r#TDSUc'VbWcq]eCJV=qM>YDJj@']"4-)^]4<11M>!hrd$X+!!!"`.46M+nDV8JHhQOjGWIlHj2R'?IJS&B?U'2^O-4Qd=P0?:M_$D1lI;f^XB@?15_-2u!<<*"^-PFdbhBI?gUD)s!F&]0H19b.IXZ_lIN];<R/Hm[TV.tBe#.9%7ql^Q3c!<Jldr>HXpY40!2(Z08P/IHpNLUs;--hsXCZ!Uk3D5()4Q4:ldA$,ZEpkd9=qgJgY(9%IcBSTkiLo+q?J_U!!!!a/2At9:7j^5CXt%PCMOe*)*X\MZ=V3>F68uRFXf:-Q?@?>'kgNP]m=holIERoohndiV<O/:U#DqIUO7H:hRn-O\iKfk!.\5u+X,gsZ"$_09PN(Z)0^AkHM-P4(bf@Zb*<br?;*p^@9k#R93tq2=BO5LmG#[A*G]A'8TQ*0A3)b46\Z$&[VZt4it;=l!'hGJ-75<GGAc*>APPuq"pP9:b\l4G0kE6R&!,bkO$A!b%+f$RYdh3Q^qdaF)`Ncr2m-/]<q>hPZr*'QQ0mu+B@!/tkg6$dc_'7'*WQ0?!7EDF-KaC2P7&0Zm+8FJ_hJV3A7R+9.4H_!g"D?*4*LT!oqtTXIe`D@:/2;b8o'6WU8$8C?XLBdC"KLnDJj@J\olKPe`CC%g=k8O4*R8[ICbK#ci*b8$OR5C(CL3C!!(p?j2[4STqT)Bn)bgdSt6u>q'^/#)]O"gg3(i>8HOJ$`/,->&J6*KHsg6`<6NA(GkC4Iq=EdYD;-sqp?YPF3]1X"6pX+i>GWf!.`0<N`JYOP=ZcZa!.^Li4[&bhSNHiMri9,(ShOS>kK]Xkp%@YK&#DZM1G]7@LG<;Y\@]@kfs9`3l-m+Zh0SbZ<G#hile8CEIXXKBiVWB<;g@02GH[pB-`s-"]mEse>&%_a#hP6:VIll0X_>E<q>AgG>Ar6&$""\V!!!"t[0d6JNZUJ\&Xn<GXf_!Qc's?;K(eZj^O5kJ.9!*'3B=K\d6`(M"%QKs\NtiPD;)Amrql/6r:.gQoB'oBY[PkL4d=CZ\RAoTc_!F_O,qW3c"6k9rh[-73$fjs3]`]V'N_GBTp^M)T-(c(V+[.MSih;V^k!LfG&5a2R?j.>M)S(OG3d`HLECtI]Qit,*BO<(!q+pYS!9/U/[hUVLu,PGZa60lS=uW"9ge+jfY18a!!!"\UtF=%$A&'MqFX@PY-+pl2TpAbG'5d_`R)t.8sR-)^&ijnmbG?*/hVSKoP*!aV6R;1R[REN;A9i\C&*udmHj0f[5p?0%N[`Wq!d87E\h@RUfXJd:5di6CR95kCtuO_(.(ZhP%_s:'rB\l]m<NmVUr5]ZD-p"l[G1'Su&8pQS)RBWYmU)/6fQ!qtBD):S%t)%Y"?NnQ5YlchmJ*W=1R=1EMTIn!%E%p^MNL!!%P<NT)Z=:O.52,9nFjK&Shb\u;R+bQG]rSgj;0OJ^AtnWfh+`D-XC#7A-Y\LE>Lr>Tt:N,k/-4N1o9#fZ\LD;3L%qt98Fmr&'unWP=rVUo+bFD6TLl-GqaX1H45_Sb!t/h"*=\[akNpol5S#QOi)!*CZu.%m5+BpPK-]6<SAb5kVCp=QW[XK2,21r\tXp9q94UAASpe*X6</Cm5j!!!!aV'I?5H$FQN)B-c@b.>*mKSP>hY37B8dp+ImCYRCi<EWI-;cAltgqS?2F[Z91!!)N=+sS<]81Q):kih5,['#FUIB2eHRZj2/lL!tU@q-`GHsI\oX9&A%!)VJd()HcDqqKl[;i7oeZL[VYX1ge!;_rI%&9mnQ77BXN?2][g(Bjd=!!$%t;GmW!6)-o/pjBf^ZZAZ.#j[?tX+o_N:3q5t\$u*UhgHk7I%?C^_7D#p!!!#oO!d_p\@T8OWMsTHC:_$h7n#kOY"1ZiA?H^-%UZ8bio8r1'GSKs+ohTCJ6Jt_\2YTR^sUPla5]$mf$)n'4$>`tF]%-tZZA"ej2[40IX\X9l-3C6=9o%]YI\g6z<(9nhQC!q>e##iNA7V4#S:Z?EMMd9n(F=O<+]f%7HM#;7h-EN@7o<.2g"De%.F">a(Bjd=!)R1=H1T&#btUPm6WmRFe^a?L]mHh2W^=*C=*&D&Er>n7*??/7`ait)/eA:$',+Lb"TSN&:nn-s"Z\S'nT[0+@q1C##mgp>/#mWt0NSWFIJVILh-F)`=$]+QLT^^Y!!"K%-RZshgUh%?Q4u+AmHslNrU]XP=ViA-[5h<0EcZ;ULTd1(BgVEjq"T*b70*Ag!)tbZZ*E`bmeZeVEcQ3Nm\^]:!kDLuq=Ee!)"dImjQ5KoS=D!D(D[dl/d_RY!'o7lL5%`N4&^aZe^a?^n;*!\@pKZcaOMTtjlHXK"Amk2oD/(Ff;GGCk04jr70*Ag!(`Z4Jc\/$5<Cqgb*+_A2KV#>2j\Ya/0S)EcJ,gH"TguB"q>f>Sti'U^V;uj*nEa\!!!#'Q^!`qiSe3YBIGA]>;L^X;(Rg0b?%YB'GM6L%>L<G]mBA,h;)GPI*&rJz2Bj@j?!LVK'c"-`ZmZ_Z7n9ng8;\Nk=4"R'mfW\X_hJVSLTbL>QWjIj!2,W./1dUd@rH;3rQ:_@[s(;2#4&"Z%W_5D&K\ZPPERdV0VE.6M\e$K(Bjd=!)QZn;c<i$6)-o/CA(FLM?S%n[u$$$j4Y>optF'?00;7bF\r,=!!$L"jN/':='%7:2&-i@2`J5/c_%PH8D54g<sEmDg;V$"8P)KH98hN\K*Moh(Bjd=!:]B5Mi.Z=!ZW4$Gs%[TM2@Rc='AcGl_:BajD(qj8P/IGp9qE<VY+Y9B1KG;ZEdRK"TSN&n.d@b:l9/EZmk)Sb12`ZEQZ='6*;!,nF1Bu='&sEAIT(X\oI2q4k:>K!!!"H_4*B%gt^[5]dP<Y;1Q2uk76g8W[6`kWfWO4k3_QlU.#IKiG3gR('"=7UejlaOHYkAO2j%31(jiqnaZ.N/#pUNX/cqYpf^Zt<F&n$DF?l\Yc\63!!(rLS=CR;DsruD>>c/Of<1[Z^OKQr*p]Q#4lg>a85E"t2I/C+4"i7jP`um570*Ag5]%2S)scq[Y-5#^.kBrFiY!:RcFTa="1_TuW9Ln(\S5bl.4Qf.4$*ZN"gP39!!!"6MpTgIMBDE[niAfm*ZcBkhnNf0;,)[J/U9?:3WB$WNfK.,ns_RV/eA;OP*/o`"TSN&2,ce,JY/R,SXgc)%kB.\\kQ%TF\t"0E]$4F+$XpmGGdHrJq=&Jpq!uFQuu7+!!#h_,UFa^G^.`==-(\j;pkpX$"7+:%>S35>]+F3GPG?27]'=pAcdN++X)DZ;#gRr:lRn57_6+>-n6]]C21>l]15:YZ*($+5d$Co:S0hIQ=%+=?$U^@*52UW!._7Q=BOeUmr*,_:B@Y%ZY&(NhWa:hXGa)IOK53P?='5mn9*d2NBKBd@U`eK(Bjd=!)bC+2,tb11htNrnq3-i;c$:%IO\4cOK53Y<)aQcC1Ca`5+bV*S&.'X6<P*.!!!#IjiN]6Y-+pBC21o6b4r)O[ZIPd*+`iQE]Q9D;n=kB13.S_J,T4$l_4@Z!._?6io5K=!(TOL*fjrMClIgq0bGBF*$g,Voo^Uo7.3]A9k@TTPT_qCQ?F,Z',0)J\AQo%"U1uc!WW3#8^#9!o()?deuTac3.$"!M?NbNq5fLSV$7AI<9Nk;Pa"@\r5cH=poL3a,4=s.XK8LsTqT*1qob<Z=Vh5A!!&2Ok04i(2`D0T%66F/r)BCITLk-%N(fY5R^Ne32V&$uKtMp8?6Be9CtMR/p_n3R!!%P<.OZ^daiTADI9g,a%hF`2\2`%S_11P.k,PG]QC4d&DkB1>Q?@cJ'nh@GBhkJ-YE'&j!WW5M,WRkFhVR*@>IL>tAn,?2kN>?$Nce4g04W%_Q'[gjSZC;keT&g>RelO4K0UPmgpf(U7lrdog'=sjZWS(J!!!#V-oO!7h;)@D?XHi7(-e'4blRtLb<-*Le^]q-Bi%skiSh-aQ'@Li2)XX<rVQ=l<s/L'!+-m+1mEU!]Y(nc[PgS?kic^2'g[*P$O_*!F@o'hX&lL1/e,`D2)Wq=gY9`f7X4\h1Gb5;;#gRrn6#nu"b(oL1htLlD.-j=@s:C3#4&"V6JUAO8t66_YHO#Ejf*O8_q-@f.N03DFQ;fF]<!La!!%P!8P2VGnF3AXY9&-BZ'l"/%2B?&Pd,`7kpP%N5ugKL9;?4)Xf\_pn27)Y!!!#C77KbX\@<q:.]TGG\@K.5J,Ys\7IZ:19M@jL2(jG^)fUS9<E3&LeC<[d^'"H:!$HQ@Kn]O*rq?'Z'Yl,XH$O\3V5:FL$7]WWil/c56-RQs=I0,QoC:j2Df9Q3GIF`[&-rE\aiWX/jm_6H(GB*Z9R-U<!&[bkC9$e"?&jr*!<E3\jeHF4r:mPd8g'^sSug*9"s,pRjR2H=Xf\_(W9EU7*#'+Z\OYB-g@G(;4aZlnZ9/*eJ8-5g3r4d)prS^IY-+pBC2-@58p'+=SNE"6%4$]*AU-T[Rrp<u9MS?C^V<"XR].U#S"%kh3\`?doDs1)hA)V8ZuG!@io4EJV#gVs8=T,<E*Zc*5Q:GQbeMT!)%[?EK.N)(1GU_[5rLnj?G[G/AC/>mUsu,-$eC#^<1p4t]=U.I%LNOMgu3$$6IW;F:/6hme^Q2Cldmd?.uSPT!!#hG'GM8"`Pk887UEWGKa+FGkKj$`3-!qGcmLbigj&PZ=__]OKZg-jPa.MJI-fRpCPb:'=R"r/`>uj4f<-,oS!THhiUWX6V50nLHM$FdeZ71$C%eoVlW+l@R5&3k#b0r3]6E/IIpZ;[aLY8Wk2XLC]6E^]e#!TI"1GYH)`DM/<)aS1MCY=FDqVGXLCYJ/<LBDN:G"Rf3r7^HHe5H.&,MnSB?p:=KfWZ$A&?+"*^>,Op?c)+pUpP,:lb2?o[(t3K*Mpi>e+n'Ue*^qoUnTUk0In/:JO[1d*T!cM\ZC!%%&nf(+%_aVb^7dTmSKdRZALQ.P!#B;2T^7iGZ!7H1T&#btUPmKDt/qidsfj<-Lc"78KL;TsVIEc'n1_a#c7?(`ODE-n&'!:%ENk!s=2E^ADg#Y[NG+0AaHns/fM7n@R>\%8HcVh;-W3eYt]rBHbl&e?<4dm&(BAKJ#/@p;W(2P`YY-h7J"+l8`qJ:lj,(:EMY[4#8ZK?!Z8!+hs3(h:8Q-O1K4UH[G%/-VTo3B[NP]J,T&UJHM.VWJCE22`^s>i7l2h`LT,:EoFlh:/4Q]VP[V-XJVk,@:@QqGOLA%-[L)bDVr2,q!mBGY?lYPn6p]lI*1WcIJ```SNG>D;[6(R3/q:?8!!)jYp1igqoDcD?Ja8aG0H=.CY,]u%M#XhWnFdqQg"38Y<mk4:f%_:*Bp)k1BJ'tO8&,#Me-1FjAD\Hp,R?bgs2HP;mW8o9L5*K"#\A<e#!ES!^Aoa$PtEXGjsY/LC_7Fpt&l&M)J"!j4)_A*'$@W]6X#1%2gpSdPXb/\0seP5>(1shVM+,;68Y-8-h)'d^bf^&(Jh+>e0D7bG9F@X&lJW?G*dbgU?qLkDpTCP%&9\"q>76gqp&b1Ggqq[']2LWRJY6"0&2mLJ]"f%[NRRn%\lt*S91us8DTSds(9;Q.+!D7^#Is!(D*XFano@4aZm!pUbhKnl`;2;1S,i[r8m%m@#kG,'no1=]r:\oB&2_p8#](SKpoc6UO5'[fHKC6#:?gFhH5]2JU`t3`m7;RAN]J%Ndm)HMG:k^_5Pm&Jl@-SiqFDo]T-ZgXMYWlKWCEQob.*F6<Dj`uj3#Z"['HNf8*E?"7a#VG4R<?8Y19K'%B]>IUKO&N,aFmG#7`\c)6VDj6@&Gi]^0<1Z7"p6T-8U#;W@V+&X`-@h>(:7XG2S!tq2<rm#Vn(t`u%e`fWVEX(VJHP!eUnFA'1,>"6[U?oQR]0Fo>76KPCMIT^DBC]Kd-TGlBe">hbSb^q.HubJMi0$k?b_'gd%Nh-<ipCbFf!r^-E=q`;c<=dh/1rWEN<0EVJ_e+$e?U+!(\@":.%B9(G/h/rB-L:RTc=II69YUc_!FoP*3\XUo:5jK*Mq4S2moUX&_'C.4H]C]\1#IqqJSu^\D%@=#4I4&>&br,$36X!S>SsNhW;DQS2^kSIFDO8J>hX!<E3C5CSj49,A?ZhR[iF`JPB?%Ls38.:uN>#S%?aAKkk1R\L2(YuhJH%hI'#jlbf*$e_dp#;lpYnSp"HH5gpHo76uKrquB65!D0^Y$J**?\kTQs5M"UF6Chcg9bS:PUYG"FfSTI*k*3_o^jPY]=YZs4aN@d:tCm5!&/TZc5dfnN/W]DL"b55d9mP-*\M<71G^hN&ekdW"pP9S55ct9Q^:c?6:.(N/gr+b2/6*Y+6*\5!ZD1fr"e4[AS#FuH[F42YOfM%U:ksMP$pMQWMt>qISNX5PaZ:+Tg\G5bo;E1J/ID1k%\XG;X[KFXLs5Vj2Y)cV#HPr-hfo/h7@a.@8JWBn*g;GiPV,_AQYDLL4k6,^.E+UhVOin8uSek4$#FN)@-ZW_T+\;:jZ#ZVPMqB9,AL1BIog:0d7fnF\uL8*VG7&-i3N%-RU:>U7sDgo&Q]ET8GfT4$1&mhnHs+(<]*aR79>?DZM>J2E+@'BJN":LGnIP$Q#W(q!bV&cXtCgTr+]aTV+PEYp,g9J<])s?pAu0BP1u@mbPKR>dUrJDUbTs9qX="1q:^9Q-caD6PgQ*SND$ZGjqA<#O1ejA7SrZI!PPYjaI!tTt(K3)-UMP#7dOeoBOjVf$sd$<0b,/4E#.VF)uD[QT]Ze3.:XFFZapGiPUE[)`F(PRW=a\]lres5G&F$4$#Fnq>BfE1=9#]FQgO:*C+m`hWNqZ@r,sT'<"Kd-;fA+?.!;]V57$feC2lF<)fADB22?&''kE?r0!8-p[-]oI/%YtD/Cmus7kW8gUD+9Gk#6#4gh%WdJb(&)7aP7Xs$/eE*iXC&SLh(fn"^*[<_$<!&Y2XFU&BrTFjIU6"/QYE=X*Q?sQW@;&=ZYpi-Y_F[#c^\<W>EBRZgL7dj;_?G:O0<`2i4cg=<+Lkl?)4,GRB/h^PD?sQN]d%#!uRPd,e3kDo6^:q<ZF^,s$)/[sBLC_kXS[oEu1j\oa]m953kKfd,Y,aT4-n)TOp$.,4$Z'ZsARo=b#!-86N#O]n?loE"C5mPJ(+i_2b0!JH0HhbiL35Lck3qb7UE15=Rl"j=i8?;2kg7G8-SJ`7E;fY+HhZqkFm;qFE,]>ujL]X)EcQ2&f*c05c-;e8B+?6Q2Jq/IM\D:H85;pO1hdSVLJFC$YrrC5.Z$41;56U[W2NO.UcA>-Dnem+)mV=?pXNbpF7VGbY-,*AaV(+,"T[(J>$@AqX"02&!sT/^EAhis5uF%3p"IX69Nt_Js8MsV(fK`h77FV#fohNBp?gV2m@1Fhji39!c'pZDeC6U+ng*O)i9OocB("B\bM([]cDU,$Dr/-piGU9u@,^)'1kVr8\#ug6m#WAX/ml?:\fq-)$Ft3=MNO$`TqPmH)</!.ZKBH'bNJJDp$,OGQeI1oE:2LAF`hgW/$#+YILa?'++F!9ZJ#0Oo.e4b(6XlF(G&ZRZQVb+`?0U-nb2A)X=L=HEcZ:4*^%N7aCf4$H2-mfC-A6pJ/W@d`f7:0ZGVD+@s&5q<l2_jbfn9L1h_DH-a+<`rVbj>jbF?g:=CE<[><<"h7L3RYOGgLBpP?^mciu8TqS0XVmgj:>(#p@o'YAJ961t7T5SR`IHo<29LStIg<_h)F]7VWXfJ"@<-!#"c^m97'btN+JbnZtnDV:7:o@'Z=sFPX;+R?L3-t5\)Yrg$46dcu]tJPP=gM^7AnECUMJBPs:S3Xe3KhGC[;"*EOuDWH!!*"V7dtEX`[N>cSNhUqFY,/ljFYgK]Y&VW5QL+RTPR]5?<'fuQp#dSlU%UJ?sk*76?dWteqLoS]Qit@CY,_0EcMO(/kf&:B3c#F=(GiP[r1#8].@-m#i@?A!,4,s`XL!>[6.E0MMmB?:S(6qj0-5s@U0A+'HJ3rXfXa.kg15t/GHX2IZonVnb)Qd>mUA[SiqFbQ'H3'D=?8j_n$U3M>HUF]6:0SX#FtRr8GPKXNLWp>0YC>O%+)Yr#eCqD</d#FmIV<NK%LT$iE4-3kKLu@Uio3SXn$:(.hW4@"Fc8)Lh4H3U.1<c'q4ojH:f^WoHlaeK-G"0b+[')B'M[5s_Sf!J"@2VY2Jh.Ptm>l)SbfXn'%&8th3&%!-K2H[GXAJcaN2^jkb*[7aP$p@#crAls[2>B4V!/iCN&]mEi.nt@8uo'utq*iu<=Gkgc:f!W;[d9\V@bSW?#\UFAKZ*"61C82h5HF.G;Wi?TH80EnJI@1Te4J9uFc^m:/>UFhS)D2I.%4-1$p#hd-KP-*BY?n'e#6tK8h+L$/-;Br)Y-*6PqK:ACLgQFU?A8\\MMmCZ/6TjMnaI\Q!(bb]M\iAYPJE8'JNgLl?=Lp5)3j5tfTk6l.;s-C77G2jpison>QpU\"<)HM/mWG;R[(!Z[o,=MHhK#V6E3FJc./?+P:*E0W'#CuLg^_m:ttX-eZ23$*YN^kC7;3\]mE7P%c8:j#&W)$EH,u\fZQi^Y!.!nP`1P0I_/bRSih9B-RZB<eLK.(<0`oCX7PrSgU:rlrC61eCb,QW?:mhIXK:d9UIW;2^k..>0/"t?4$+/l'dY0&cCI$)Y?(D::X9Ok3'`PVd*Rl@QZ(BPdJWh3e'cZ:4MJ&(E5d\L-71)3(isb>dC<DY/7Nm'K*De]rql0'Z7,K[M2@'O*q/acdpcH`RE\+kc>o@P3A$ZQs7Yj7gU1fu[r,Ko@to_m6\Z#Kr:d,[o($ILg:MQI-'n^@bLtS%`l=mUJ"W^0DNcul5TjafU4q#CFCX.<Fe\'cIBd95VbNK+a?r9\`f(dFA7S(1KXS=4NugG:?G%[io/Cm7<O@g7cJ?*VEAe(&8Bd2@8#SXG9hcAGd\sYDfsBj#UljZri_cI?Q%#I(V5<YgZ.qM&a,_nD(k7$bd0Gp3dZm4GL.8OREWHNHp&"3mdh"18[T[;7.,A.C[O%8XTAjU@ZtDu$=?Vb!KEMX21uGLb="1'%bg"E"e>ZC25BZAI<>_jQfJ/]@-GS3S7ENWlLsBbMpq!)%Gh)1+T@:8f?^sRh!0XU/ku);4CN1qC_hJWM4fYN^DVi&%mG#*,.,;I\F5Xibgg<]rStc8@ZY'g)2DR%^4uk>POV03.Z$#B`FJnVP0t>7C)]PD4H^;Nl9MA.[rr))QNZC3I\P+`(o]Ql=()KAMC[Ki`%3%2>f@%fX.ciM7$9h-d=da/SH@!TN`_uA!:/7\K8u\f\"j`YsYAN%&Q!Y##glWgO-s(%lA5qfoPgaIV"9SF`VP^5oYA_9*1ri[!=/S.3X]rh/rJM\+q/,\DNP&&Z53L7a:J4?UVpH*,rUj6<)"l"f#CLTJ>]oqbkNq*@?VsZ458F>$&hn4Y3&+1h>I8'0*TleG]?C+f3GF-J"5U\7m@*8!USFUKc6c8SLd"!V0MqOpQS2^o4_e_HT6glaTi$FXMdO\:C[TugmFnr]f@$ZI=.>\KdqoEuZY.VXnaVHnM@s",ldr=!0ej9ld\%dH4?P/H/Z\_Jb3:g$Ci&<2,q]s'm>C>=[C,,qqo+T#r&4A]7XjUMV1/C>)&O43b/t&%.8r8Zn\fA0OK37@q4%[#*mcFsgPZ%S!CMVP*B%`$\<a"fUdX$?6:+#,J,SA(55lqB:Ln!H\-L*sab`2foU&!cEH)/7:aHhk'i@Q>cSpE3ace)rlded89<4dlIH/<V;cD.+,&#g_Q4')HfWde68#Pq$JVopUDdJnkD6!G4b3:f5a3pRm',*h'Udrk(oITFF?gJWQDj+`jntS^9$@C\DKTGrk%_:luOjA=Gl4q!)=BJ\U]`\<8BBIF+%Ls!.>1tpuC@6qN;s)QD\4eW's8IEeM-PoLb->L!&i#ua`5Mr.WrusGB32;tQ2e(?Jc\OSldi258ZSkk.fF)"L_5n*f[J<UH1U0`?Og&*5Tha=2Ql=H&PK8Zn\g<oaYKK+@:;HG:73m!fs><rEmDnQXN96q_*+`Sp6![pf:nV)FBs#B!<Bo<ZY#2rWN!CnAnu0Th:Lh=7AZM,[oKJ0?TaoVO`$Zs94IpH`*9]gd:-IsHn!pk_H5ErAP:jjFiCaF!s=/ggQ]=3HUXB%`Fj8I\P1`2g6F>De^_'#QS+P1%TM5[9:$oca3*X)\ar)ar;8tOo_%mZ;sHK,&l5TRRk1n..jugmSYDH\3cjH-2rs7]FN@qH7m;^j7s]K-\C;Q"83f^:#k_n-T0="5dPc!u=Qe0/Fka?AMiE_@c-6\,%B[_G(:fQZU(.Vb1l>jWB@Cpo4aXVap[7bBgR%a.1@M$aPQ#q(n6tj97E*a)e(E:ih(i3aQ>#;BH1F?S9C(02)_J1As8F`-0crW/r8Wi&BG4IO3L/'V*?6%/*'!H]m9@^G#mgoRf<1r7.4ZoM^0h<VMk>Lu\amppMTa2dUT'c=LI[WD8ib]SpUs!I/M2k2M4a.h[nfq$ZVILg/XBLN`S4pkNP'8k`cUC<7>m=mP>bCYrVc]fp%?'C=-pJeWnU%d<)ch-DJhXLb*4AZ4og,3_SSWF?/>2>f8F3Sq>'jB]6CGW$MW0C]B,G:B9n!U3DV="cEUm"QMK<.ZEpl)\',hO_AX=24*Ks%bL4\,4'//U#VZ3(I*CcB;`QG?bQdG!l<;;Ej5T'/A7S;;5Stbs68c0^c^if;(?KY-Pd)ZkQMsgL/mTmsF&2gFa&me[/@1I;BJ4Ag%mTtg::'uUSRjFdr-H;AVBiIQZFH>:!(b>`WDcMc9ng9&-.*Pq.G`"`7T!#[77Dq,s,-h/bb[t!L(55=A7Qr5-`<c9A8,a<GOF75p[3ItnYP\J91u%h@q&n69.9E%h]Om<R$MgdlIF$1$7]c^kg@8n0.P<"f@Sg5S=5>?Z15,2b@lo=_<+]l9+DC?SM4J=_hJWb.5YQ%d%Q*$[s-q`<J5CQ[^J)sTItMsc5SWUjQ,B$V&rd(dqr!i('k&uT;Yhe)f+'.(%&0=fJ/]L-Hg5doN/&j8WtJ.$4:BWB!cd/XS*TRFdWW@U4&h2Y?no:*J_XsW`V4\5agKDJ$5rT]P5hAeqHX>)GFAEDI'*j<eZFCJ,d6AN(e)Xj&!,3e'n3UQX<i2;G5iYH'8m!XBDl3(BRqk0eoqYoB+WTf!o`X!([r$k@miok04jrKh*4++!1i1[r1#2>mU@0[r1"_GOA_:c?6$FYEG&H>[/976>E^!8!!6:r2EVm<qQulK=K9IAnbsnC23V=m9A/L!'mYRe+rIHqlWr"<k5cOXD<qB&J5T^$48af-rlj&IB'6E\7Ni!eqHZ9oB4FK</^&]&FdqrJqDM&eK#YNe'lcKf)f;uj2MNK*??'G5(*.@\eY:EV&hdGUoLFUET4o?FX412n)(lud\KItcCMq'eNTq-KaS\p_Pn!ZT#Q1qc,RaM5<kc_/b#AGK6;<Z>I8&U*ZiV<(+<Ba;:3[[4/m_nhS$PbFTMRD,k'&Ds&;fkQp,pZU@j9P+.>-,DImBZV8!'9hhKQka,V079hfEsW=cKVNZ'cI6ULsB16<R)dF"LGFlN#gF6CinbfjU'%f?^Z[I*AKAS#G&rqU2HI1m\&TJF#jmHWt?RldG_04%a_=<LR9Zc'f#-;BqVpYC$nH3#jW-rdgh\]Mt8"U,(7Xp+fY2U1s_gXXg'9MA.Xr;;G0MHEp_s61*WbaB\/05k?1oCq-lZRuI_i;_1aY-"g#Zi9^fhm9J>Jb/'NCM@L*m+AS?#.>Ep3]c!=bfnkt4=2D0FY.'':f-ZAO$?N53-OX*lWTrtY@#$c2/3hda.it9R58JXQW&6BA7R5q[S0t4>t7Cth7@_g@gW43:fLDYKnY5STqUroWjP,f:<nFp$i#,KUe-bboATO\KVj2M>-t58^OBj0.-k'T-8@6[GOOCgWiCW$JZNX<08PRG*'AJMN/UH2<iu)_gP>+*8^a(eD\ap.<4?aN$It`>T(kJu!(\p2UW/<79B4"\iPTHKkn(\I_+gCWe^W+@naU$n$[dZ8Zns-X-TO2t%3%4TJF<YpKS7]/_:6sk+sMV]/Po='iSc"ONg,lsf?r!62fIQ2(GAll<0J%3'j\=g@DIBoHp6H7d#\l_EcNr$U&Y0C,VUpV@Ddha2HR(g>uSM6oDJE*RQJk)@c5%Qn(t`f>n26>MUSV,XeJ+iCY,^bSigFec8WneaI"brNi]<uhnFN$'<3:Gid#fp;28;P:)s]M$P*aYl<@@,<HAig'EeOA\@B%^CMQjm9sa)WTHKc[%KP#h`TcL-Q`I0f)]BW4gU=42rK?`@2fC$=Sh)6:B5)'_X3PshO[;B$BKOA[b:d27Qng/WEkVV"$]Z;n?GCr;g<6p@fn-/!Xl\a/T/q,;g"BM"8VtLJFm7=ca,V28Bp*C(]0f\&fYW=Mc-4CF_I@=t4E')hqtKQcXpY6&;A'WVB@!0OTV,,jDV_-^QWEj=m>$FN%N@<"<`ZXpK*K'(^A&/FRXl[-RPek[<)ff]DV21e>0I$Ir:<]G4$*cXPf3'28PSdGj2^&+qlNYd51Ip"aN/c'h02MX/@g3+2Wd^K5uZh$J,ar6KF%he#./U<kib^.1*nn>(i'W^C6JAepuT\c)]BVm^`GLVjOpkPX4N]A'+tqdD;3XMD-Q;(gUD*No]X]f<BjFc:&="tSZAin9FZ.;lI@^;A6i%MW8UVFj-jH7^3qGJZ*"A48m5EPM%_6`:7PG$IXTr*qYL'<H#D<@,pFN7^H!Si4[&b\KaYZnnk8`Fh._](nT_0?[pHXfl&?W@E9IB(C9Y@`]L.Ga3BB3!^Se-54*Bi<TV*EA^46F,l2CMR;gORkQ.=C6S2=pm/oY"S;7^)<?idZ277G0%'.2)Q/1!ft?G1ZmC=OdY,9o3/\REC1KnY5cXp?:#1,<mfL(4+Xp!_LCVMqXWWnORZ2i<W.cCB1OjpgYA,`QE&p[6kl[r3>t,1b>r1n`2VC"frYq!mBYLr#?O!MHlXNK%5UFtNBBe/>9eX#iC);gbE'=kE<gKnY5)mbCsYH?K,YmJ2.DJq=&`AcD].\.D]C6CXH6m5Ah8:_TZR4*0Q..p&l-q2jV+j2YrdXD-4b'ie/8?G0]pq#tDZe7Q\=`K[WOm+=%=o]QJg)V"RN7n:VId;f0`q1fJ&Idl8]DJh)m1;tdn.I$^%leAmeT/^hbSXgdDbOhrOJk<Fac'ie7`/3c.L*6PI=M/nK@cPIf*BJ;(Occ>ddaZcgba:+HGOD8;/'6i(aiVYSrUne5ji`#Dl:!_*.ac\m)Du9ZZ"(gnC"$6<.Oo2`W`:WS[,;E,3]T3;hRo8N99jt?r:]O4UIUB*+$\W7fU+`$@+qu%=0GqqOsB-44VADAK7\^+X]m`)jN-K.S+HH'C+qakY@5>'e=4j5E8.g<JUrBuSis,,7g>nN^3B&&ace)d3]V*5\G#=Ee#\+i50sd1K>mKIe+`4^'-83$o;3#u!1!<@bo7Q2)E2R#lg)/j_#aiH#:1ZBl9]&nAM#JcLCYK@HM)$q[p`]R@ek,LTV15nX&kW@?`'1eq<+Asp[2m/AAiWEP[4P')FQUck09ATI2Y_6NfMu1I=&_XrDZ`qW3t!e*BSG71M>"IIJ]tZ<9@`Xm-O*9p[91gIXKhSA[HjQqc4Djg9bScb:gV`L5+\-;5g.hXK756#b$u0?bUp[kg?M:\(8pQW:N6"H?q/I[N$u/J=E#I7<(OV^H_brPIaf[K^"=+/!?(ee#,u/6:+G<3jj>/DGO&(RR6`7folUAAS#F][5=lLhS&fN.8r-Ag2uc<3L\o9?3pU.^,pQ,:n"43SXPus]JD2oO7&o0J,]BA]mB@GhN^0kboO!\Yhc-KQXRdd9qOW*_o$!=[Valn7ih0;KaXm/mbbd/LCP=C2Jbp(SQh>1Jc_:n=05YKk006[04-J>%oA8Hk2oRmV1ppPlr\%=CO(2NY!m&?CYROq3B9)oQnVt5d\U0WDZ*hHUs(W)`f.`d#M\"f2e^Q'fY$JB^juShXB9KAr;!.a,h?lJC5DZ[GRDd3s8KWsQe,"trC!2(FbW@T7blZ26Bl1Y9MDAo;[5t?GiZr.Y-+ols84Z18:"`*h/$d>g1_@j4aZn@M%cGNSLHAD/(2^PBP8eA-R\bbC2.M.RPem4Y$IelN>=*LZtI]+CA\Sa5*TU'#6:\?!WrNR-W@VOil??:J7m3"dGoH>hS!IAOss>,$lUsYdWkBGc0Nr_X/2X]S[3!:c/\?$5,#6V7>hpEHLr%3C6Y3WgWGd3%j!iXrVH22n(uTFT@a6[:f(!Xil)94"'`3MR6,W\Qn`*^GOJ:*2Ea2dC4V8"MPZeRP9s!bG3h2!aH2fGB<GRSqY9U@p[6j)O9!E"q!hin<7K0^2Zj*_I!pDH!eItqqp_TD?!LWJMWa3e827_je#)g'e^OAe&ntT-+U]B%C2.KpA_"MCHg5r,=49iaeuW$(F]1K%*r*U+$[;'rNK&o4pAFPig0Z8S;a"qu#QR+IjmVY6rU[sa'Ccr!e9I3=NZC4$\dAH%p$1).7ZA=7pYC&'RKii.f@mWJ(SB#tGB_(nA#KiuWr]rurVQ>TQBp[qk4k35!.]s%36gLR]Y(mZ(BP^&aOL8*&K`*5CMR]p@M0Cj`OZfb!,5M6<&B%"F?)@l!s]=?Xp%(2OK/C3-oEliIJ`^B"pPSZ4CDG&!.a^aaiPD_Gd+KZo%C?^=k<]t;978f'pk>Vl0.?0Xf[$Kp2/Bg!!#Qbo^qcnh7Dk9lCso(=pVYWi2br$jpi@j:d[V1qXs0UCB4Es/dVgjX]i-4?bcT87upd(!l+eV28IhdbKFsMG#hXE^3K/llWO8gUrA6.0,c]_e>ufZf<8PfXp'=bjD'3`:fpgZIf+G9H23XO:U7,,!._b0p[/n;)RaSA4ukWkFY*U;+BJYmS)WGefs>>_q>C3gpTq"+!.^o-O:Y,\c/--\B4bb]Xp'>%jD'4fnF5q/Oce>&AIIfj!!(Y2H1Ib_K#3<U,P(Er=P!Vi(ihK!,ma\UMUq+FY@h,H!.^m4fs?I[kKf\\(I+f'n.0OsJ2loN\Wb(o\\#J[/d)/>EjuYH"9JVi63*ebE]&AL*'AIB<`XD?o]\>K!rt2b;,NIFRi?Kr^:q=_CB9M@aOL:MEr,EB"U0TOP:"\5_n$T`J?"d)T0Hr3(e$m4;l<BqXp%)%+BJZ$dCF>]Pa%D%N#4k@%dR9u!5pN8,K%pV;-dK+b*=KYCB9MXaOL:M'c\2e,L6&@J"N:&c+4Yj!-(V)9Pi1TNLl_JG^)46=ob?1E]&C"rVcKJ3]]<m4*U]!nK[@'!!'q^-75U8oB)#O2i`oYAmGdpPX;MWW!\S,4fVSe?L-1EPEM)2f)bqK=UuQ9TK^WOei#-5NccoRdL3T(TSbj[qUF0MR"h=0pitAt!!%DY)`MYJCMQ!k32EFKZE=?rWZbFG<1VXE?T2]IUfk$9Dr89?>mgYJ[lAU"S;N3HO<Hu3F)tL9![-llWr]5">[3f,[C(jJ8Q8Y'lWO8g^5fD#YH4hlUe-aW$O^+h!`0=K<s)F0Pa%E@D;,sG(d*'4J9<FD!#;njrH]>!)%R5gr7i#P"X-qL83g?^>/uXD[C!;Yh7CS:('&k<THNXak/QHO2K.Hr\e]h]"M#F91:"3kHM-R"TqQK)qK:As!!%CI5s`<t5PuWO-[4La!S4XY<&;VG!"tK^QT&Hr&7oG7$PtG"Xp"fu%,'=erVH1c<E0J8$=[9K5kTb7%3S5rKnVbjpnPL7r.u(7=P!TSn1SKiBq7;-dacm]IJYqg=obQKjD"Z$.kWHG3HHO>cel3M+7!)1!<+K,2V-=)db*4In`.ZkCB:B:OK/C-O.u<[H1PQWAFQ-4!0@E2Sinke2)R<OJ,T4$lWO:g1$!'L<WiI)7I,*^f!-h1!,AotL^8EWrV#X5-RU:JXp(JE6`pW$B\Tt4'Wp3Ih,tNq!4C=qM\fAn<I=K.SXGnf\e]g2&%NU/XkgU5o6@q4e#*us'sXnF!,@jq7utg9bE!Jp+tkU1FY*SN!HL$tF%;61OctuMEH*EU-t$<g!7VcGG3n/Yq*4iM'7N[gi0slT#7$*Y>eO[i'%)&(;c?iN#Z0iW4aU4,;/uC#iVE<FXD7ieRa9gGSH==,+CJI\5kR$Kd%EFlVkg-\n`*-j2$28s=0>e*;cESmqsUktZWYl]!&_^[eZ3b4F%,OH.OplJFfMOE/2$T%:jN'>r\?5aAVOq[3B:_bB@[4fe6X:A+W;7;SND$J0te#+%\>Lk'!&#4TUMV.3XtKZ#7`:9/EH6@aiU7V.Olp>5(/l:D#cEqc!+1J<QiV:Pdeu14j1E%J6FNK,,/u2\uf/D8kM_8mWn<[J\&ERO2lVDoI8PK!2(5Z/hXT?[H2flET0Bt-TsW+9:%7fH)J="\iPA1A*hjQo()@JF#As534BQO\L11E(`=2o>$AXis8MickM"YDHp1n<<d*]RTr^lhJ84,kTgQ\XV^YeFRl8O:cE:KeHBF>PX@iYo;$$h%b<-*Le^]q-B`RWE'Wp]QYMZEa1E@JV9%:^RPet;S=I03leNe"i/ksY\:]$sB-71)7NH,$(.kE6I_7F`q^3]H%ld>dk^Ht7R'GM77Tpj?q?G1ZiXpY60J^'ZCoD/=4B7'(&]9dYS!&]k-Rp1_J61jjCnZro0;Bd_GcG[Xh1fOk=]Qo]`FT<Q7daQZ&1c3AQ+r-0Z4*gBBlN.*%RaBDXd2e3%p.mpO`4@>splFLsA92g53B=Xu@j35dcCI&'/eA#Yg9P;5b++`<LTD4*'lW!Dc+6ApR`<:a7!)cD%hE;Y&HM`mQ'Gp!DdVXW.!4k12:c=?J<YqPO&o4WqHWJT'6ZR35@_\Aen"p41lE/'(7kkBAnK&o*!#bpeC;t_.ot0%>F3CjQ$L<)`l&?-3j:4M!2S-*acfAIg-tbWaN,29)0pLQiE)9FWl!f:O+k38Vl(p.EWG%t'bqGe"9c)GdtZUE9;h)?s88('N;t)DBOn"i\S,=n0/$+X\nfp#e>;)-;ufpu=gM_qIYS="!(a#LOH:VQL6OZ@:&hW0[Os0bAmHDW8=)Vp#&uG=b0ndR-n6^X\[akKnq;-k!4@DD+J?EO7>hq_$NYeK6q9bri(-52kd@M^V1&DYOHYllP*1uiO:_@^pa9.G>R;nA`/,0,'gN9[rENMK[q+o,kiM"sl(pg!M26t\Sq6%[oWOjXSu8K!>[/8LeH/R,Unsp8%[EQSbjAb5T0D@[[uc]5dQ8]:q!mC@GM]H+\'j+lB$?VtGO>"bc^22@bEjl'0DFD@"0MXXF&P7O/1b>FD?+E&g<l3;=e_mpa^(4`_SW%W\2ZE+QeVCD^3iL6j5\1@\_Zk\^]#^ro3T(SYp.)scl[c8;._1plddY6M>R&9M[o8!5CR.VL&eptNEJhE8Pr>^J,fI+2=/ei:EMT;`7s$n_hJWDQS3Q,GFpX%aq$`7i9]gskigZm6O-h">I.,4[C*EL[)tL$9Cf"i.Y^RT^94E9XPC0sdr+!Q;;"o2]`i^,.oraE2aqYEhVaeXBB[Ug>CQ,%"hf<mge`u,F/@jXeZ2c6Occ?2U"#5-!Wm&Bg:MP^2=Iqgf</;bMAlD_3HJG2>q+[Z?I6<.Dq]^.m-Io_BYj)N7RfjNT9T03j&1]=3`g:V\okQm5QQDl;<Q5ql)bC411^1LiUhSs:S1DNSL2hfJRI6@D6uWi*BSH8j@NNJ_83rEn)hXU'(^*nlAi_8f.BfOjlXE:m6,RT&FBN<2f;m,Ae",DZY%IVI:U9P&VC8siWaMYK=JV:d*Rlobn?pN8ek?+<RKX[`l=lUX&ejFS=H+JMjlD/_R+%+kWLP&[Z'p.HIr&fmGfPa1`)gp:1J]]@U`YM*pX7=eJ4(V+$P(F@JB?SbD-TMhRn+i27D2EB9+&pG//V/1_S4*g7U_6F`m?i9ijVHJXS4iWC`:#[)[=UfTFnTd%NfsNuh$mj4q1d(G8r@pgiR5S^_`l*]utfQ]%hS*`!OrmW^_Y*Sd^B>GE"2Q_jh_$n@"SZa[E92fB`P8[k\W;56TXnamU\NR6FR2aqYebUc&\K)S0=KiZL7JHKUT;(SE+7]VPM+MAPm9Nn8`i#l?oR@/!N^4#M/_:>Sf:RsQ.lg%3M5Dk0EN2ZhV<rDsomlP[We?WXY)G4[:.J#kbZEgdQ&Vjt_eC<6]D+i-f=0Gpeim9AOMjc\L.LeFs(+nP>hd:m3ebbO4#7b\XOY0nK5WdJl9:*0e96etMrVQ=r];s@Fp9d\i+cgt1iK:B\f<0*`Yp^>cGnc=MJgi9mDo'?/KAM`[RiB%&DXQDc?U*MpDJ<fVCSP4LHF.940RRc72/Lplg=j,dqt<1!oUmLh+$Z>4\9ROQ>5k[1]BDZc!s?(t%:=8_#tn&iVhTEmp?cqacI%++jlNmtq/Ya<-;BpsD7+$&T'b7>UY05WqXrCge4R2h'bqHuiMNKLN>aYep'K6@cuX^7nOM;KIer:Vg4LeoMfo@_lHs+?0B2]>Ycoh/:Q^g'P.l+kY.3)e?]0A2`dQoBn"&d;\DmeJ[r:GQJ(dJnprS^I:RjD,h@Yb$_L:=sgmn(d?!U`^qk[APU8"BRSmLHsNTlStPehtWdr8*0rK8I"eurFV4YVQsR[?oA'H\EX&\hA?/UmH^h6Ub?;SJu)GfG[[e?gV;dU#D\X6>UgdgT2_?b^mXk*.l?Ak)q7"`2mUBm?Aj8:rAY[S]n!aiVZ+hc"*7m<93-/^kZ:[nfq+Rb-!qU")I[LK5"h.%8?.8u#B63ec`l0;4Y)X*WF&@C4af(S^Gd2T3:UpF,i=d9D7gV7=%&p<\R*+4ANO9l+MkSMb2KMi.s#/_Ul;Bc.a)cnr3':e7?,2)#q'C##MTR`8/BroiU92Jr$TnY,K,`YrU!:S'[op[0%c,d"T3gg&Q#\VW<mInC3crUq2torD/tjp(%3,=cd\)"(>5dXs=Br]3)$1a9DHh4!IW1h!*2$B=L2(%UtfUAti;&J5s$9/"6[]n3VdrZO$Po&@WHe8ct_;%&mJ@02-M#6tLfrMaidnQE*/]KG"AM33+=hS"87gS5NWcf-:%7un^f;(OO\Pe)RY\@CnlCtA&NMJsZ[F$'At9:&DD3'eQ6mB[M&B?m#=I59'fBsl^JfJI9gJ9p,dHTh$(9q!o4eP;Y;AV3!ak,_guOqN4/5QLJpDr8:Rcd-8&(?$bh-77/q4*gBBNQ^qVcQ>;r1i7Z0Hd[R?\C&jWeS/BcC"f4GK;b"6jd0>_DV[p3g"!-)Biq:((LQX5,`:p)N'o1>bEa`eP,D!A6@BuYp1DR<M&n1?9g]kU2A9pYg17SLB_0V@V#?bTqZ*mpNg_`jX]r95CYcUH06OUcR7E5Te\-<R.k<+grjXa!745ONPL<-aH=lH^h;$dJ4?TQZ:p-Q2fo6q0*^>*IUEMgrPW%$:EjP5=YV:r"7ueSBZ"(hS<NBf11Of7Hl2bRI9uA\[Kh>%$1c7.iBAgA_C"&s,k,&-.r:og?i*]_,c9eN#W9([As.4i1l-lQ>Dr4;W##11.^X8"aaN-n/1K2IO2E%G3S>2i(V<-sjVpg9tF#\F6+@TjVGV<F<`:R2qB_S=Unbr@Z042H[n*a&ar/)4>B$[&C?$G2?IG;2I9/GlH*t[Z#ku#daZY*'[%#t/!rqbrS6\d(B;4'kWc3iqr1m=Xc897R.='++jbfn:ak:4hB8H5MJBp6sBPaa)Kj(W&E-Bf(L+_YrD7\NOD)i-BcD(KQd$G0-gT\O^d9hZLp2E*c_,9qh`m817;D,AV_XfSV*TqS0NSXkt.'=W=7H$T5]q$Hdl*&sr]EcZ;9Mphek,UA':DJBIlVeKf,5+rPTd^]ZDh*^ou4$1nRMsCr<M:'_upuo7,8PMnoNnq&_BkpUb+SnY72gbul1c5Te&KEU.C+U_XL%b86THNOk\H]hY',D?!U*nW741fIqV[([LBMZZKJ&Nfr3Vg[S)gh;FR5]%jT0@ZA2/4DLaplUABJr8BeqFJJdbYcW(`3u&KhiGa2<m29,LWHb%D#r`K&OV&djCq$/aRVZ!RNBb)M=*3%lFdL<EYYn]?gb.r:ofSJ,ZuqgG[am6\Z"`fs7Hg^:pgQjLtiQWDf_BUIY@VdndaXqWlP(8%AniQ'K>"I&JsooCLkSJ,f9#J"J`BB#foP9:%7O2f9TE!EN6%3]]==p84jig:V]P\prG@C$X?P4+@)eAMAMi`>h>1Yct@LLCZ%F^ANa.IV@WQ4jBs[Vd*tPCYRLocl@qOg?R4h%idP?*$"nIj\$l^g50F^['Oi:)pf:GcC?mOZ(a-TY?jBNRACf?)UrA4`,U!FVa,Lgb*BGShr4ckMP-O1YJ:(jZ=V4D.9!g$m4'*ZBhI-bA&l]T-dt,Sfdk<n1,C^h(CQBnRl`A\Ou>Jb1n)E^@h9^CTLM7BAa7dEe82)Ri!WKCo&7KAbEjm2r+5EX`M5n^lHl4,NJuXRVt%$@rV@5".I+!:Z%>'5nEA8p['V[@<C<lR!K:W*1gd"\gSR]7VGEgZdCNJeB#6>teCE)RZtM1%^jt+EB5cY>q<Ze@1h"G@mAc8;RsX>DSO8/B/R,Z"ba:-Pg9oD[e`F5kP*-GpKqUkh/m>Vqn(t_o04(GW3TepiEAYFZrVAD=l.!L^$:Z6MNC9KMbhCcsd%E\rkKinrp85'""2=Y5H'FEhrV\lA4D=$&NS64"S!f\lIq_qMj)oTk3!O.H'/^25*n3`ZWDJ5@B#>W"TnYu8V+*m6S7]U=bH(oRZa5@$db3=,_SSY7.=CBdEUXhH82G"QV,%d>T#4?p"5W#"k!l+"9a9Y<j&su<c-VE(lRQWhd[Clq[8g1*m-O);pRmN_*<fEM]Y$@q=jmp8gs(OI;+!^ghVOjlo^_RII695=O`dp/Nn240)`Q?O?VbaqL(,)BlbV6+\:=PXZp1-GIJV3X2lpeJlA?Jj2'H^*e=<I7$'QP*p)>o+\9[ZmcEZQN`5GK5Zsq"3iPUH*g=gR[6.;pR`5JHac^lq*cJ6-^qkZrPhS+E]\l&M_TK2f7gUAU@/m>VqaH.QG<`\"<D'"a.rBoJVIHSqKJ+2C4aN2GSJcaNB8sfJRHj[tWGOCtXBi;Qdm8R(cBt_nVV/bP8K*Dcg]QitoUIQCgG^uq3R!\f.oso/,eui<Uj,ZFQ/<@DRW3!(:oB+;Q%3)`fbo2Jm2<GS>jQ,C.B?r24Ye\)kJK)ESo8FM@K&1r.R8!Ype?f8Z")0qll*5^9qV9+\SN:ms\8^CKJ,E/j%]@[pGk^X^rVQ?8R5:aF[r0pRg0AP`l!i_pOis%BUQLZ[J?KDKm86tfpu98N5QCY&j2R(]Y-.Klp0;(&]M0XAq!mB'Dr)HR**`k9/Yt<lo*\o4heCQ:[;"*ERt0_flLsJkkNAIerp@2P+sJ5X=+Kon.Oq0@r7%]EX&c?s^tH)/;jgFM1hf8Y+78jTY$J)7(IOkKl_R7@B$[&c@:@!#3_s[/_Lr5EIX\J,]jb7fe4))u^8,R:,:;eYgu2C/9?XkekPk/+?T%;HRP?NO#7hlG3d%I)XY"`p#E=eH>.'eUC!t:t4)`rdKols4'TKt*T0>Dcq!e4Wo,Shl\`kJUfWa>=@DfNifg9c+RX0]HNRsCL4?P_G*#uJH&h>F][Vt&PeuW#0%NV9__R_u40h>&75(ES0Z=V5Up?g%oUs8)o.0e-5o#-@u;L<<TLCYJ?Si^K(&FRCaAnGXSn?HKDio8s"QNlsZhS4Pio]T/0S_V=Xe6Ib=*D3<CqOVV.>[73riBtc3A&aH^0eqXI8@NEgElO%UqtBEhGOJk_Rl^ULWRn=\s8Moa9:%9udA$qj%:8<JqXj$YEokI%i8EmLnHt^T6psGE?ba=!n(q<82Dd612/:XLD;2qE_U)RRNCOXORPqaf\_5WfaN2HlGW\&L4.92W\8X_P^0R4mPdGT!f!]GM;IKn>$8gGn\8`b<rE7_Un7@Y&5MiVQ6hg$)jlPU'!Om")If&j+;EK"QJL1F4RqX4m?$qUNrLQ0!dX:u@V+]A)'.s9!<`iIKp[2<*jsYLqhqarfcG@>*c'gMPOcf[qhNc.3[/KAi9'0fO$me6[aIGl]P+k6u-kp7j.9of-1)&7NA]bQVK;"OoB'9lLE21XFa(rD$n+3.Drm']>B@qQ4B@ta\r]$OVVmX6SXmbb,pKi2`<D-BrI/<IAaT>X34GLSa^8Iml\om>A?b`aYd3pDBL?HmTn(Y<)0JK_Fe#$l3050"mgEXa<rmD&/^3rXG8O6%*LI&fCj5Z>fPXM9,74AC>(D1<4Y[NeI=,'=oG^(2fE.FSL0jV>1,s4:0.0't]8F,9p!Y:B^Rp/pc;c?N^$4e1?fY)WU5X7T*3d&MKOn%JPVl-Hap@USql%F_C6%]AAX]e^l6c73pDUkaeE$KH.?j[5qJ4o@d\T?u]U"-2F7te:X[9^IloqP$<PYghUC"(0"dTsG+M2mUn*tP1r1O/fjmDb,)4*U*$oenQ\RQc-\:F7i.AS"T+30?o+0K(g14aJpt><5]OJjNH;0?qefSiqFDldi1HQ.;m76TuP5+4$-R,!UPS84uSXSZYke$=O32^j4qa-n'<M=E.eZifG<N@+R*)Y$JY/77DbKaM"=[GOLP12+h(W>>J$*I"P2fTI@^fIf2=ua4dq:6fJ"BrDg62,VnK.cqne)F7T>!baC95SNB?VlUjIZ/&4BN?+\\(_#Y^hHM-PJ7Z;kgW_/X[Y?ie_Yb5=9H>jc\2E&^giC6+1-:)6>H$XdOBk\_Zp%A!CfBf]-040_]59@d%C=Hq7L(-8X91E7F<`Qgun(t`HpL@-H81mo`g/J3(rqmWU+7J4K@Us"KZ!p/cP*M<_Qn`*VZEdFXPtLQ9j2Z<.esVqoJR)'A3)Q)BYB+`)]Y(o(s5<Sa-;76ER-'41WWOPu9$HAfkKd)):2S@NJYo<Ab"&8?BuRuF&!nnSg:V]P[(:\_p:GP;<b<,+83LP,Pc=cf"U4#MjsmLuP(6W]UqCCm"\1\)rZ%ePDJlV[Y3tZCI.?48P*?^q'8+A4[r1$ck\,Fj3;o[g?B+^`rZ`[oE,K2^C#mh5hRsRs$H/T2WVGN2^4-#!'bs`H:*"b2rN0;5._<212f<kbGeeP9Qa^hd`fnHcX=3@YnRm4a#F,jTR58JJ[982M<aFfqPbfQ[1NW'D_$C/q>-pgq:0)IZhnOYJ[;(u0Y-+Il@73LOl1tMejjea569D!moet7Zq"T)ejpDhQq"a_KIJU=L-%KG6*&nLrNuL$<kEDiEbGtp]h6^l0fsu+_7Vr(tgM`pN=1buPTR?OtA]pCq]Qs+lQS0FFIa$!Y,I<Dq-AHQ@-kbCLGnU`#!4n)-WM!=76(qr9R\cjWASl:4kg1JA<1u9J?7cJK[*d+A%$`.b,Ui7Y](.PD`BZ^TJ[`*I@VDAtII>n$US(f]oCG%dl;X`\V<QI,o/ooD"m+9^#3FBuq"aOEY$JY59hk<Rog,pp?O.FpTgK%e",!tf1rY;!0;t1<DqVE"^Q+>7A7prE4g;J>ldetSX&Dqq;0\'=2-<pd.Yk[*!-B$SKIA2A<uA)H^"Tu9@hcY$mp>gUX;k&C/I@]L;+!\QPq%'eL[m-f`C=`_DT@bX_0_rPUZGfA4AqFo<P!A@W]8k<BM`$[B2Dnd$_KV2RPo"$ZK;H,-?,C@Kl]Kh9h\5uhRofjnMoO_[r8<JXg5CDL)\OfdHTN$HV-m;3@$LDVbWd$3cle2f@8<O<NDFLPLGX=7mtO']65bG*B6a3MA;,1NSWFH1GU_Q%nQr(pRcs7dF-H03-utPra6CrM58FEq=8+EU.)1f[F,WeJ!MWg,.\7KI&!aC.iMO%G3q"o`dI^Z;6%sYIXcisS5Zh1ec,OEMgi`FWhPC=A8("r6%a,[G^)46=Km+gf[s:7&1BTN_VEp/,U>eM]>3M*n)(m8Kn\'\?Q\H5>$>h#]NOS(0sF9H*9?;GUXOP_lmYHiEp_R<?!Ub"G%"gQ]ZO2%=;@+S"rYFIq*M&'QbS%MI`.$SeZ2b11,=HVpa(09bM1d`B$HbUElO%UU>s3r$`f0a&q!rW?b_&c'*84:A6CGSAdPN"PZb:n=a^?A@:XXkL=$^9L"-40MG[=hbnHb05s[g%lKW09XH@"ta,_=of%(m+I/)mNTB01VI)44]A8OqjSA5[==_m*D,u1'rN@5#!'H%e1Z#D<Rb8_TM_'#sKD2Q0:9C>,X'jeIfI/EX)YX+3jl^=u*F@&_tNY8/I#j;S^$qKb<Go@Z+;Gn,flK@=XCHraI8VQX^lj/*lX]l$Y^`O@/(J1UaqJ:"c,n%2k[jP5Go&\'+FmFo+EcZ;cg,.c;!aI%Ah(;W7d@C\_,g3];q+Q<<WQ9RnQQ\_N8=&/GH#qq-?F!(!'&frr=VC9.g"G&_G7:rc8pg=#*I8d0P)!rY9*KN.'nrRq15mmXKi133)_bZMkZ,aHaYl%8U3keu3K!QhK8RBfnH'2m9.)E3QEU_<ILq-B]u:Y>_#ql\=0*0<#KT>mU:P#E+X/*s6UO4I%,o<l-X^gU5!F!99lZ77/?-')CK"8bX?fZ`NSM'4H?so!b*>8(Kd;tlE)rIi&g,*.+L%SW9%JIZ_ci!I?g;HTs8Mt1HX'eq_`:7'9MJ5/:S+XEWOQ?hZ=W6%A>Vm:+$=cJFZOmC/@&5q<34i(qsClBe5R]D:p#K`+0JkZ;GHY(2E;+;_<0O`F)_I5^_dS%2upX'4sUl[H?\`.JNn=$G$mi8ZZG;)8Z@eN@^B[kRRl,'$P3sb6U(C-";<.VSN7Mc6*X1V4Sf!Tq\(>POL:8$,^bX53Oi+)=%MaiBOdl2Q#MQ&MfM^l,6'T=g4]Js@pqQ?1>n$,.<Ias:7F.9oR*STWeN;Y/1`(<]"<.Q.]WojJZL1MQ`mZ%/G/T,9$s\/>SNIV#(O`9?e,T26&KF5](P1.Q_@0*JUqQfktGQ5\od17<:Lf)1cRH3Rgg8m+J"$iP*X7r$X&rFX?os+0^gHF0LbQJ;JT]`J6^#@Wf-!Y]Y(nmT]ECLaRn`G6/hV.fk"b0eJ3&QE/#LV>U)a5:/"@2f%*;$Mllom>WAe/Ef#id?k?EH2H=Q`c!%<P_FpY`qtg.IC!q[NY4M5Td&9U(/h'^K<jZVl$;t`r\5DNgZ-bRXoOu!grJZ\oa@]A6+H>H\V55Ir0hdcX9o=sk(7jd.E/;']GOOC^r!EMhkie-&g;Ke%fs7HC?o#0($)g9e5RE+OMl+KJD5f]hnslRORnE&TadiiWPRF\_d%LR@B4bb5Sq$Y2D="X6YRir^4[!(q_OWc4e-+Z0OAuJAE8eY;LaSNhgn>PjOX2YNC#G_abVo5hp@tq"-japSE#m$?Nuq$N@pi\@<:Lf)'ODKCE;79`clig@+`"E;<QOG7jupZpVFVb1l@)b=a@2&^\nJf$4$+DP(DIRJ]Vs9<2i?l-3,1E?&7hr+M^IoFZ%K.>+uqB=\StT=jUrZS^`]ioCeE8tPh^u8._IUl33d6';,<`DKbO6iP!$f8Ud@*hor.*<`5T]pX/i9m"$,>aR57A]7JHQEh>>m3B?Z-5lP2VOEHcVn4SnBYX;*1aBF/>aG+s-SO6ftC0O%b+o_%P%@YKn<a`E.3/6,P-2IA*.5Y/2[+TP(jKYpZl@R\]971&n<T0F49j<9UW6bLmG:RA^Bn3-Tm\l:Lg'p[;RJ&rO7/f.-3S04>2.b#cL4Xdk>i\@A[GACdH/7B:!H@pK=0neNRJS"4]Fb!`8.&r3f)kK0;U*`1,M?crriM9i;U):%`UP?r!JughMd:@n^Y]S!D)6AOug+8Tc-jBm,Q!dNgLI3[H<*%tSdDeJ>eJS)^+Uk?LWQLH_(#6KKZY%JOJ'=97q>'hs9L!q"+?"W)^4!oO/QoBt_o&6aeZ(ScB[@mQ6d55kfs?HMMG50*Su`o<9se3u's19(5&kC&H#GD],!o=WV)DRpPDk_W8A1P$9HN3O_1N<fn`.Y90?W/.Idl:3,qhc&?r^/Y2CN]q\QgNhaV1'9'O*]ISatdj-*2\kDfG4QXMQBL=#1Y!,T"]am+\u[<(a5*M?d?igL8!SQ+S)jU):>Y;8ZrK6.QsbBJLtgXQGR.r[;N&=Da?sHk_3<GdZ%5$9&i=9'YMYEM9\`@?u\@84lL+_T5V)!Z8#&PEV/2C19ZueudIjeqb)oUgf7r?(7@Sbb2?(&PT<1[>K&sZJLWa5?8@]38mT5;Y%n@gU:sn-#DGN=\Z'j5`CY\YUR0GdZGbE3&[D1ZWFJF9c/ei-;/3Ek[qGMmI:/Rq=EApQb&BB!IfKT#c?S=huGqlQdXmRit6$e+$VBEdZa`47HJ!2;TH8F`_.G"!qRHc[BQ[0j9&ceB.cRa<CfII">2lh<>]<Y/B_3c942mm>f70UX,H*T5d;4bC?4dL/XOo4F]qsPo(oAlJkuk[j/CqBJfnig>e!0g63<S3Y]AjJ+uP/+B">iM0e`m7"IgmLUZPH-QRL10)uoj3ZaI1u=fm8Va:pHf1rrj#4MgUMbLH_OF-&^PI/"6^ai_bhqUQ&p(]MaJ1#pfb=%F;)mbMYlBIJ0n[r1#2@q-TCG_"10I^+.f@N;CQ\MEb"WF5E"@RnNj#.hCWY_!YmCtZ)t,Z[XBmk'.[W<j=c.4d#tp[6kRK*P+F9fY-3f71OC"!(^Q@KlE"ldr>45(1"krAsOo@73&2;'V=C&)=jF(RJX95h&XtVbWd"qFte(JUmh[GO=,'_[d5D)rYp.5O;\hJ>Klg\NqsUZa8akTVB9&W2qoP9?-aI\PNp%-SY#J;@BO_:73j@ru3k4R$jB<iPPoui]hK-MPu,"Dm9'@0#B;h?s2&1=ot`,j<@&j>r7$29s_78Kr)k+N[:3:f</E(bfojp3+js^NMD6O$A,?:Eo[l1p?a*SHKikSgmc2rZWuLb(`3BVJk[!7;7"h(X74PKit-8#i5&[4q>l8)LEi&q9@d&Jp^m#0'etfFUApo^@d!O]pdgu-#(M,Pk!N#i<HD[kKfMD,,g3['ZQigHj1]o/fTK^<9+2h)Hs!ItiMnc:c2T)fn!K.X5G#CgZ1Fg[*&1oUXP-[4A]pCU1k]1./qA.gEcS0ZWDZD`N#[aU&6K[4eHUNF(gem38j`(Ojulsa@9(]fc^p9r^d>QB]&FO2=B6T&W.IZ\YkeJT_D$=E=k5)!T@Es_&OZ,02+AD,'3r8!\Ohu3%2q'bbF?dD5XUu!D[p:<eY9RJ.#+iqeH&O/'4_84ef))?M*64ZOKU2Ak=2`mcGaBuj.dG."BL+K(#)Tlegme?ApJWT2fIP44$/)dMnYe)N6opJn;#u?L\#%&+(uHGa-J;]Jpp[u;?`L6FY3@VhnS2.$O[>ZD/JA)oB+:b66UXVEkRS[7j<km=L"TlSmLU*SYMpRaF\+7LSR8:jtId/'d1=<:!h;8_&q`IU7WC=F6ARAM[N]iX&c@MUIWN(dKC1kaGDG_B>SK(^9iTQf[A1\9e\F^7IqZea6"'5r:q#*]'r^,<+0?L20S=gdG)"/(3K34;%F0J',)&/JsO:Ls5uWHaj&(AkVoc;cra7N^OCTq^td7._u'2sLCP=3UR48q^>'+:&BpY)'-.Q!asHXZ/XR9<eHUNF(gem38j`(OjulsaiM*%M"U0>Op4ZF6-c#,5Q'Cq6ojs\tLaoq,`\06B^ekpQ%kPn-`CaN\J?32oeO?MYDr88<#ml/g4$#DX:VSG%?GCr+Df;hUV%k$m0)@F:StHq/`mNXS"[OauEo[kJ">AsNC/'(>Qbp;c/9?3'"G=LI[]*^tC+_,-C>l#.`\TA*lIDqJBP:Mt-eI9XeZ2bA"'Ij67R9n[EVT$3R"()62>6LrYIIbVEcPu4CarD_i8s(>i+=E_Lc&u!W!Vl+Q0KhIjFnC'?Hf!(]4T<Vi)EpiDH5Kh8j@e&=L)HDBGFDmd@%[Z's,?C=.hHUp2KWc:%Gdsa\hSkjbF?gH?sn;$'l5eGOD!V-)@3l3R43ZlfdQ2-?ph>$0tA2r[&s=>$G4+7L'0RUnf9HHprWRmVm;kc-4CZqtBF;a,`/sgdjWL+Q"IYPu%X<gi;GuPu4;Gl0.=J(`4f1]U4)l5gd)cn",T$%oVu,D;4L4[>UYqI*2[UkLJ'ob:p6.Zb=#a1c7/F[;1!QfWc'Tp?/&tG3RG/"StK@%e4;5&./b5!,VAEJHPW>p/$*?>?eWh<F$lcCu*n%1c.$_9MC%jKB_c=^-PHpaG**T^m9j-.--(pc^mQp7bZMIW!QL7fX,AAVb`qL/43`MT!,?$QBkRB3d#&[S1-?bY\\jQ]UIPjf`P.4kic\hg0hcH.4K;u^djD)+g73$S"%`p488I9g[Zh^Jq?4sFmE(ABW.>e)-#G>d4ljj6\WAk()DXYKiqM[W!PZ/2/1Jaa@!Wt+)pGjTjGEY)&jNI`kWmTKS2mF8:pkA:m;OCY$G8EGVN*79hikN2/8'k4o3Bj1TD2SiPUGWB?u=d<2`Uo1gn:[(&.1S=05#6"OD?N[Fm;;d-3]?p'_p#Y\M^gg=k7JLCQIop8il2\o?Up?smC0g9oJ]e[otiL9+X%)++ag;Mou'q'RXA$=O3tXf&'5'GPZZi^HiTom]5MN*mYG*)+qDY#_Zn]=WD`9[&\J:K/na"\#u>Vb`op+$PWC83RH;BS`%fGOJl"hk4Ssf<8QUn)*TqjTSZbT@U`)qaHDYh7@`%eT+M`n/>[9Z*CS4qtJ^id6V@OQ5^\Z.@4s5Z/Wrn01e`,*ZcB`/Q?@qk7&@g4F$?\#uso#a:X,[L$R?on'e11,lp+k4]>6VGkbma&3"Oa>d7alK7a:%-s3NNXi?DDO0i(C++L)ZTTG$A+$LZ+G&6U%\NP92+CCm]g9g+oWDbT/1O6K4JLJ>-'+to^%j$[W*+CjFhL*1n$1N!-4t6^>!DGI'.r2tQ"_;`rctQ]ggGNct.,g.8W;sDgM2<*(?iWcUgU(ZNHhQfIkK_JAXXJE%.-FrerAABA/Fk5?KGuj/[k1gmPccAe0YP!+\1qL5ZtRhgIK0gke>UcN&L02PhHWlRTPE^>-qZX/^3l?=S/`Lggp(?ZZ4r[_M$[)KeZ2c<`Z)\mrqgVC@U_Sf!;S1=VP[t':7Vs":S'[?Vj:2E6i?oWhlpZn=4\?JC;;%co^pqph:Jc5a.Ji#T0IfhEo[K=@<6L288)C=i8NVqR<*Fj.EA;^3M;%l/mX?nN.g/OcTHc4:7O9u4[$Ie`"Z_bWMuk<k03);UB`PZ[*I%FYYUlT1M>!lO,krXY:iaLa;qHk^HQu9kgH;##7hklBkaQLY-+IlJa>HH-tqehSbMR.;mh-r_kT__d%XC47ZhWP<N/lmHhZqO+X(e@oXQbH=iJ!smuAJS*YB"3^OL`C@q.C4f;8"eeZ)W9043l;MB$neH'$M"c&E:%RPekA4$,)uZ6UqNWsl336bt^/rVH3Rfs?SQ0CIT(0DW10fHti#PZ,:<53!Ac@M^\(>e>/2Ju5r`[?d*oYsAU"LFH0!m+AQFk/m3Bf+\qA!U/X]K*T<2_?LDc5UK-V9:ME?H[:!mLPKMQA0;Ga>"42J6om4aG20TI2E!J3?.>iP#@mr/"!j[)oDh<_"eoFCDJiEQPb4S?Q'E)0Y\RZUiU-"Q)&\j+P>b*BqSI7>h7ImJKF%qS,lMZ4X;SZOBP;'O8r=fV5t+Xg!Hiul6+)fpR@0I/fq<@^4K'?d:fVS5<":`ifIb/qa:%[^ef>bOrVc\WAUm##^3uL6ffB:*8H=3alI77NfP/g3&cY*UAECt!]6*9=(U7i3[VOKtnbLuJ,lefA3WWN;%RIRc0%/;#`IFSb:sM.-'GO!T^]4:[iPGb30<oM;7iDBj*&_UMZkjeA_hSc&(/rMgJ,fM>4aX&$SVhq-;al$>bsq-*CtZ*=7uih1ja\bD!%89*#0I#_Jg-=qcIT!q$OR*]!gbMj/6'$9quY=<r;?Kfq"TON(S]B?FB#5;KfC/!,9o93]7>E^'e<=8LL7`@[HtFHMXl:9hnIpWF6D2\A",An$4[P8KXJ%gd+$PjPD\nfe^YE6@EXrgkKfbj/690kr5J!RYLCtLQS2]0@`/QI$6:--'"&Z;DX?fZ5(!"i\@=LPRF:b?$:WX`QS2]`gph@ni5)6_QhpRT[VOKT`3K^b.PtniaN_tHcC?olp?aAK.mg#EB_D#^e"*#!C=fU_JpXn?e^-NE5!BPj&W)@$"U,'Ol3P?^6*(24KM"KaOF';ca@'LCc;i2^4eYDC-T[U(W;-2[kIl6:daHQEY$C5[mr)uWX/DjCr2>0tJO,&$*<lrkK^OhWMF*E<H1PVcR#t-@"p!2%o]X]ee#-\cA*;11n)rkHDf=O+5m'HI!V!l_D;%7%E>2P6;FRUs-,K?Ehr07IB#.Tb>JORdK6?0%3d:!SI/*38YcurqG@tQ$;mK+@0>MD-?b_'J^k!4N<WiU2,2>+nfT=lX"8)9ZHh?MVC!rg@k\+MLoQH<ESih:=m+ARcldh%72\*N3@U_Yb9hS-[H1U/N/hW>8:L:A>c/HQqOebhJ=GHAAo4JL%TgOShgb9KPIC!P1a:h/99"q'q,Er>2Er>]P\q[O8nFl8(gtZ.F0d,3a-;<XTYFh)FQ13'WJuP`KBpUGX]Y(mbPrK#Ejij,KKnY6Br%U6d,4OsPZV-W;V50p&jCc`+"nDj.?tj=XWDY%:O;09H1c$q/E,ZXSEo_fU$[1mh!H$oD9DrE=nC;f0H-+1MbEjk(4*I]hP8!L*;8UeeA&j-&#6kD<Y?nm\,7(LDqXnW(9236$r;5rt8DGsU11F^%6:4+gI!k;Im)1;oVbWe;%3($qH.T3)@*qrEM@(WAkK]XQ]Qs,@l-hdY4ftigakLGRZIc-YcedM"N\ij\4>o+kjN3Sh"U2PBR@f'K(b?(5#&a>3m0a^_`)+=,0W`-<+M,.q(j*9!.);-#>G)CHbuN9q$jWO=(Ddl"&V8F9.8RR!m>R!_eCE*'L1tI?gqJ46rr)_T+$Y5%U.&:qDFKG)iPL9R%iui#X1AHK]YfdP5Ft&eHM-Q'Urb]BmYm*`":Z;*A4X1Ih8#>a[C(]a:MSCXdCabr?G1[\qYJL*1C'W4`/,.On(sne1jK8P]8ObQ?!UajZtWI><\<8i<j,gMH+L>gF'rAu>QjshW784jfBCHGnph5m4s99c3d#3+hRtW:.9!*oh:^H5+H?^b6q9`PM0%"74\(JM'c%QSV].''Y?nobcH\mDK2.&UJQg[/?_8l%.\%7#Z=V4nIJ`m<qp1`j&&'tS/a^]G.utc:VX@O-q"jY6])D3]bGhJ?a?\q6SND/iBFIUn(+k1qJ&q"(%&/B,",mN'\nB>1$o-!o9+__,n(kU"qXeJ=-A(KX8X#5FFm7<X=d&9OU+iB$C!remf<-7QA&jT54'Jt&%34`,J,Ta!IJE<ja,_<Bh&6X2!?M6OfSph/cCR1gS=CQ>*PGjsJr(-gJi:O'6*:V*%>B'aaigmn1ot'!IS^Q.e8<sK*Be^*0/&AMhC\,>s8G1&1U?B?ldu19qsWCuhXCWEVP_4COlZ%Sh7@_jFQe7F4Wkji1c,mo6Z]Q=Z9ZEC:uFQGVt]Z;ccO9pd,2EWCICPnE[ueFUreT82\nUL'M]`bgU8\C!IVc,Pq*L\&eOou0iZs7MZ:YV+$[QucC[=nPa&P$p$1ejV[j_)XF'^0()@\H<=9uBo^nS1D/*j%lgF0^'GL\VrSrr'p?gUiYR^M2=BJ+\(#fL@'Y4[CL9:V368tVp!s8YQZ*5?mZ7'c@)(<_OcHZneK)rhC@B_Fr(q<JTedVdQ5ZRCHo>/!O',*<@fRRd^r:ogO['7nhc'mn_l`9u6J;P9b)rhLH0)1]mNt7%-Y(FscfWbNu)'nV7eZ3o_hF3s2CBc7+Dr/,mq?*aFiPL;-N!s75(fR6J+X&#MMr!1Dm-X1E[r.1iML=>X'NM272)dJ_gpo4C'2n1"ZXuWq7df!<lbnVn?sJMcFA\LtM<E3W_kPW/e$j8Q^1>=ufK1iAp]n_Lo$%Xf1c.$S`ipQ1_:@)dcd*,Z[s7H&R$\]nPg%?FKI#OpW%Q1(aGF<t88nP)lS!Kj$km;.lkddIVl(n9^1GKR-71'KG>YSI^OH,VSN;<^K5SM\Dq_QI,p`_7+/R@VK;BJ>?bZI8n%U15+4rHp;tMXn!_lB`li\]FZ*EQHZ_s.V(D:@W_*s7t77BYa`l?$=a!76"K8']i^4#mtM\i5d-6%V.'@;irgfuZC9g]"k3+sk34Die/1`n7S?.$B7HZTWV8,-[-Q\5O^q!-B[<O\-C^\INi)q$5R.C_=Lm^?ue<ioO_B?hLDn"E+(p?C$2T%VQ?'(JrnacpJ]#'+TnB%FD->K#O8IJ^lnrVc\IK7i@4S\&^k12&GcK_Z]RHl2,XYF^rA",06SM"k2'<eN^JK(_BVq@mcON<(a<Tgaa0B0^@^9?:AROC@]i`f*40,8rU(3a,`l2eg\C5uWa$#Z7p?9lrQoF)l;QUVO:Ps8G+4;06o%6:/QZj2^+\mbbcT-g=JB&($hnp[1=Qe'cZfmbA+#7=5t3DB-01Y?nnMocS1if@WNCbcYj>]#`5[G3k%["U7NQ_Yj6$iF/DKEH-!qp[<kD+B:r-YRBq`fLVEX[#L"]W@Q\IjiWkTltj'*i5(&MIG!eqFmDT"L[h*?SXl;`b$28geZ`IL?!Ua`-V=Nqg=jQd``?,@n@(rbdAo'8bZMT,q:;ZP%idQZcHOV\V[jTd3Cm6WrB#)_%!&Tn4*H,f/m,>cb*4>"7ui8V3&in)C"%h#R-6mf1#Q`93cu>uC1JmrY!Q)S:(;86OFlnOcVG3^OT91KY)SSp:`tXTLkm1]+I>KmW#>_&$jZrtLhmV8U'g(a9*0j#k+Kic>.=p1J?D.mTNfc'E,OaF+ZbTXYb=l?hS4ONOp2PJmbBgc"2^J0=gNj]4\X)?`s:l:D+>M#>gLpL'UgRr,=Q>Q-45gXOk<4fcCGsZE,fmf'EBH[K0l"ultb1R=i?CH,9u;caAP<5+#%Wi4<adr%Y"K`%2oB>4?P`^^^,+Z$"+HT]Z<Ui1uTF!WR0#=^c@.(L?@X\\BrOHY$\qmK*MoViDZXL"V4b@@`??H)\Id&;c?J_3X)OB!0)AohA)jE#sNk<r92P'ldr>X1SgqH6WZ3`g'"\d&jCU3A3W:C@N]Uta:giIR>lf#"JR/5fL6e^aq;X8+=&38`]/>=Cgs"%f<88G'3Mhf.B3X]$R6\mmLB<nqYCg0e[p$DL^2rdk23[gis#r2Y^/OD^=ou1P@iP'gOgsa)`B5q-j\K\\X0gQpMPY2=T.@)Q]^4A"06aH.EWdSD'&n)QnX]YA&jTQ7tVOD"';X1\T$LoU@X2Ud!9/O:j<*l;2$qB5[Rl*<s"PqTiBr,a_T"(4*'eG"@lFKWZ_A\&>]NgiSb=_!^gc0O!^MC2f@D9UZf%,MR&+`n(p@Dn(bHP:f%.G7q)a9St);Z.u9%=M%VqD60:^SAC@8F,]7pTH]t\aZY*&N<0&(`Ljc[Ifoh^AM:#5;b[tF?3N5I3l04>q/1iH1!8Y5/,Cpn]"N26=E$,`pR(n8NTLDD)UBJ'gaFgpb-VpK(85):-T07NjT9rQAB70[S'dcaZ=Es/_/_J&,e#-V!#mgq!#nE[T\WI7nS2cY`(CUc8L3/ne?b:LK@#S,e<l@,:;'h3'f!?E#W*Hm=<$tMG?9M8=]Ke<lK2*'b"bJ=@rh//,(GCgFn'ekT['UJo:8!SlH$QWB[$n_85X@\%5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&_12@nYCDWs~>endstream
endobj
52 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font >>
endobj
53 0 obj
<< /BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font >>
endobj
54 0 obj
<< /Contents 154 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.rst2pdf_image_0 51 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
55 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Modbus) >> /Border [ 0 0 0 ] /Rect [ 60.58575 571.3894 218.4257 583.3894 ] /Subtype /Link /Type /Annot >>
endobj
56 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 50.01575 129.0394 0 ] /Rect [ 279.1024 524.3894 411.1024 536.3894 ] /Subtype /Link /Type /Annot >>
endobj
57 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 50.01575 240.0394 0 ] /Rect [ 279.1024 506.3894 351.1024 518.3894 ] /Subtype /Link /Type /Annot >>
endobj
58 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 168.0394 0 ] /Rect [ 279.1024 488.3894 393.1024 500.3894 ] /Subtype /Link /Type /Annot >>
endobj
59 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 636.0394 0 ] /Rect [ 279.1024 452.3894 411.1024 464.3894 ] /Subtype /Link /Type /Annot >>
endobj
60 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 747.0394 0 ] /Rect [ 279.1024 434.3894 423.1024 446.3894 ] /Subtype /Link /Type /Annot >>
endobj
61 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 789.0394 0 ] /Rect [ 279.1024 416.3894 417.1024 428.3894 ] /Subtype /Link /Type /Annot >>
endobj
62 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 279.0394 0 ] /Rect [ 279.1024 398.3894 435.1024 410.3894 ] /Subtype /Link /Type /Annot >>
endobj
63 0 obj
<< /Annots [ 55 0 R 56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R ] /Contents 155 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
64 0 obj
<< /BaseFont /Courier-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font >>
endobj
65 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Two%27s_complement) >> /Border [ 0 0 0 ] /Rect [ 167.7357 402.7894 391.1457 414.7894 ] /Subtype /Link /Type /Annot >>
endobj
66 0 obj
<< /Annots [ 65 0 R ] /Contents 156 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
67 0 obj
<< /BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F7 /Subtype /Type1 /Type /Font >>
endobj
68 0 obj
<< /BaseFont /Courier-BoldOblique /Encoding /WinAnsiEncoding /Name /F8 /Subtype /Type1 /Type /Font >>
endobj
69 0 obj
<< /Contents 157 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
70 0 obj
<< /Contents 158 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
71 0 obj
<< /Contents 159 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
72 0 obj
<< /Contents 160 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
73 0 obj
<< /Contents 161 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
74 0 obj
<< /Contents 162 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
75 0 obj
<< /Contents 163 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
76 0 obj
<< /Contents 164 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
77 0 obj
<< /Contents 165 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
78 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 633.8394 0 ] /Rect [ 40.01575 727.3894 283.4257 739.3894 ] /Subtype /Link /Type /Annot >>
endobj
79 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 381.8394 0 ] /Rect [ 40.01575 678.9894 257.3057 690.9894 ] /Subtype /Link /Type /Annot >>
endobj
80 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 381.8394 0 ] /Rect [ 40.01575 666.9894 76.69575 678.9894 ] /Subtype /Link /Type /Annot >>
endobj
81 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 294.8394 0 ] /Rect [ 40.01575 648.9894 256.2057 660.9894 ] /Subtype /Link /Type /Annot >>
endobj
82 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 294.8394 0 ] /Rect [ 40.01575 636.9894 76.69575 648.9894 ] /Subtype /Link /Type /Annot >>
endobj
83 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 207.8394 0 ] /Rect [ 40.01575 588.5894 271.7457 600.5894 ] /Subtype /Link /Type /Annot >>
endobj
84 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 135.8394 0 ] /Rect [ 40.01575 540.1894 276.2057 552.1894 ] /Subtype /Link /Type /Annot >>
endobj
85 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 621.2394 0 ] /Rect [ 40.01575 522.1894 246.1957 534.1894 ] /Subtype /Link /Type /Annot >>
endobj
86 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 528.2394 0 ] /Rect [ 40.01575 473.7894 246.1957 485.7894 ] /Subtype /Link /Type /Annot >>
endobj
87 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 435.2394 0 ] /Rect [ 40.01575 425.3894 238.4057 437.3894 ] /Subtype /Link /Type /Annot >>
endobj
88 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 330.2394 0 ] /Rect [ 40.01575 407.3894 265.6357 419.3894 ] /Subtype /Link /Type /Annot >>
endobj
89 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 213.2394 0 ] /Rect [ 40.01575 389.3894 256.1857 401.3894 ] /Subtype /Link /Type /Annot >>
endobj
90 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 777.0394 0 ] /Rect [ 40.01575 340.9894 267.3057 352.9894 ] /Subtype /Link /Type /Annot >>
endobj
91 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 690.0394 0 ] /Rect [ 40.01575 292.5894 283.4257 304.5894 ] /Subtype /Link /Type /Annot >>
endobj
92 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 618.0394 0 ] /Rect [ 40.01575 244.1894 251.1757 256.1894 ] /Subtype /Link /Type /Annot >>
endobj
93 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 618.0394 0 ] /Rect [ 40.01575 232.1894 76.69575 244.1894 ] /Subtype /Link /Type /Annot >>
endobj
94 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 546.0394 0 ] /Rect [ 40.01575 214.1894 259.5257 226.1894 ] /Subtype /Link /Type /Annot >>
endobj
95 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 546.0394 0 ] /Rect [ 40.01575 202.1894 76.69575 214.1894 ] /Subtype /Link /Type /Annot >>
endobj
96 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 50.01575 681.8394 0 ] /Rect [ 40.01575 153.7894 238.9557 165.7894 ] /Subtype /Link /Type /Annot >>
endobj
97 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 474.0394 0 ] /Rect [ 40.01575 135.7894 273.4157 147.7894 ] /Subtype /Link /Type /Annot >>
endobj
98 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 387.0394 0 ] /Rect [ 40.01575 87.38937 270.6457 99.38937 ] /Subtype /Link /Type /Annot >>
endobj
99 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 315.0394 0 ] /Rect [ 308.9102 767.3894 534.5302 779.3894 ] /Subtype /Link /Type /Annot >>
endobj
100 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 789.8394 0 ] /Rect [ 308.9102 749.3894 443.3902 761.3894 ] /Subtype /Link /Type /Annot >>
endobj
101 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 40.01575 674.8394 0 ] /Rect [ 308.9102 731.3894 437.8302 743.3894 ] /Subtype /Link /Type /Annot >>
endobj
102 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 228.0394 0 ] /Rect [ 308.9102 682.9894 523.4102 694.9894 ] /Subtype /Link /Type /Annot >>
endobj
103 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 228.0394 0 ] /Rect [ 308.9102 670.9894 345.5902 682.9894 ] /Subtype /Link /Type /Annot >>
endobj
104 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 117.0394 0 ] /Rect [ 308.9102 652.9894 408.3902 664.9894 ] /Subtype /Link /Type /Annot >>
endobj
105 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 117.0394 0 ] /Rect [ 308.9102 640.9894 507.8602 652.9894 ] /Subtype /Link /Type /Annot >>
endobj
106 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 735.0394 0 ] /Rect [ 308.9102 622.9894 417.2802 634.9894 ] /Subtype /Link /Type /Annot >>
endobj
107 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 735.0394 0 ] /Rect [ 308.9102 610.9894 507.8602 622.9894 ] /Subtype /Link /Type /Annot >>
endobj
108 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 624.0394 0 ] /Rect [ 308.9102 592.9894 406.7202 604.9894 ] /Subtype /Link /Type /Annot >>
endobj
109 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 624.0394 0 ] /Rect [ 308.9102 580.9894 507.8602 592.9894 ] /Subtype /Link /Type /Annot >>
endobj
110 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 513.0394 0 ] /Rect [ 308.9102 532.5894 550.0902 544.5894 ] /Subtype /Link /Type /Annot >>
endobj
111 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 426.0394 0 ] /Rect [ 308.9102 484.1894 546.7602 496.1894 ] /Subtype /Link /Type /Annot >>
endobj
112 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 339.0394 0 ] /Rect [ 308.9102 435.7894 549.5302 447.7894 ] /Subtype /Link /Type /Annot >>
endobj
113 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 108.2394 0 ] /Rect [ 308.9102 387.3894 535.6402 399.3894 ] /Subtype /Link /Type /Annot >>
endobj
114 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 267.0394 0 ] /Rect [ 308.9102 369.3894 420.5902 381.3894 ] /Subtype /Link /Type /Annot >>
endobj
115 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 267.0394 0 ] /Rect [ 308.9102 357.3894 507.8602 369.3894 ] /Subtype /Link /Type /Annot >>
endobj
116 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 156.0394 0 ] /Rect [ 308.9102 339.3894 551.1902 351.3894 ] /Subtype /Link /Type /Annot >>
endobj
117 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 156.0394 0 ] /Rect [ 308.9102 327.3894 345.5902 339.3894 ] /Subtype /Link /Type /Annot >>
endobj
118 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 60.01575 777.0394 0 ] /Rect [ 308.9102 309.3894 407.2602 321.3894 ] /Subtype /Link /Type /Annot >>
endobj
119 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 60.01575 777.0394 0 ] /Rect [ 308.9102 297.3894 507.8602 309.3894 ] /Subtype /Link /Type /Annot >>
endobj
120 0 obj
<< /Annots [ 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 85 0 R 86 0 R 87 0 R 
  88 0 R 89 0 R 90 0 R 91 0 R 92 0 R 93 0 R 94 0 R 95 0 R 96 0 R 97 0 R 
  98 0 R 99 0 R 100 0 R 101 0 R 102 0 R 103 0 R 104 0 R 105 0 R 106 0 R 107 0 R 
  108 0 R 109 0 R 110 0 R 111 0 R 112 0 R 113 0 R 114 0 R 115 0 R 116 0 R 117 0 R 
  118 0 R 119 0 R ] /Contents 166 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
121 0 obj
<< /Contents 167 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
122 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 789.8394 0 ] /Rect [ 40.01575 709.3894 132.2657 721.3894 ] /Subtype /Link /Type /Annot >>
endobj
123 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 621.2394 0 ] /Rect [ 40.01575 691.3894 126.7057 703.3894 ] /Subtype /Link /Type /Annot >>
endobj
124 0 obj
<< /Annots [ 122 0 R 123 0 R ] /Contents 168 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
125 0 obj
<< /Outlines 127 0 R /PageLabels 169 0 R /PageMode /UseNone /Pages 149 0 R /Type /Catalog >>
endobj
126 0 obj
<< /Author () /CreationDate <rst2pdf.createpdf.PDFDate instance at 0x7f56b83c81b8> /Creator (\(unspecified\)) /Keywords () /Producer (ReportLab PDF Library - www.reportlab.com) /Subject (\(unspecified\)) 
  /Title () >>
endobj
127 0 obj
<< /Count 26 /First 128 0 R /Last 148 0 R /Type /Outlines >>
endobj
128 0 obj
<< /Count 17 /Dest [ 54 0 R /XYZ 40.01575 787.0394 0 ] /First 129 0 R /Last 141 0 R /Next 146 0 R /Parent 127 0 R 
  /Title (Welcome to pyModbusTCP's documentation) >>
endobj
129 0 obj
<< /Count 7 /Dest [ 54 0 R /XYZ 40.01575 747.0394 0 ] /First 130 0 R /Last 136 0 R /Next 137 0 R /Parent 128 0 R 
  /Title (Quick start guide) >>
endobj
130 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 711.8394 0 ] /Next 131 0 R /Parent 129 0 R /Title (Overview of the package) >>
endobj
131 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 549.8594 0 ] /Next 132 0 R /Parent 129 0 R /Prev 130 0 R /Title (Package setup) >>
endobj
132 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 345.4594 0 ] /Next 133 0 R /Parent 129 0 R /Prev 131 0 R /Title (ModbusClient: init) >>
endobj
133 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 129.0594 0 ] /Next 134 0 R /Parent 129 0 R /Prev 132 0 R /Title (ModbusClient: manage TCP link) >>
endobj
134 0 obj
<< /Dest [ 63 0 R /XYZ 40.01575 605.4394 0 ] /Next 135 0 R /Parent 129 0 R /Prev 133 0 R /Title (ModbusClient: available modbus requests functions) >>
endobj
135 0 obj
<< /Dest [ 63 0 R /XYZ 40.01575 156.6394 0 ] /Next 136 0 R /Parent 129 0 R /Prev 134 0 R /Title (ModbusClient: debug mode) >>
endobj
136 0 obj
<< /Dest [ 66 0 R /XYZ 40.01575 626.6394 0 ] /Parent 129 0 R /Prev 135 0 R /Title (utils module: Modbus data mangling) >>
endobj
137 0 obj
<< /Count 3 /Dest [ 66 0 R /XYZ 40.01575 92.63937 0 ] /First 138 0 R /Last 140 0 R /Next 141 0 R /Parent 128 0 R 
  /Prev 129 0 R /Title (pyModbusTCP modules documentation) >>
endobj
138 0 obj
<< /Count 1 /Dest [ 69 0 R /XYZ 40.01575 787.0394 0 ] /First 139 0 R /Last 139 0 R /Next 140 0 R /Parent 137 0 R 
  /Title (Module pyModbusTCP.client) >>
endobj
139 0 obj
<< /Dest [ 69 0 R /XYZ 40.01575 736.2394 0 ] /Parent 138 0 R /Title (class pyModbusTCP.client.ModbusClient) >>
endobj
140 0 obj
<< /Dest [ 72 0 R /XYZ 40.01575 672.0394 0 ] /Parent 137 0 R /Prev 138 0 R /Title (Module pyModbusTCP.utils) >>
endobj
141 0 obj
<< /Count 4 /Dest [ 73 0 R /XYZ 40.01575 702.0394 0 ] /First 142 0 R /Last 145 0 R /Parent 128 0 R /Prev 137 0 R 
  /Title (pyModbusTCP examples) >>
endobj
142 0 obj
<< /Dest [ 73 0 R /XYZ 40.01575 648.8394 0 ] /Next 143 0 R /Parent 141 0 R /Title (Simple read registers example) >>
endobj
143 0 obj
<< /Dest [ 74 0 R /XYZ 40.01575 787.0394 0 ] /Next 144 0 R /Parent 141 0 R /Prev 142 0 R /Title (Simple read bits example) >>
endobj
144 0 obj
<< /Dest [ 75 0 R /XYZ 40.01575 787.0394 0 ] /Next 145 0 R /Parent 141 0 R /Prev 143 0 R /Title (Simple write bits example) >>
endobj
145 0 obj
<< /Dest [ 76 0 R /XYZ 40.01575 740.2394 0 ] /Parent 141 0 R /Prev 144 0 R /Title (An example with a modbus polling thread) >>
endobj
146 0 obj
<< /Dest [ 76 0 R /XYZ 40.01575 82.63937 0 ] /Next 147 0 R /Parent 127 0 R /Prev 128 0 R /Title (Indices and tables) >>
endobj
147 0 obj
<< /Dest [ 120 0 R /XYZ 40.01575 799.0394 0 ] /Next 148 0 R /Parent 127 0 R /Prev 146 0 R /Title (Index) >>
endobj
148 0 obj
<< /Dest [ 124 0 R /XYZ 40.01575 799.0394 0 ] /Parent 127 0 R /Prev 147 0 R /Title (Python Module Index) >>
endobj
149 0 obj
<< /Count 19 /Kids [ 4 0 R 5 0 R 48 0 R 49 0 R 54 0 R 63 0 R 66 0 R 69 0 R 70 0 R 71 0 R 
  72 0 R 73 0 R 74 0 R 75 0 R 76 0 R 77 0 R 120 0 R 121 0 R 124 0 R ] /Type /Pages >>
endobj
150 0 obj
<< /Length 949 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 113.172 0 Td (pyModbusTCP documentation) Tj T* -113.172 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 208.0095 0 Td (version 0.0.12) Tj T* -208.0095 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 218.61 0 Td (Loic Lefebvre) Tj T* -218.61 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 203.592 0 Td (December 15, 2015) Tj T* -203.592 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
151 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
152 0 obj
<< /Length 5814 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 391.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 363 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 363 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 345 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 345 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 309 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 309 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 291 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 291 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (10) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (11) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (11) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Index) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (13) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (15) Tj T* -60.88 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 391.0394 cm
Q
q
1 0 0 1 40.01575 391.0394 cm
Q
 
endstream
endobj
153 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
154 0 obj
<< /Length 8957 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 695.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 665.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .072131 Tw (pyModbusTCP give access to modbus/TCP server through the ModbusClient object. This class is define in the client) Tj T* 0 Tw (module.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 635.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .438637 Tw (To deal with frequent need of modbus data mangling \(for example 32 bits IEEE float to 2x16 bits words convertion\)) Tj T* 0 Tw (a special module named utils provide some helful functions.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 617.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Package map:) Tj T* ET
Q
Q
q
1 0 0 1 210.5178 565.8594 cm
q
174.24 0 0 45.18 0 0 cm
/FormXob.rst2pdf_image_0 Do
Q
Q
q
1 0 0 1 40.01575 533.0594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 515.0594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from PyPi:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 436.2594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (# for Python 2.7) Tj T* (sudo pip-2.7 install pyModbusTCP) Tj T* (# or for Python 3.2) Tj T* (sudo pip-3.2 install pyModbusTCP) Tj T* (# or upgrade from an older release) Tj T* (sudo pip-3.2 install pyModbusTCP --upgrade) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 416.2594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from Github:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 361.4594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (git clone https://github.com/sourceperl/pyModbusTCP.git) Tj T* (cd pyModbusTCP) Tj T* (# here change "python" by your python target\(s\) version\(s\) \(like python3.2\)) Tj T* (sudo python setup.py install) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 328.6594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 310.6594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (init module from constructor \(raise ValueError if host/port error\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 243.8594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
.933333 1 .8 rg
n 0 48.75 24 12 re f*
.933333 1 .8 rg
n 30 48.75 108 12 re f*
.933333 1 .8 rg
n 144 48.75 36 12 re f*
.933333 1 .8 rg
n 186 48.75 72 12 re f*
.933333 1 .8 rg
n 0 36.75 18 12 re f*
.933333 1 .8 rg
n 18 36.75 6 12 re f*
.933333 1 .8 rg
n 24 24.75 6 12 re f*
.933333 1 .8 rg
n 36 24.75 6 12 re f*
.933333 1 .8 rg
n 48 24.75 72 12 re f*
.933333 1 .8 rg
n 120 24.75 6 12 re f*
.933333 1 .8 rg
n 126 24.75 24 12 re f*
.933333 1 .8 rg
n 150 24.75 6 12 re f*
1 .941176 .941176 rg
n 156 24.75 66 12 re f*
.933333 1 .8 rg
n 222 24.75 6 12 re f*
.933333 1 .8 rg
n 234 24.75 24 12 re f*
.933333 1 .8 rg
n 258 24.75 6 12 re f*
.933333 1 .8 rg
n 264 24.75 18 12 re f*
.933333 1 .8 rg
n 282 24.75 6 12 re f*
.933333 1 .8 rg
n 0 12.75 36 12 re f*
.933333 1 .8 rg
n 42 12.75 60 12 re f*
.933333 1 .8 rg
n 102 12.75 6 12 re f*
.933333 1 .8 rg
n 24 .75 30 12 re f*
.933333 1 .8 rg
n 54 .75 6 12 re f*
1 .941176 .941176 rg
n 60 .75 192 12 re f*
.933333 1 .8 rg
n 252 .75 6 12 re f*
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (try) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\() Tj 0 0 0 rg (host) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (port) Tj .188235 .188235 .188235 rg (=) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (except) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .941176 0 0 rg (ValueError) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("Error with host or port params") Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 223.8594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (you can also init module from functions host/port return None if error:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 145.0594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
.933333 1 .8 rg
n 0 60.75 24 12 re f*
.933333 1 .8 rg
n 30 60.75 108 12 re f*
.933333 1 .8 rg
n 144 60.75 36 12 re f*
.933333 1 .8 rg
n 186 60.75 72 12 re f*
.933333 1 .8 rg
n 0 48.75 6 12 re f*
.933333 1 .8 rg
n 12 48.75 6 12 re f*
.933333 1 .8 rg
n 24 48.75 72 12 re f*
.933333 1 .8 rg
n 96 48.75 12 12 re f*
.933333 1 .8 rg
n 0 36.75 12 12 re f*
.933333 1 .8 rg
n 18 36.75 18 12 re f*
.933333 1 .8 rg
n 42 36.75 6 12 re f*
.933333 1 .8 rg
n 48 36.75 6 12 re f*
.933333 1 .8 rg
n 54 36.75 24 12 re f*
.933333 1 .8 rg
n 78 36.75 6 12 re f*
1 .941176 .941176 rg
n 84 36.75 66 12 re f*
.933333 1 .8 rg
n 150 36.75 12 12 re f*
.933333 1 .8 rg
n 24 24.75 30 12 re f*
.933333 1 .8 rg
n 54 24.75 6 12 re f*
1 .941176 .941176 rg
n 60 24.75 72 12 re f*
.933333 1 .8 rg
n 132 24.75 6 12 re f*
.933333 1 .8 rg
n 0 12.75 12 12 re f*
.933333 1 .8 rg
n 18 12.75 18 12 re f*
.933333 1 .8 rg
n 42 12.75 6 12 re f*
.933333 1 .8 rg
n 48 12.75 6 12 re f*
.933333 1 .8 rg
n 54 12.75 24 12 re f*
.933333 1 .8 rg
n 78 12.75 6 12 re f*
.933333 1 .8 rg
n 84 12.75 18 12 re f*
.933333 1 .8 rg
n 102 12.75 12 12 re f*
.933333 1 .8 rg
n 24 .75 30 12 re f*
.933333 1 .8 rg
n 54 .75 6 12 re f*
1 .941176 .941176 rg
n 60 .75 72 12 re f*
.933333 1 .8 rg
n 132 .75 6 12 re f*
BT 1 0 0 1 0 62 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg (\):) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("host error") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg (\):) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("port error") Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 112.2594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 82.25937 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .132576 Tw (After init ModbusClient, you need to open the TCP link. After this, you can call a modbus request function \(see list in) Tj T* 0 Tw (next section\):) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
155 0 obj
<< /Length 17893 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 732.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
.933333 1 .8 rg
n 0 36.75 12 12 re f*
.933333 1 .8 rg
n 18 36.75 6 12 re f*
.933333 1 .8 rg
n 24 36.75 6 12 re f*
.933333 1 .8 rg
n 30 36.75 24 12 re f*
.933333 1 .8 rg
n 54 36.75 18 12 re f*
.933333 1 .8 rg
n 24 24.75 66 12 re f*
.933333 1 .8 rg
n 96 24.75 6 12 re f*
.933333 1 .8 rg
n 108 24.75 6 12 re f*
.933333 1 .8 rg
n 114 24.75 6 12 re f*
.933333 1 .8 rg
n 120 24.75 132 12 re f*
.933333 1 .8 rg
n 252 24.75 6 12 re f*
.933333 1 .8 rg
n 258 24.75 6 12 re f*
.933333 1 .8 rg
n 264 24.75 6 12 re f*
.933333 1 .8 rg
n 276 24.75 12 12 re f*
.933333 1 .8 rg
n 288 24.75 6 12 re f*
.933333 1 .8 rg
n 24 12.75 66 12 re f*
.933333 1 .8 rg
n 96 12.75 6 12 re f*
.933333 1 .8 rg
n 108 12.75 6 12 re f*
.933333 1 .8 rg
n 114 12.75 6 12 re f*
.933333 1 .8 rg
n 120 12.75 132 12 re f*
.933333 1 .8 rg
n 252 12.75 6 12 re f*
.933333 1 .8 rg
n 258 12.75 12 12 re f*
.933333 1 .8 rg
n 270 12.75 6 12 re f*
.933333 1 .8 rg
n 282 12.75 12 12 re f*
.933333 1 .8 rg
n 294 12.75 6 12 re f*
.933333 1 .8 rg
n 24 .75 6 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 12 12 re f*
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (regs_list_1) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (regs_list_2) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (55) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (close) Tj 0 0 0 rg (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 712.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (With a forever polling loop, TCP always open \(auto-reconnect code\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 621.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 90 re B*
Q
q
.933333 1 .8 rg
n 0 72.75 30 12 re f*
.933333 1 .8 rg
n 36 72.75 24 12 re f*
.933333 1 .8 rg
n 60 72.75 6 12 re f*
.933333 1 .8 rg
n 24 60.75 12 12 re f*
.933333 1 .8 rg
n 42 60.75 6 12 re f*
.933333 1 .8 rg
n 48 60.75 6 12 re f*
.933333 1 .8 rg
n 54 60.75 42 12 re f*
.933333 1 .8 rg
n 96 60.75 18 12 re f*
.933333 1 .8 rg
n 48 48.75 66 12 re f*
.933333 1 .8 rg
n 120 48.75 6 12 re f*
.933333 1 .8 rg
n 132 48.75 6 12 re f*
.933333 1 .8 rg
n 138 48.75 6 12 re f*
.933333 1 .8 rg
n 144 48.75 132 12 re f*
.933333 1 .8 rg
n 276 48.75 6 12 re f*
.933333 1 .8 rg
n 282 48.75 6 12 re f*
.933333 1 .8 rg
n 288 48.75 6 12 re f*
.933333 1 .8 rg
n 300 48.75 12 12 re f*
.933333 1 .8 rg
n 312 48.75 6 12 re f*
.933333 1 .8 rg
n 48 36.75 66 12 re f*
.933333 1 .8 rg
n 120 36.75 6 12 re f*
.933333 1 .8 rg
n 132 36.75 6 12 re f*
.933333 1 .8 rg
n 138 36.75 6 12 re f*
.933333 1 .8 rg
n 144 36.75 132 12 re f*
.933333 1 .8 rg
n 276 36.75 6 12 re f*
.933333 1 .8 rg
n 282 36.75 12 12 re f*
.933333 1 .8 rg
n 294 36.75 6 12 re f*
.933333 1 .8 rg
n 306 36.75 12 12 re f*
.933333 1 .8 rg
n 318 36.75 6 12 re f*
.933333 1 .8 rg
n 24 24.75 24 12 re f*
.933333 1 .8 rg
n 48 24.75 6 12 re f*
.933333 1 .8 rg
n 48 12.75 6 12 re f*
.933333 1 .8 rg
n 54 12.75 6 12 re f*
.933333 1 .8 rg
n 60 12.75 24 12 re f*
.933333 1 .8 rg
n 84 12.75 12 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 74 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (regs_list_1) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (regs_list_2) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (55) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 588.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 570.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (See ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Modbus ) Tj 0 0 0 rg (for full table.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 564.6394 cm
Q
q
1 0 0 1 40.01575 172.6394 cm
1 1 1 rg
n 0 392 515.2441 -26 re f*
.878431 .878431 .878431 rg
n 0 366 515.2441 -18 re f*
1 1 1 rg
n 0 348 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 330 515.2441 -18 re f*
1 1 1 rg
n 0 312 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 294 515.2441 -18 re f*
1 1 1 rg
n 0 276 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 258 515.2441 -18 re f*
1 1 1 rg
n 0 240 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 222 515.2441 -30 re f*
1 1 1 rg
n 0 192 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 174 515.2441 -18 re f*
1 1 1 rg
n 0 156 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 138 515.2441 -18 re f*
1 1 1 rg
n 0 120 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 102 515.2441 -18 re f*
1 1 1 rg
n 0 84 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 66 515.2441 -18 re f*
1 1 1 rg
n 0 48 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 30 515.2441 -30 re f*
.960784 .960784 .862745 rg
n 0 392 515.2441 -26 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 369 cm
q
.960784 .960784 .862745 rg
n 0 0 37.07087 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL .200433 0 Td (Domain) Tj T* -0.200433 0 Td ET
Q
Q
q
1 0 0 1 55.07087 369 cm
q
.960784 .960784 .862745 rg
n 0 0 110.6772 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 19.77858 0 Td (Function name) Tj T* -19.77858 0 Td ET
Q
Q
q
1 0 0 1 177.748 369 cm
q
.960784 .960784 .862745 rg
n 0 0 49.33858 20 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 10 Tm /F2 10 Tf 10 TL 3.559291 0 Td (Function) Tj T* 9.44 0 Td (code) Tj T* -12.99929 0 Td ET
Q
Q
q
1 0 0 1 239.0866 369 cm
q
.960784 .960784 .862745 rg
n 0 0 270.1575 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 80.91374 0 Td (ModbusClient function) Tj T* -80.91374 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Bit) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Discrete Inputs) Tj T* ET
Q
Q
q
1 0 0 1 177.748 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 351 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_discrete_inputs\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 333 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_coils\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Coil) Tj T* ET
Q
Q
q
1 0 0 1 177.748 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 315 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (write_single_coil\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (15) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Registe) Tj T* (r) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Input Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 279 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_input_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Holding Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 261 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_holding_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 243 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (write_single_register\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 225 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (write_multiple_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read/Write Multiple) Tj T* (Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (23) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Mask Write Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (22) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (File) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read FIFO Queue) Tj T* ET
Q
Q
q
1 0 0 1 177.748 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (24) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (20) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (21) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Exception Status) Tj T* ET
Q
Q
q
1 0 0 1 177.748 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Diagnos) Tj T* (tic) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Diagnostic) Tj T* ET
Q
Q
q
1 0 0 1 177.748 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Counter) Tj T* ET
Q
Q
q
1 0 0 1 177.748 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Log) Tj T* ET
Q
Q
q
1 0 0 1 177.748 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Report Slave ID) Tj T* ET
Q
Q
q
1 0 0 1 177.748 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (17) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read Device) Tj T* (Identification) Tj T* ET
Q
Q
q
1 0 0 1 177.748 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (43) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 366 m 515.2441 366 l S
n 49.07087 348 m 515.2441 348 l S
n 49.07087 330 m 515.2441 330 l S
n 49.07087 312 m 515.2441 312 l S
n 0 294 m 515.2441 294 l S
n 49.07087 276 m 515.2441 276 l S
n 49.07087 258 m 515.2441 258 l S
n 49.07087 240 m 515.2441 240 l S
n 49.07087 222 m 515.2441 222 l S
n 49.07087 192 m 515.2441 192 l S
n 0 174 m 515.2441 174 l S
n 49.07087 156 m 515.2441 156 l S
n 49.07087 138 m 515.2441 138 l S
n 49.07087 120 m 515.2441 120 l S
n 0 102 m 515.2441 102 l S
n 49.07087 84 m 515.2441 84 l S
n 49.07087 66 m 515.2441 66 l S
n 49.07087 48 m 515.2441 48 l S
n 49.07087 30 m 515.2441 30 l S
n 49.07087 0 m 49.07087 392 l S
n 171.748 0 m 171.748 392 l S
n 233.0866 0 m 233.0866 392 l S
n 0 392 m 515.2441 392 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 392 l S
n 515.2441 0 m 515.2441 392 l S
Q
Q
q
1 0 0 1 40.01575 172.6394 cm
Q
q
1 0 0 1 40.01575 139.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 121.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If need, you can enable a debug mode for ModbusClient like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 91.03937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
.933333 1 .8 rg
n 0 12.75 24 12 re f*
.933333 1 .8 rg
n 30 12.75 108 12 re f*
.933333 1 .8 rg
n 144 12.75 36 12 re f*
.933333 1 .8 rg
n 186 12.75 72 12 re f*
.933333 1 .8 rg
n 0 .75 6 12 re f*
.933333 1 .8 rg
n 12 .75 6 12 re f*
.933333 1 .8 rg
n 24 .75 72 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
.933333 1 .8 rg
n 102 .75 24 12 re f*
.933333 1 .8 rg
n 126 .75 6 12 re f*
1 .941176 .941176 rg
n 132 .75 66 12 re f*
.933333 1 .8 rg
n 198 .75 6 12 re f*
.933333 1 .8 rg
n 210 .75 24 12 re f*
.933333 1 .8 rg
n 234 .75 6 12 re f*
.933333 1 .8 rg
n 240 .75 18 12 re f*
.933333 1 .8 rg
n 258 .75 6 12 re f*
.933333 1 .8 rg
n 270 .75 30 12 re f*
.933333 1 .8 rg
n 300 .75 6 12 re f*
.933333 1 .8 rg
n 306 .75 24 12 re f*
.933333 1 .8 rg
n 330 .75 6 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\() Tj 0 0 0 rg (host) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (port) Tj .188235 .188235 .188235 rg (=) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (debug) Tj .188235 .188235 .188235 rg (=) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 71.03937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
156 0 obj
<< /Length 16962 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 768.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
.933333 1 .8 rg
n 0 .75 6 12 re f*
.933333 1 .8 rg
n 6 .75 6 12 re f*
.933333 1 .8 rg
n 12 .75 30 12 re f*
.933333 1 .8 rg
n 42 .75 6 12 re f*
.933333 1 .8 rg
n 48 .75 24 12 re f*
.933333 1 .8 rg
n 72 .75 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (debug) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 748.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (when debug is enable all debug message is print on console and you can see modbus frame:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 729.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
.933333 1 .8 rg
n 0 .75 6 12 re f*
.933333 1 .8 rg
n 6 .75 6 12 re f*
.933333 1 .8 rg
n 12 .75 132 12 re f*
.933333 1 .8 rg
n 144 .75 6 12 re f*
.933333 1 .8 rg
n 150 .75 6 12 re f*
.933333 1 .8 rg
n 156 .75 6 12 re f*
.933333 1 .8 rg
n 168 .75 6 12 re f*
.933333 1 .8 rg
n 174 .75 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 709.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (print:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 642.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (Tx) Tj T* ([E7 53 00 00 00 06 01] 03 00 00 00 04) Tj T* (Rx) Tj T* ([E7 53 00 00 00 0B 01] 03 08 00 00 00 6F 00 00 00 00) Tj T* ([0, 111, 0, 0]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 609.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 591.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sample data mangling, usefull for interface PLC device.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 585.8394 cm
Q
q
1 0 0 1 40.01575 585.8394 cm
Q
q
1 0 0 1 40.01575 423.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16 bits to 32 bits integers:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 150 re B*
Q
q
.933333 1 .8 rg
n 0 132.75 24 12 re f*
.933333 1 .8 rg
n 30 132.75 66 12 re f*
.933333 1 .8 rg
n 102 132.75 36 12 re f*
.933333 1 .8 rg
n 144 132.75 30 12 re f*
.933333 1 .8 rg
n 0 120.75 72 12 re f*
.933333 1 .8 rg
n 78 120.75 6 12 re f*
.933333 1 .8 rg
n 90 120.75 6 12 re f*
.933333 1 .8 rg
n 96 120.75 36 12 re f*
.933333 1 .8 rg
n 132 120.75 6 12 re f*
.933333 1 .8 rg
n 144 120.75 36 12 re f*
.933333 1 .8 rg
n 180 120.75 6 12 re f*
.933333 1 .8 rg
n 192 120.75 36 12 re f*
.933333 1 .8 rg
n 228 120.75 6 12 re f*
.933333 1 .8 rg
n 240 120.75 36 12 re f*
.933333 1 .8 rg
n 276 120.75 6 12 re f*
.933333 1 .8 rg
n 0 96.75 174 12 re f*
.933333 1 .8 rg
n 0 84.75 72 12 re f*
.933333 1 .8 rg
n 78 84.75 6 12 re f*
.933333 1 .8 rg
n 90 84.75 30 12 re f*
.933333 1 .8 rg
n 120 84.75 6 12 re f*
.933333 1 .8 rg
n 126 84.75 102 12 re f*
.933333 1 .8 rg
n 228 84.75 6 12 re f*
.933333 1 .8 rg
n 234 84.75 72 12 re f*
.933333 1 .8 rg
n 306 84.75 6 12 re f*
.933333 1 .8 rg
n 0 72.75 234 12 re f*
.933333 1 .8 rg
n 0 60.75 30 12 re f*
.933333 1 .8 rg
n 30 60.75 12 12 re f*
.933333 1 .8 rg
n 42 60.75 18 12 re f*
.933333 1 .8 rg
n 60 60.75 6 12 re f*
.933333 1 .8 rg
n 66 60.75 6 12 re f*
.933333 1 .8 rg
n 72 60.75 6 12 re f*
.933333 1 .8 rg
n 84 60.75 18 12 re f*
.933333 1 .8 rg
n 108 60.75 6 12 re f*
.933333 1 .8 rg
n 120 60.75 12 12 re f*
.933333 1 .8 rg
n 138 60.75 72 12 re f*
.933333 1 .8 rg
n 210 60.75 12 12 re f*
.933333 1 .8 rg
n 0 36.75 132 12 re f*
.933333 1 .8 rg
n 0 24.75 72 12 re f*
.933333 1 .8 rg
n 78 24.75 6 12 re f*
.933333 1 .8 rg
n 90 24.75 30 12 re f*
.933333 1 .8 rg
n 120 24.75 6 12 re f*
.933333 1 .8 rg
n 126 24.75 102 12 re f*
.933333 1 .8 rg
n 228 24.75 6 12 re f*
.933333 1 .8 rg
n 234 24.75 72 12 re f*
.933333 1 .8 rg
n 306 24.75 6 12 re f*
.933333 1 .8 rg
n 318 24.75 60 12 re f*
.933333 1 .8 rg
n 378 24.75 6 12 re f*
.933333 1 .8 rg
n 384 24.75 30 12 re f*
.933333 1 .8 rg
n 414 24.75 6 12 re f*
.933333 1 .8 rg
n 0 12.75 240 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 12 12 re f*
.933333 1 .8 rg
n 42 .75 18 12 re f*
.933333 1 .8 rg
n 60 .75 6 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 6 12 re f*
.933333 1 .8 rg
n 84 .75 18 12 re f*
.933333 1 .8 rg
n 108 .75 6 12 re f*
.933333 1 .8 rg
n 120 .75 12 12 re f*
.933333 1 .8 rg
n 138 .75 72 12 re f*
.933333 1 .8 rg
n 210 .75 12 12 re f*
BT 1 0 0 1 0 134 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T* 0 0 0 rg (list_16_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ([) Tj /F5 10 Tf 0 .313725 .501961 rg (0x0123) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x4567) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x89ab) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0xcdef) Tj /F4 10 Tf 0 0 0 rg (]) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# big endian sample \(default\)) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (list_32_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (word_list_to_long) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "['0x1234567', '0x89abcdef']") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\([) Tj 0 .439216 .12549 rg (hex) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (i) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (in) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (list_32_bits) Tj 0 0 0 rg (]\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# little endian sample) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (list_32_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (word_list_to_long) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (big_endian) Tj .188235 .188235 .188235 rg (=) Tj 0 .439216 .12549 rg (False) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "['0x45670123', '0xcdef89ab']") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\([) Tj 0 .439216 .12549 rg (hex) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (i) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (in) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (list_32_bits) Tj 0 0 0 rg (]\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 417.0394 cm
Q
q
1 0 0 1 40.01575 302.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 99.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 99.8 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (two's complement \(see ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Two%27s_complement) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 102 re B*
Q
q
.933333 1 .8 rg
n 0 84.75 24 12 re f*
.933333 1 .8 rg
n 30 84.75 66 12 re f*
.933333 1 .8 rg
n 102 84.75 36 12 re f*
.933333 1 .8 rg
n 144 84.75 30 12 re f*
.933333 1 .8 rg
n 0 72.75 72 12 re f*
.933333 1 .8 rg
n 78 72.75 6 12 re f*
.933333 1 .8 rg
n 90 72.75 6 12 re f*
.933333 1 .8 rg
n 96 72.75 36 12 re f*
.933333 1 .8 rg
n 132 72.75 6 12 re f*
.933333 1 .8 rg
n 144 72.75 36 12 re f*
.933333 1 .8 rg
n 180 72.75 6 12 re f*
.933333 1 .8 rg
n 192 72.75 36 12 re f*
.933333 1 .8 rg
n 228 72.75 6 12 re f*
.933333 1 .8 rg
n 240 72.75 36 12 re f*
.933333 1 .8 rg
n 276 72.75 6 12 re f*
.933333 1 .8 rg
n 0 48.75 192 12 re f*
.933333 1 .8 rg
n 0 36.75 30 12 re f*
.933333 1 .8 rg
n 30 36.75 6 12 re f*
.933333 1 .8 rg
n 36 36.75 30 12 re f*
.933333 1 .8 rg
n 66 36.75 6 12 re f*
.933333 1 .8 rg
n 72 36.75 84 12 re f*
.933333 1 .8 rg
n 156 36.75 6 12 re f*
.933333 1 .8 rg
n 162 36.75 72 12 re f*
.933333 1 .8 rg
n 234 36.75 6 12 re f*
.933333 1 .8 rg
n 246 36.75 12 12 re f*
.933333 1 .8 rg
n 258 36.75 12 12 re f*
.933333 1 .8 rg
n 0 12.75 84 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 54 12 re f*
.933333 1 .8 rg
n 126 .75 6 12 re f*
.933333 1 .8 rg
n 132 .75 72 12 re f*
.933333 1 .8 rg
n 204 .75 6 12 re f*
.933333 1 .8 rg
n 210 .75 6 12 re f*
.933333 1 .8 rg
n 216 .75 12 12 re f*
.933333 1 .8 rg
n 234 .75 12 12 re f*
.933333 1 .8 rg
n 246 .75 12 12 re f*
BT 1 0 0 1 0 86 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T* 0 0 0 rg (list_16_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ([) Tj /F5 10 Tf 0 .313725 .501961 rg (0x0000) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0xFFFF) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x00FF) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x8001) Tj /F4 10 Tf 0 0 0 rg (]) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "[0, -1, 255, -32767]") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (get_list_2comp) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (16) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "-1") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (get_2comp) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg ([) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (],) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (16) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 296.2394 cm
Q
q
1 0 0 1 40.01575 241.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (an integer of val_size bits \(default is 16\) to an array of boolean:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 42 re B*
Q
q
.933333 1 .8 rg
n 0 24.75 24 12 re f*
.933333 1 .8 rg
n 30 24.75 66 12 re f*
.933333 1 .8 rg
n 102 24.75 36 12 re f*
.933333 1 .8 rg
n 144 24.75 30 12 re f*
.933333 1 .8 rg
n 0 12.75 396 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 102 12 re f*
.933333 1 .8 rg
n 174 .75 6 12 re f*
.933333 1 .8 rg
n 180 .75 24 12 re f*
.933333 1 .8 rg
n 204 .75 6 12 re f*
.933333 1 .8 rg
n 216 .75 48 12 re f*
.933333 1 .8 rg
n 264 .75 6 12 re f*
.933333 1 .8 rg
n 270 .75 6 12 re f*
.933333 1 .8 rg
n 276 .75 12 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "[True, False, True, False, False, False, False, False]") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (get_bits_from_int) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 .313725 .501961 rg (0x05) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (val_size) Tj .188235 .188235 .188235 rg (=) Tj /F5 10 Tf 0 0 .815686 rg (8) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 235.4394 cm
Q
q
1 0 0 1 40.01575 108.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 111.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 111.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (gateway between IEEE single precision float and python float:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 114 re B*
Q
q
.933333 1 .8 rg
n 0 96.75 24 12 re f*
.933333 1 .8 rg
n 30 96.75 66 12 re f*
.933333 1 .8 rg
n 102 96.75 36 12 re f*
.933333 1 .8 rg
n 144 96.75 30 12 re f*
.933333 1 .8 rg
n 0 72.75 420 12 re f*
.933333 1 .8 rg
n 0 60.75 132 12 re f*
.933333 1 .8 rg
n 0 48.75 30 12 re f*
.933333 1 .8 rg
n 30 48.75 6 12 re f*
.933333 1 .8 rg
n 36 48.75 18 12 re f*
.933333 1 .8 rg
n 54 48.75 6 12 re f*
.933333 1 .8 rg
n 60 48.75 30 12 re f*
.933333 1 .8 rg
n 90 48.75 6 12 re f*
.933333 1 .8 rg
n 96 48.75 66 12 re f*
.933333 1 .8 rg
n 162 48.75 6 12 re f*
.933333 1 .8 rg
n 168 48.75 18 12 re f*
.933333 1 .8 rg
n 186 48.75 18 12 re f*
.933333 1 .8 rg
n 0 24.75 420 12 re f*
.933333 1 .8 rg
n 0 12.75 426 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 66 12 re f*
.933333 1 .8 rg
n 138 .75 6 12 re f*
.933333 1 .8 rg
n 144 .75 60 12 re f*
.933333 1 .8 rg
n 204 .75 12 12 re f*
BT 1 0 0 1 0 98 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "0x3e99999a") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (hex) Tj 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (encode_ieee) Tj 0 0 0 rg (\() Tj /F5 10 Tf .376471 0 .878431 rg (0.3) Tj /F4 10 Tf 0 0 0 rg (\)\)\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "0.300000011921" \(it's not 0.3, precision leak with float...\)) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (decode_ieee) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 .313725 .501961 rg (0x3e99999a) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 108.6394 cm
Q
q
1 0 0 1 40.01575 73.43937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 55.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Contents:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
157 0 obj
<< /Length 12206 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 752.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (This module provide the ModbusClient class used to deal with modbus server.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 709.8394 cm
Q
q
1 0 0 1 40.01575 679.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.578819 Tw 12 TL /F7 10 Tf 0 0 0 rg (class ) Tj /F4 10 Tf 0 0 0 rg (pyModbusTCP.client.) Tj /F5 10 Tf 0 0 0 rg (ModbusClient ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (host=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (port=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (unit_id=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (timeout=None) Tj /F1 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F6 10 Tf 0 0 0 rg (debug=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (auto_open=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (auto_close=None) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 667.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Client Modbus TCP) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 661.8394 cm
Q
q
1 0 0 1 50.01575 631.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.092349 Tw 12 TL /F5 10 Tf 0 0 0 rg (__init__ ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (host=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (debug=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (auto_open=None) Tj /F2 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F8 10 Tf 0 0 0 rg (auto_close=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 619.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Constructor) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 607.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Modbus server params \(host, port\) can be set here or with host\(\), port\(\) functions. Same for debug option.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 595.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use functions avoid to launch ValueError except if params is incorrect.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 589.8394 cm
Q
q
1 0 0 1 60.01575 460.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 111 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (host ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (str) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address server address \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 105 cm
Q
q
1 0 0 1 91.03937 93 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- TCP port number \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 87 cm
Q
q
1 0 0 1 91.03937 75 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- unit ID \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 57 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (float) Tj /F1 10 Tf (\) -- socket timeout in seconds \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 51 cm
Q
q
1 0 0 1 91.03937 39 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (debug ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- debug state \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_open ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP connect \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_close ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP close \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 445.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Object ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 430.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 403.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F2 10 Tf 12 TL 40.79937 0 Td (Raises) Tj T* -22.22 0 Td (ValueError:) Tj T* -18.57937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (if a set parameter value is incorrect) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 397.8394 cm
Q
q
1 0 0 1 50.01575 379.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_close ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 367.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP close mode \(after each request\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 361.8394 cm
Q
q
1 0 0 1 60.01575 346.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_close state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 331.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_close state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 316.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 310.8394 cm
Q
q
1 0 0 1 50.01575 292.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_open ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 280.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP connect mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 274.8394 cm
Q
q
1 0 0 1 60.01575 259.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_open state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 244.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_open state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 229.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 223.8394 cm
Q
q
1 0 0 1 50.01575 205.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (close ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 193.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Close TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 187.8394 cm
Q
q
1 0 0 1 60.01575 172.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (close status \(True for close/None if already close\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 157.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 151.8394 cm
Q
q
1 0 0 1 50.01575 133.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (debug ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 121.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set debug mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 115.8394 cm
Q
q
1 0 0 1 60.01575 100.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool or None) Tj /F1 10 Tf (\) -- debug state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 85.83937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (debug state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 70.83937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 64.83937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
 
endstream
endobj
158 0 obj
<< /Length 11968 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 775.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (host ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (hostname=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 763.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set host \(IPv4/IPv6 or hostname like 'plc.domain.net'\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
Q
q
1 0 0 1 60.01575 742.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hostname ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (str or None) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 727.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (hostname or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 712.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 706.0394 cm
Q
q
1 0 0 1 50.01575 688.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (is_open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 676.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get status of TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 670.0394 cm
Q
q
1 0 0 1 60.01575 655.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (status \(True for open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 640.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 634.0394 cm
Q
q
1 0 0 1 50.01575 616.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_error ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 604.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last error code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 598.0394 cm
Q
q
1 0 0 1 60.01575 583.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last error code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 568.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 562.0394 cm
Q
q
1 0 0 1 50.01575 544.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_except ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 532.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last except code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 526.0394 cm
Q
q
1 0 0 1 60.01575 511.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last except code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 496.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 490.0394 cm
Q
q
1 0 0 1 50.01575 472.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (mode ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (mode=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 460.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set modbus mode \(TCP or RTU\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 454.0394 cm
Q
q
1 0 0 1 60.01575 439.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (mode ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- mode \(MODBUS_TCP/MODBUS_RTU\) to set or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 424.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (mode or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 409.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 403.0394 cm
Q
q
1 0 0 1 50.01575 385.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 373.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Connect to modbus server \(open TCP connection\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 367.0394 cm
Q
q
1 0 0 1 60.01575 352.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (connect status \(True if open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 337.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 331.0394 cm
Q
q
1 0 0 1 50.01575 313.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (port ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 301.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set TCP port) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 295.0394 cm
Q
q
1 0 0 1 60.01575 280.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int or None) Tj /F1 10 Tf (\) -- TCP port number or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 265.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TCP port or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 250.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 244.0394 cm
Q
q
1 0 0 1 50.01575 226.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_coils ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 214.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_COILS \(0x01\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 208.0394 cm
Q
q
1 0 0 1 60.01575 169.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 154.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 139.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 133.0394 cm
Q
q
1 0 0 1 50.01575 115.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_discrete_inputs ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 103.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_DISCRETE_INPUTS \(0x02\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 97.03937 cm
Q
q
1 0 0 1 60.01575 58.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
 
endstream
endobj
159 0 obj
<< /Length 13380 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 60.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 751.0394 cm
Q
q
1 0 0 1 50.01575 733.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_holding_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 721.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_HOLDING_REGISTERS \(0x03\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 715.0394 cm
Q
q
1 0 0 1 60.01575 676.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 661.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 646.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 640.0394 cm
Q
q
1 0 0 1 50.01575 622.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_input_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 610.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_INPUT_REGISTERS \(0x04\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 604.0394 cm
Q
q
1 0 0 1 60.01575 565.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 550.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 535.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 529.0394 cm
Q
q
1 0 0 1 50.01575 511.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (timeout ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 499.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set timeout field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 493.0394 cm
Q
q
1 0 0 1 60.01575 478.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (float or None) Tj /F1 10 Tf (\) -- socket timeout in seconds or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 463.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (timeout or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 448.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 442.0394 cm
Q
q
1 0 0 1 50.01575 424.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (unit_id ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 412.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set unit ID field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 406.0394 cm
Q
q
1 0 0 1 60.01575 391.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int or None) Tj /F1 10 Tf (\) -- unit ID \(0 to 255\) or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 376.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unit ID or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 361.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 355.0394 cm
Q
q
1 0 0 1 50.01575 337.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (version ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 325.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get package version) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 319.0394 cm
Q
q
1 0 0 1 60.01575 304.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (current version of the package \(like "0.0.1"\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 289.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 283.0394 cm
Q
q
1 0 0 1 50.01575 265.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (regs_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 253.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_MULTIPLE_REGISTERS \(0x10\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 247.0394 cm
Q
q
1 0 0 1 60.01575 208.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- registers address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_value ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (list) Tj /F1 10 Tf (\) -- registers value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 193.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 178.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 172.0394 cm
Q
q
1 0 0 1 50.01575 154.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_coil ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (bit_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 142.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_COIL \(0x05\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 136.0394 cm
Q
q
1 0 0 1 60.01575 97.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_value ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- bit value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 82.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 67.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 61.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
 
endstream
endobj
160 0 obj
<< /Length 13545 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 775.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_register ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (reg_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 763.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_REGISTER \(0x06\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
Q
q
1 0 0 1 60.01575 718.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_value ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 703.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 688.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 655.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 637.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (This module provide a set of functions for modbus data mangling.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 631.2394 cm
Q
q
1 0 0 1 40.01575 619.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (decode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 607.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Decode Python int \(32 bits integer\) as an IEEE single precision format) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 595.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 589.2394 cm
Q
q
1 0 0 1 50.01575 574.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- a 32 bit integer as an int Python value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 559.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 544.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 538.2394 cm
Q
q
1 0 0 1 40.01575 526.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (encode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_float) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 514.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Encode Python float to int \(32 bits integer\) as an IEEE single precision) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 502.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 496.2394 cm
Q
q
1 0 0 1 50.01575 481.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_float ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (float) Tj /F1 10 Tf (\) -- float value to convert) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 466.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IEEE 32 bits \(single precision\) as Python int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 451.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 445.2394 cm
Q
q
1 0 0 1 40.01575 433.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 421.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python int val_int) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 415.2394 cm
Q
q
1 0 0 1 50.01575 376.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 361.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 346.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 340.2394 cm
Q
q
1 0 0 1 40.01575 328.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_bits_from_int ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 316.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the list of bits of val_int integer \(default size is 16 bits\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 304.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Return bits list, least significant bit first. Use list.reverse\(\) if need.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 298.2394 cm
Q
q
1 0 0 1 50.01575 259.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- integer value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of integer \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 244.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of boolean "bits" \(least significant first\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 229.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 223.2394 cm
Q
q
1 0 0 1 40.01575 211.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_list_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 199.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python list val_list) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 193.2394 cm
Q
q
1 0 0 1 50.01575 154.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (list) Tj /F1 10 Tf (\) -- list of int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 139.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 124.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 118.2394 cm
Q
q
1 0 0 1 40.01575 106.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (word_list_to_long ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (big_endian=True) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 94.23937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Word list \(16 bits int\) to long list \(32 bits int\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 82.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (By default word_list2long\(\) use big endian order. For use little endian, set big_endian param to False.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 76.23937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
 
endstream
endobj
161 0 obj
<< /Length 11971 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 748.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (list) Tj /F1 10 Tf (\) -- list of 16 bits int value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (big_endian ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- True for big endian/False for little \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 733.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 718.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 682.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 664.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (Here some examples to see pyModbusTCP in some usages cases) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 632.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 103.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 522 re B*
Q
q
.933333 1 .8 rg
n 0 504.75 126 12 re f*
.933333 1 .8 rg
n 0 492.75 138 12 re f*
.933333 1 .8 rg
n 0 468.75 90 12 re f*
.933333 1 .8 rg
n 0 456.75 276 12 re f*
.933333 1 .8 rg
n 0 432.75 396 12 re f*
.933333 1 .8 rg
n 0 420.75 360 12 re f*
.933333 1 .8 rg
n 0 396.75 348 12 re f*
.933333 1 .8 rg
n 0 384.75 324 12 re f*
.933333 1 .8 rg
n 0 360.75 24 12 re f*
.933333 1 .8 rg
n 30 360.75 108 12 re f*
.933333 1 .8 rg
n 144 360.75 36 12 re f*
.933333 1 .8 rg
n 186 360.75 72 12 re f*
.933333 1 .8 rg
n 0 348.75 36 12 re f*
.933333 1 .8 rg
n 42 348.75 24 12 re f*
.933333 1 .8 rg
n 0 324.75 66 12 re f*
.933333 1 .8 rg
n 72 324.75 6 12 re f*
1 .941176 .941176 rg
n 84 324.75 66 12 re f*
.933333 1 .8 rg
n 0 312.75 66 12 re f*
.933333 1 .8 rg
n 72 312.75 6 12 re f*
.933333 1 .8 rg
n 84 312.75 18 12 re f*
.933333 1 .8 rg
n 0 288.75 6 12 re f*
.933333 1 .8 rg
n 12 288.75 6 12 re f*
.933333 1 .8 rg
n 24 288.75 72 12 re f*
.933333 1 .8 rg
n 96 288.75 12 12 re f*
.933333 1 .8 rg
n 0 264.75 252 12 re f*
.933333 1 .8 rg
n 0 252.75 84 12 re f*
.933333 1 .8 rg
n 0 228.75 198 12 re f*
.933333 1 .8 rg
n 0 216.75 6 12 re f*
.933333 1 .8 rg
n 6 216.75 6 12 re f*
.933333 1 .8 rg
n 12 216.75 24 12 re f*
.933333 1 .8 rg
n 36 216.75 6 12 re f*
.933333 1 .8 rg
n 42 216.75 66 12 re f*
.933333 1 .8 rg
n 108 216.75 6 12 re f*
.933333 1 .8 rg
n 0 204.75 6 12 re f*
.933333 1 .8 rg
n 6 204.75 6 12 re f*
.933333 1 .8 rg
n 12 204.75 24 12 re f*
.933333 1 .8 rg
n 36 204.75 6 12 re f*
.933333 1 .8 rg
n 42 204.75 66 12 re f*
.933333 1 .8 rg
n 108 204.75 6 12 re f*
.933333 1 .8 rg
n 0 180.75 30 12 re f*
.933333 1 .8 rg
n 36 180.75 24 12 re f*
.933333 1 .8 rg
n 60 180.75 6 12 re f*
.933333 1 .8 rg
n 24 168.75 198 12 re f*
.933333 1 .8 rg
n 24 156.75 12 12 re f*
.933333 1 .8 rg
n 42 156.75 18 12 re f*
.933333 1 .8 rg
n 66 156.75 6 12 re f*
.933333 1 .8 rg
n 72 156.75 6 12 re f*
.933333 1 .8 rg
n 78 156.75 42 12 re f*
.933333 1 .8 rg
n 120 156.75 18 12 re f*
.933333 1 .8 rg
n 48 144.75 12 12 re f*
.933333 1 .8 rg
n 66 144.75 18 12 re f*
.933333 1 .8 rg
n 90 144.75 6 12 re f*
.933333 1 .8 rg
n 96 144.75 6 12 re f*
.933333 1 .8 rg
n 102 144.75 24 12 re f*
.933333 1 .8 rg
n 126 144.75 18 12 re f*
.933333 1 .8 rg
n 72 132.75 30 12 re f*
.933333 1 .8 rg
n 102 132.75 6 12 re f*
1 .941176 .941176 rg
n 108 132.75 138 12 re f*
.933333 1 .8 rg
n 246 132.75 6 12 re f*
.933333 1 .8 rg
n 252 132.75 66 12 re f*
.933333 1 .8 rg
n 318 132.75 6 12 re f*
1 .941176 .941176 rg
n 324 132.75 18 12 re f*
.933333 1 .8 rg
n 342 132.75 6 12 re f*
.933333 1 .8 rg
n 348 132.75 18 12 re f*
.933333 1 .8 rg
n 366 132.75 6 12 re f*
.933333 1 .8 rg
n 372 132.75 66 12 re f*
.933333 1 .8 rg
n 438 132.75 12 12 re f*
.933333 1 .8 rg
n 24 108.75 330 12 re f*
.933333 1 .8 rg
n 24 96.75 12 12 re f*
.933333 1 .8 rg
n 42 96.75 6 12 re f*
.933333 1 .8 rg
n 48 96.75 6 12 re f*
.933333 1 .8 rg
n 54 96.75 42 12 re f*
.933333 1 .8 rg
n 96 96.75 18 12 re f*
.933333 1 .8 rg
n 48 84.75 354 12 re f*
.933333 1 .8 rg
n 48 72.75 24 12 re f*
.933333 1 .8 rg
n 78 72.75 6 12 re f*
.933333 1 .8 rg
n 90 72.75 6 12 re f*
.933333 1 .8 rg
n 96 72.75 6 12 re f*
.933333 1 .8 rg
n 102 72.75 132 12 re f*
.933333 1 .8 rg
n 234 72.75 6 12 re f*
.933333 1 .8 rg
n 240 72.75 6 12 re f*
.933333 1 .8 rg
n 246 72.75 6 12 re f*
.933333 1 .8 rg
n 258 72.75 12 12 re f*
.933333 1 .8 rg
n 270 72.75 6 12 re f*
.933333 1 .8 rg
n 48 60.75 180 12 re f*
.933333 1 .8 rg
n 48 48.75 12 12 re f*
.933333 1 .8 rg
n 66 48.75 24 12 re f*
.933333 1 .8 rg
n 90 48.75 6 12 re f*
.933333 1 .8 rg
n 72 36.75 30 12 re f*
.933333 1 .8 rg
n 102 36.75 6 12 re f*
1 .941176 .941176 rg
n 108 36.75 108 12 re f*
.933333 1 .8 rg
n 216 36.75 6 12 re f*
.933333 1 .8 rg
n 222 36.75 18 12 re f*
.933333 1 .8 rg
n 240 36.75 6 12 re f*
.933333 1 .8 rg
n 246 36.75 24 12 re f*
.933333 1 .8 rg
n 270 36.75 12 12 re f*
.933333 1 .8 rg
n 24 12.75 180 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 506 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# read_register) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# read 10 registers and print result on stdout) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# you can use the tiny modbus server "mbserverd" to test this code) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# mbserverd is here: https://github.com/sourceperl/mbserverd) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# the command line modbus client mbtget can also be useful) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# mbtget is here: https://github.com/sourceperl/mbtget) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# uncomment this line to see debug message) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (#c.debug\(True\)) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# define modbus server host, port) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# open or reconnect TCP to server) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to connect to ") Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (SERVER_HOST) Tj .188235 .188235 .188235 rg (+) Tj .729412 .129412 .129412 rg (":") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if open\(\) is ok, read register \(modbus function 0x03\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# read 10 registers at address 0, store result in regs list) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if success display registers) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("reg ad #0 to 9: ") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (regs) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# sleep 2s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
 
endstream
endobj
162 0 obj
<< /Length 9210 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 313.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 450 re B*
Q
q
.933333 1 .8 rg
n 0 432.75 126 12 re f*
.933333 1 .8 rg
n 0 420.75 138 12 re f*
.933333 1 .8 rg
n 0 396.75 60 12 re f*
.933333 1 .8 rg
n 0 384.75 246 12 re f*
.933333 1 .8 rg
n 0 360.75 24 12 re f*
.933333 1 .8 rg
n 30 360.75 108 12 re f*
.933333 1 .8 rg
n 144 360.75 36 12 re f*
.933333 1 .8 rg
n 186 360.75 72 12 re f*
.933333 1 .8 rg
n 0 348.75 36 12 re f*
.933333 1 .8 rg
n 42 348.75 24 12 re f*
.933333 1 .8 rg
n 0 324.75 66 12 re f*
.933333 1 .8 rg
n 72 324.75 6 12 re f*
1 .941176 .941176 rg
n 84 324.75 66 12 re f*
.933333 1 .8 rg
n 0 312.75 66 12 re f*
.933333 1 .8 rg
n 72 312.75 6 12 re f*
.933333 1 .8 rg
n 84 312.75 18 12 re f*
.933333 1 .8 rg
n 0 288.75 6 12 re f*
.933333 1 .8 rg
n 12 288.75 6 12 re f*
.933333 1 .8 rg
n 24 288.75 72 12 re f*
.933333 1 .8 rg
n 96 288.75 12 12 re f*
.933333 1 .8 rg
n 0 264.75 252 12 re f*
.933333 1 .8 rg
n 0 252.75 84 12 re f*
.933333 1 .8 rg
n 0 228.75 198 12 re f*
.933333 1 .8 rg
n 0 216.75 6 12 re f*
.933333 1 .8 rg
n 6 216.75 6 12 re f*
.933333 1 .8 rg
n 12 216.75 24 12 re f*
.933333 1 .8 rg
n 36 216.75 6 12 re f*
.933333 1 .8 rg
n 42 216.75 66 12 re f*
.933333 1 .8 rg
n 108 216.75 6 12 re f*
.933333 1 .8 rg
n 0 204.75 6 12 re f*
.933333 1 .8 rg
n 6 204.75 6 12 re f*
.933333 1 .8 rg
n 12 204.75 24 12 re f*
.933333 1 .8 rg
n 36 204.75 6 12 re f*
.933333 1 .8 rg
n 42 204.75 66 12 re f*
.933333 1 .8 rg
n 108 204.75 6 12 re f*
.933333 1 .8 rg
n 0 180.75 30 12 re f*
.933333 1 .8 rg
n 36 180.75 24 12 re f*
.933333 1 .8 rg
n 60 180.75 6 12 re f*
.933333 1 .8 rg
n 24 168.75 198 12 re f*
.933333 1 .8 rg
n 24 156.75 12 12 re f*
.933333 1 .8 rg
n 42 156.75 18 12 re f*
.933333 1 .8 rg
n 66 156.75 6 12 re f*
.933333 1 .8 rg
n 72 156.75 6 12 re f*
.933333 1 .8 rg
n 78 156.75 42 12 re f*
.933333 1 .8 rg
n 120 156.75 18 12 re f*
.933333 1 .8 rg
n 48 144.75 12 12 re f*
.933333 1 .8 rg
n 66 144.75 18 12 re f*
.933333 1 .8 rg
n 90 144.75 6 12 re f*
.933333 1 .8 rg
n 96 144.75 6 12 re f*
.933333 1 .8 rg
n 102 144.75 24 12 re f*
.933333 1 .8 rg
n 126 144.75 18 12 re f*
.933333 1 .8 rg
n 72 132.75 30 12 re f*
.933333 1 .8 rg
n 102 132.75 6 12 re f*
1 .941176 .941176 rg
n 108 132.75 138 12 re f*
.933333 1 .8 rg
n 246 132.75 6 12 re f*
.933333 1 .8 rg
n 252 132.75 66 12 re f*
.933333 1 .8 rg
n 318 132.75 6 12 re f*
1 .941176 .941176 rg
n 324 132.75 18 12 re f*
.933333 1 .8 rg
n 342 132.75 6 12 re f*
.933333 1 .8 rg
n 348 132.75 18 12 re f*
.933333 1 .8 rg
n 366 132.75 6 12 re f*
.933333 1 .8 rg
n 372 132.75 66 12 re f*
.933333 1 .8 rg
n 438 132.75 12 12 re f*
.933333 1 .8 rg
n 24 108.75 312 12 re f*
.933333 1 .8 rg
n 24 96.75 12 12 re f*
.933333 1 .8 rg
n 42 96.75 6 12 re f*
.933333 1 .8 rg
n 48 96.75 6 12 re f*
.933333 1 .8 rg
n 54 96.75 42 12 re f*
.933333 1 .8 rg
n 96 96.75 18 12 re f*
.933333 1 .8 rg
n 48 84.75 324 12 re f*
.933333 1 .8 rg
n 48 72.75 24 12 re f*
.933333 1 .8 rg
n 78 72.75 6 12 re f*
.933333 1 .8 rg
n 90 72.75 6 12 re f*
.933333 1 .8 rg
n 96 72.75 6 12 re f*
.933333 1 .8 rg
n 102 72.75 60 12 re f*
.933333 1 .8 rg
n 162 72.75 6 12 re f*
.933333 1 .8 rg
n 168 72.75 6 12 re f*
.933333 1 .8 rg
n 174 72.75 6 12 re f*
.933333 1 .8 rg
n 186 72.75 12 12 re f*
.933333 1 .8 rg
n 198 72.75 6 12 re f*
.933333 1 .8 rg
n 48 60.75 180 12 re f*
.933333 1 .8 rg
n 48 48.75 12 12 re f*
.933333 1 .8 rg
n 66 48.75 24 12 re f*
.933333 1 .8 rg
n 90 48.75 6 12 re f*
.933333 1 .8 rg
n 72 36.75 30 12 re f*
.933333 1 .8 rg
n 102 36.75 6 12 re f*
1 .941176 .941176 rg
n 108 36.75 108 12 re f*
.933333 1 .8 rg
n 216 36.75 6 12 re f*
.933333 1 .8 rg
n 222 36.75 18 12 re f*
.933333 1 .8 rg
n 240 36.75 6 12 re f*
.933333 1 .8 rg
n 246 36.75 24 12 re f*
.933333 1 .8 rg
n 270 36.75 12 12 re f*
.933333 1 .8 rg
n 24 12.75 180 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 434 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# read_bit) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# read 10 bits and print result on stdout) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# uncomment this line to see debug message) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (#c.debug\(True\)) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# define modbus server host, port) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# open or reconnect TCP to server) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to connect to ") Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (SERVER_HOST) Tj .188235 .188235 .188235 rg (+) Tj .729412 .129412 .129412 rg (":") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if open\(\) is ok, read coils \(modbus function 0x01\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# read 10 bits at address 0, store result in regs list) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_coils) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if success display registers) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bit ad #0 to 9: ") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bits) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# sleep 2s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
 
endstream
endobj
163 0 obj
<< /Length 17173 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 73.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 690 re B*
Q
q
.933333 1 .8 rg
n 0 672.75 126 12 re f*
.933333 1 .8 rg
n 0 660.75 138 12 re f*
.933333 1 .8 rg
n 0 636.75 66 12 re f*
.933333 1 .8 rg
n 0 624.75 336 12 re f*
.933333 1 .8 rg
n 0 600.75 24 12 re f*
.933333 1 .8 rg
n 30 600.75 108 12 re f*
.933333 1 .8 rg
n 144 600.75 36 12 re f*
.933333 1 .8 rg
n 186 600.75 72 12 re f*
.933333 1 .8 rg
n 0 588.75 36 12 re f*
.933333 1 .8 rg
n 42 588.75 24 12 re f*
.933333 1 .8 rg
n 0 564.75 66 12 re f*
.933333 1 .8 rg
n 72 564.75 6 12 re f*
1 .941176 .941176 rg
n 84 564.75 66 12 re f*
.933333 1 .8 rg
n 0 552.75 66 12 re f*
.933333 1 .8 rg
n 72 552.75 6 12 re f*
.933333 1 .8 rg
n 84 552.75 18 12 re f*
.933333 1 .8 rg
n 0 528.75 6 12 re f*
.933333 1 .8 rg
n 12 528.75 6 12 re f*
.933333 1 .8 rg
n 24 528.75 72 12 re f*
.933333 1 .8 rg
n 96 528.75 12 12 re f*
.933333 1 .8 rg
n 0 504.75 252 12 re f*
.933333 1 .8 rg
n 0 492.75 84 12 re f*
.933333 1 .8 rg
n 0 468.75 198 12 re f*
.933333 1 .8 rg
n 0 456.75 6 12 re f*
.933333 1 .8 rg
n 6 456.75 6 12 re f*
.933333 1 .8 rg
n 12 456.75 24 12 re f*
.933333 1 .8 rg
n 36 456.75 6 12 re f*
.933333 1 .8 rg
n 42 456.75 66 12 re f*
.933333 1 .8 rg
n 108 456.75 6 12 re f*
.933333 1 .8 rg
n 0 444.75 6 12 re f*
.933333 1 .8 rg
n 6 444.75 6 12 re f*
.933333 1 .8 rg
n 12 444.75 24 12 re f*
.933333 1 .8 rg
n 36 444.75 6 12 re f*
.933333 1 .8 rg
n 42 444.75 66 12 re f*
.933333 1 .8 rg
n 108 444.75 6 12 re f*
.933333 1 .8 rg
n 0 420.75 36 12 re f*
.933333 1 .8 rg
n 42 420.75 6 12 re f*
.933333 1 .8 rg
n 54 420.75 24 12 re f*
.933333 1 .8 rg
n 0 396.75 30 12 re f*
.933333 1 .8 rg
n 36 396.75 24 12 re f*
.933333 1 .8 rg
n 60 396.75 6 12 re f*
.933333 1 .8 rg
n 24 384.75 198 12 re f*
.933333 1 .8 rg
n 24 372.75 12 12 re f*
.933333 1 .8 rg
n 42 372.75 18 12 re f*
.933333 1 .8 rg
n 66 372.75 6 12 re f*
.933333 1 .8 rg
n 72 372.75 6 12 re f*
.933333 1 .8 rg
n 78 372.75 42 12 re f*
.933333 1 .8 rg
n 120 372.75 18 12 re f*
.933333 1 .8 rg
n 48 360.75 12 12 re f*
.933333 1 .8 rg
n 66 360.75 18 12 re f*
.933333 1 .8 rg
n 90 360.75 6 12 re f*
.933333 1 .8 rg
n 96 360.75 6 12 re f*
.933333 1 .8 rg
n 102 360.75 24 12 re f*
.933333 1 .8 rg
n 126 360.75 18 12 re f*
.933333 1 .8 rg
n 72 348.75 30 12 re f*
.933333 1 .8 rg
n 102 348.75 6 12 re f*
1 .941176 .941176 rg
n 108 348.75 138 12 re f*
.933333 1 .8 rg
n 246 348.75 6 12 re f*
.933333 1 .8 rg
n 252 348.75 66 12 re f*
.933333 1 .8 rg
n 318 348.75 6 12 re f*
1 .941176 .941176 rg
n 324 348.75 18 12 re f*
.933333 1 .8 rg
n 342 348.75 6 12 re f*
.933333 1 .8 rg
n 348 348.75 18 12 re f*
.933333 1 .8 rg
n 366 348.75 6 12 re f*
.933333 1 .8 rg
n 372 348.75 66 12 re f*
.933333 1 .8 rg
n 438 348.75 12 12 re f*
.933333 1 .8 rg
n 24 324.75 318 12 re f*
.933333 1 .8 rg
n 24 312.75 12 12 re f*
.933333 1 .8 rg
n 42 312.75 6 12 re f*
.933333 1 .8 rg
n 48 312.75 6 12 re f*
.933333 1 .8 rg
n 54 312.75 42 12 re f*
.933333 1 .8 rg
n 96 312.75 18 12 re f*
.933333 1 .8 rg
n 48 300.75 234 12 re f*
.933333 1 .8 rg
n 48 288.75 30 12 re f*
.933333 1 .8 rg
n 78 288.75 6 12 re f*
1 .941176 .941176 rg
n 84 288.75 12 12 re f*
.933333 1 .8 rg
n 96 288.75 6 12 re f*
.933333 1 .8 rg
n 48 276.75 30 12 re f*
.933333 1 .8 rg
n 78 276.75 6 12 re f*
1 .941176 .941176 rg
n 84 276.75 72 12 re f*
.933333 1 .8 rg
n 156 276.75 6 12 re f*
.933333 1 .8 rg
n 48 264.75 30 12 re f*
.933333 1 .8 rg
n 78 264.75 6 12 re f*
1 .941176 .941176 rg
n 84 264.75 72 12 re f*
.933333 1 .8 rg
n 156 264.75 6 12 re f*
.933333 1 .8 rg
n 48 252.75 30 12 re f*
.933333 1 .8 rg
n 78 252.75 6 12 re f*
1 .941176 .941176 rg
n 84 252.75 12 12 re f*
.933333 1 .8 rg
n 96 252.75 6 12 re f*
.933333 1 .8 rg
n 48 240.75 18 12 re f*
.933333 1 .8 rg
n 72 240.75 24 12 re f*
.933333 1 .8 rg
n 102 240.75 12 12 re f*
.933333 1 .8 rg
n 120 240.75 30 12 re f*
.933333 1 .8 rg
n 150 240.75 6 12 re f*
.933333 1 .8 rg
n 156 240.75 6 12 re f*
.933333 1 .8 rg
n 162 240.75 12 12 re f*
.933333 1 .8 rg
n 72 228.75 30 12 re f*
.933333 1 .8 rg
n 108 228.75 6 12 re f*
.933333 1 .8 rg
n 120 228.75 6 12 re f*
.933333 1 .8 rg
n 126 228.75 6 12 re f*
.933333 1 .8 rg
n 132 228.75 102 12 re f*
.933333 1 .8 rg
n 234 228.75 6 12 re f*
.933333 1 .8 rg
n 240 228.75 24 12 re f*
.933333 1 .8 rg
n 264 228.75 6 12 re f*
.933333 1 .8 rg
n 276 228.75 36 12 re f*
.933333 1 .8 rg
n 312 228.75 6 12 re f*
.933333 1 .8 rg
n 72 216.75 12 12 re f*
.933333 1 .8 rg
n 90 216.75 30 12 re f*
.933333 1 .8 rg
n 120 216.75 6 12 re f*
.933333 1 .8 rg
n 96 204.75 30 12 re f*
.933333 1 .8 rg
n 126 204.75 6 12 re f*
1 .941176 .941176 rg
n 132 204.75 42 12 re f*
.933333 1 .8 rg
n 180 204.75 6 12 re f*
.933333 1 .8 rg
n 192 204.75 18 12 re f*
.933333 1 .8 rg
n 210 204.75 6 12 re f*
.933333 1 .8 rg
n 216 204.75 24 12 re f*
.933333 1 .8 rg
n 240 204.75 6 12 re f*
.933333 1 .8 rg
n 252 204.75 6 12 re f*
1 .941176 .941176 rg
n 264 204.75 78 12 re f*
.933333 1 .8 rg
n 348 204.75 6 12 re f*
.933333 1 .8 rg
n 360 204.75 18 12 re f*
.933333 1 .8 rg
n 378 204.75 6 12 re f*
.933333 1 .8 rg
n 384 204.75 36 12 re f*
.933333 1 .8 rg
n 420 204.75 12 12 re f*
.933333 1 .8 rg
n 72 192.75 24 12 re f*
.933333 1 .8 rg
n 96 192.75 6 12 re f*
.933333 1 .8 rg
n 96 180.75 30 12 re f*
.933333 1 .8 rg
n 126 180.75 6 12 re f*
1 .941176 .941176 rg
n 132 180.75 42 12 re f*
.933333 1 .8 rg
n 180 180.75 6 12 re f*
.933333 1 .8 rg
n 192 180.75 18 12 re f*
.933333 1 .8 rg
n 210 180.75 6 12 re f*
.933333 1 .8 rg
n 216 180.75 24 12 re f*
.933333 1 .8 rg
n 240 180.75 6 12 re f*
.933333 1 .8 rg
n 252 180.75 6 12 re f*
1 .941176 .941176 rg
n 264 180.75 120 12 re f*
.933333 1 .8 rg
n 390 180.75 6 12 re f*
.933333 1 .8 rg
n 402 180.75 18 12 re f*
.933333 1 .8 rg
n 420 180.75 6 12 re f*
.933333 1 .8 rg
n 426 180.75 36 12 re f*
.933333 1 .8 rg
n 462 180.75 12 12 re f*
.933333 1 .8 rg
n 72 168.75 24 12 re f*
.933333 1 .8 rg
n 96 168.75 6 12 re f*
.933333 1 .8 rg
n 102 168.75 30 12 re f*
.933333 1 .8 rg
n 132 168.75 6 12 re f*
.933333 1 .8 rg
n 138 168.75 18 12 re f*
.933333 1 .8 rg
n 156 168.75 6 12 re f*
.933333 1 .8 rg
n 48 144.75 24 12 re f*
.933333 1 .8 rg
n 72 144.75 6 12 re f*
.933333 1 .8 rg
n 78 144.75 30 12 re f*
.933333 1 .8 rg
n 108 144.75 6 12 re f*
.933333 1 .8 rg
n 114 144.75 6 12 re f*
.933333 1 .8 rg
n 120 144.75 6 12 re f*
.933333 1 .8 rg
n 48 120.75 30 12 re f*
.933333 1 .8 rg
n 78 120.75 6 12 re f*
1 .941176 .941176 rg
n 84 120.75 12 12 re f*
.933333 1 .8 rg
n 96 120.75 6 12 re f*
.933333 1 .8 rg
n 48 108.75 30 12 re f*
.933333 1 .8 rg
n 78 108.75 6 12 re f*
1 .941176 .941176 rg
n 84 108.75 66 12 re f*
.933333 1 .8 rg
n 150 108.75 6 12 re f*
.933333 1 .8 rg
n 48 96.75 30 12 re f*
.933333 1 .8 rg
n 78 96.75 6 12 re f*
1 .941176 .941176 rg
n 84 96.75 66 12 re f*
.933333 1 .8 rg
n 150 96.75 6 12 re f*
.933333 1 .8 rg
n 48 84.75 30 12 re f*
.933333 1 .8 rg
n 78 84.75 6 12 re f*
1 .941176 .941176 rg
n 84 84.75 12 12 re f*
.933333 1 .8 rg
n 96 84.75 6 12 re f*
.933333 1 .8 rg
n 48 72.75 24 12 re f*
.933333 1 .8 rg
n 78 72.75 6 12 re f*
.933333 1 .8 rg
n 90 72.75 6 12 re f*
.933333 1 .8 rg
n 96 72.75 6 12 re f*
.933333 1 .8 rg
n 102 72.75 60 12 re f*
.933333 1 .8 rg
n 162 72.75 6 12 re f*
.933333 1 .8 rg
n 168 72.75 6 12 re f*
.933333 1 .8 rg
n 174 72.75 6 12 re f*
.933333 1 .8 rg
n 186 72.75 6 12 re f*
.933333 1 .8 rg
n 192 72.75 6 12 re f*
.933333 1 .8 rg
n 48 60.75 12 12 re f*
.933333 1 .8 rg
n 66 60.75 24 12 re f*
.933333 1 .8 rg
n 90 60.75 6 12 re f*
.933333 1 .8 rg
n 72 48.75 30 12 re f*
.933333 1 .8 rg
n 102 48.75 6 12 re f*
1 .941176 .941176 rg
n 108 48.75 96 12 re f*
.933333 1 .8 rg
n 204 48.75 6 12 re f*
.933333 1 .8 rg
n 210 48.75 18 12 re f*
.933333 1 .8 rg
n 228 48.75 6 12 re f*
.933333 1 .8 rg
n 234 48.75 24 12 re f*
.933333 1 .8 rg
n 258 48.75 12 12 re f*
.933333 1 .8 rg
n 48 36.75 24 12 re f*
.933333 1 .8 rg
n 72 36.75 6 12 re f*
.933333 1 .8 rg
n 72 24.75 30 12 re f*
.933333 1 .8 rg
n 102 24.75 6 12 re f*
1 .941176 .941176 rg
n 108 24.75 96 12 re f*
.933333 1 .8 rg
n 204 24.75 6 12 re f*
.933333 1 .8 rg
n 24 .75 36 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 78 .75 18 12 re f*
.933333 1 .8 rg
n 102 .75 36 12 re f*
BT 1 0 0 1 0 674 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# write_bit) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# write 4 bits to True, wait 2s, write False, restart...) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# uncomment this line to see debug message) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (#c.debug\(True\)) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# define modbus server host, port) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* 0 0 0 rg (toggle) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# open or reconnect TCP to server) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to connect to ") Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (SERVER_HOST) Tj .188235 .188235 .188235 rg (+) Tj .729412 .129412 .129412 rg (":") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if open\(\) is ok, write coils \(modbus function 0x01\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# write 4 bits in modbus address 0 to 3) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("write bits") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("----------") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (addr) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (in) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F4 10 Tf 0 0 0 rg (\):) Tj 0 0 0 rg  T* (            ) Tj 0 0 0 rg (is_ok) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write_single_coil) Tj 0 0 0 rg (\() Tj 0 0 0 rg (addr) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (toggle) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (is_ok) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (                ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bit #") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (addr) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (": write to ") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (toggle) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (                ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bit #") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (addr) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (": unable to write ") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (toggle) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (            ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf .376471 0 .878431 rg (0.5) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* (        ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("read bits") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("---------") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_coils) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bits #0 to 3: ") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bits) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to read") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* (    ) Tj 0 0 0 rg (toggle) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (toggle) Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (10) Tj T* ET
Q
Q
 
endstream
endobj
164 0 obj
<< /Length 13236 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
.933333 1 .8 rg
n 24 12.75 180 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F4 10 Tf 0 0 0 rg (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# sleep 2s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 723.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 98.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 618 re B*
Q
q
.933333 1 .8 rg
n 0 600.75 126 12 re f*
.933333 1 .8 rg
n 0 588.75 138 12 re f*
.933333 1 .8 rg
n 0 564.75 90 12 re f*
.933333 1 .8 rg
n 0 552.75 444 12 re f*
.933333 1 .8 rg
n 0 540.75 108 12 re f*
.933333 1 .8 rg
n 0 516.75 36 12 re f*
.933333 1 .8 rg
n 42 516.75 24 12 re f*
.933333 1 .8 rg
n 0 504.75 24 12 re f*
.933333 1 .8 rg
n 30 504.75 54 12 re f*
.933333 1 .8 rg
n 90 504.75 36 12 re f*
.933333 1 .8 rg
n 132 504.75 36 12 re f*
.933333 1 .8 rg
n 168 504.75 6 12 re f*
.933333 1 .8 rg
n 180 504.75 24 12 re f*
.933333 1 .8 rg
n 0 492.75 24 12 re f*
.933333 1 .8 rg
n 30 492.75 108 12 re f*
.933333 1 .8 rg
n 144 492.75 36 12 re f*
.933333 1 .8 rg
n 186 492.75 72 12 re f*
.933333 1 .8 rg
n 0 468.75 66 12 re f*
.933333 1 .8 rg
n 72 468.75 6 12 re f*
1 .941176 .941176 rg
n 84 468.75 66 12 re f*
.933333 1 .8 rg
n 0 456.75 66 12 re f*
.933333 1 .8 rg
n 72 456.75 6 12 re f*
.933333 1 .8 rg
n 84 456.75 18 12 re f*
.933333 1 .8 rg
n 0 432.75 72 12 re f*
.933333 1 .8 rg
n 0 420.75 24 12 re f*
.933333 1 .8 rg
n 30 420.75 6 12 re f*
.933333 1 .8 rg
n 42 420.75 12 12 re f*
.933333 1 .8 rg
n 0 396.75 120 12 re f*
.933333 1 .8 rg
n 0 384.75 54 12 re f*
.933333 1 .8 rg
n 60 384.75 6 12 re f*
.933333 1 .8 rg
n 72 384.75 24 12 re f*
.933333 1 .8 rg
n 96 384.75 12 12 re f*
.933333 1 .8 rg
n 0 360.75 138 12 re f*
.933333 1 .8 rg
n 0 348.75 18 12 re f*
.933333 1 .8 rg
n 24 348.75 84 12 re f*
.933333 1 .8 rg
n 108 348.75 18 12 re f*
.933333 1 .8 rg
n 24 336.75 36 12 re f*
.933333 1 .8 rg
n 66 336.75 24 12 re f*
.933333 1 .8 rg
n 24 324.75 6 12 re f*
.933333 1 .8 rg
n 36 324.75 6 12 re f*
.933333 1 .8 rg
n 48 324.75 72 12 re f*
.933333 1 .8 rg
n 120 324.75 6 12 re f*
.933333 1 .8 rg
n 126 324.75 24 12 re f*
.933333 1 .8 rg
n 150 324.75 6 12 re f*
.933333 1 .8 rg
n 156 324.75 66 12 re f*
.933333 1 .8 rg
n 222 324.75 6 12 re f*
.933333 1 .8 rg
n 234 324.75 24 12 re f*
.933333 1 .8 rg
n 258 324.75 6 12 re f*
.933333 1 .8 rg
n 264 324.75 66 12 re f*
.933333 1 .8 rg
n 330 324.75 6 12 re f*
.933333 1 .8 rg
n 24 312.75 84 12 re f*
.933333 1 .8 rg
n 24 300.75 30 12 re f*
.933333 1 .8 rg
n 60 300.75 24 12 re f*
.933333 1 .8 rg
n 84 300.75 6 12 re f*
.933333 1 .8 rg
n 48 288.75 90 12 re f*
.933333 1 .8 rg
n 48 276.75 12 12 re f*
.933333 1 .8 rg
n 66 276.75 18 12 re f*
.933333 1 .8 rg
n 90 276.75 6 12 re f*
.933333 1 .8 rg
n 96 276.75 6 12 re f*
.933333 1 .8 rg
n 102 276.75 42 12 re f*
.933333 1 .8 rg
n 144 276.75 18 12 re f*
.933333 1 .8 rg
n 72 264.75 6 12 re f*
.933333 1 .8 rg
n 78 264.75 6 12 re f*
.933333 1 .8 rg
n 84 264.75 24 12 re f*
.933333 1 .8 rg
n 108 264.75 12 12 re f*
.933333 1 .8 rg
n 48 252.75 174 12 re f*
.933333 1 .8 rg
n 48 240.75 48 12 re f*
.933333 1 .8 rg
n 102 240.75 6 12 re f*
.933333 1 .8 rg
n 114 240.75 6 12 re f*
.933333 1 .8 rg
n 120 240.75 6 12 re f*
.933333 1 .8 rg
n 126 240.75 132 12 re f*
.933333 1 .8 rg
n 258 240.75 6 12 re f*
.933333 1 .8 rg
n 264 240.75 6 12 re f*
.933333 1 .8 rg
n 270 240.75 6 12 re f*
.933333 1 .8 rg
n 276 240.75 12 12 re f*
.933333 1 .8 rg
n 288 240.75 6 12 re f*
.933333 1 .8 rg
n 48 228.75 432 12 re f*
.933333 1 .8 rg
n 48 216.75 12 12 re f*
.933333 1 .8 rg
n 66 216.75 48 12 re f*
.933333 1 .8 rg
n 114 216.75 6 12 re f*
.933333 1 .8 rg
n 72 204.75 24 12 re f*
.933333 1 .8 rg
n 102 204.75 54 12 re f*
.933333 1 .8 rg
n 156 204.75 6 12 re f*
.933333 1 .8 rg
n 96 192.75 24 12 re f*
.933333 1 .8 rg
n 126 192.75 6 12 re f*
.933333 1 .8 rg
n 138 192.75 48 12 re f*
.933333 1 .8 rg
n 48 180.75 144 12 re f*
.933333 1 .8 rg
n 48 168.75 24 12 re f*
.933333 1 .8 rg
n 72 168.75 6 12 re f*
.933333 1 .8 rg
n 78 168.75 30 12 re f*
.933333 1 .8 rg
n 108 168.75 6 12 re f*
.933333 1 .8 rg
n 114 168.75 6 12 re f*
.933333 1 .8 rg
n 120 168.75 6 12 re f*
.933333 1 .8 rg
n 0 144.75 132 12 re f*
.933333 1 .8 rg
n 0 132.75 12 12 re f*
.933333 1 .8 rg
n 18 132.75 6 12 re f*
.933333 1 .8 rg
n 30 132.75 36 12 re f*
.933333 1 .8 rg
n 66 132.75 6 12 re f*
.933333 1 .8 rg
n 72 132.75 36 12 re f*
.933333 1 .8 rg
n 108 132.75 6 12 re f*
.933333 1 .8 rg
n 114 132.75 84 12 re f*
.933333 1 .8 rg
n 198 132.75 6 12 re f*
.933333 1 .8 rg
n 0 120.75 348 12 re f*
.933333 1 .8 rg
n 0 108.75 12 12 re f*
.933333 1 .8 rg
n 12 108.75 6 12 re f*
.933333 1 .8 rg
n 18 108.75 36 12 re f*
.933333 1 .8 rg
n 60 108.75 6 12 re f*
.933333 1 .8 rg
n 72 108.75 24 12 re f*
.933333 1 .8 rg
n 0 96.75 12 12 re f*
.933333 1 .8 rg
n 12 96.75 6 12 re f*
.933333 1 .8 rg
n 18 96.75 30 12 re f*
.933333 1 .8 rg
n 48 96.75 12 12 re f*
.933333 1 .8 rg
n 0 72.75 186 12 re f*
.933333 1 .8 rg
n 0 60.75 30 12 re f*
.933333 1 .8 rg
n 36 60.75 24 12 re f*
.933333 1 .8 rg
n 60 60.75 6 12 re f*
.933333 1 .8 rg
n 24 48.75 312 12 re f*
.933333 1 .8 rg
n 24 36.75 24 12 re f*
.933333 1 .8 rg
n 54 36.75 54 12 re f*
.933333 1 .8 rg
n 108 36.75 6 12 re f*
.933333 1 .8 rg
n 48 24.75 30 12 re f*
.933333 1 .8 rg
n 78 24.75 6 12 re f*
.933333 1 .8 rg
n 84 24.75 24 12 re f*
.933333 1 .8 rg
n 108 24.75 6 12 re f*
.933333 1 .8 rg
n 24 12.75 132 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 602 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# modbus_thread) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# start a thread for polling a set of registers, display result on console) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# exit with ctrl+c) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (threading) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (Thread) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (Lock) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# set global) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (regs) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ([]) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# init a thread lock) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (regs_lock) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (Lock) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# modbus polling thread) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (def) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (polling_thread) Tj /F4 10 Tf 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (global) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\() Tj 0 0 0 rg (host) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (port) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# polling loop) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# keep TCP open) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# do modbus reading on socket) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (reg_list) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if read is ok, store result in regs \(with thread lock synchronization\)) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (reg_list) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (with) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs_lock) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (                ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (reg_list) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# 1s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# start polling thread) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (tp) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (Thread) Tj 0 0 0 rg (\() Tj 0 0 0 rg (target) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (polling_thread) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# set daemon: polling thread will exit if main thread exit) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (tp) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (daemon) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg  T* 0 0 0 rg (tp) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (start) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# display loop \(in main thread\)) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# print regs list \(with thread lock synchronization\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (with) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs_lock) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (regs) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# 1s before next print) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 58.63937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
 
endstream
endobj
165 0 obj
<< /Length 1319 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 781.0394 cm
Q
q
1 0 0 1 40.01575 781.0394 cm
Q
q
1 0 0 1 40.01575 769.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 763.0394 cm
Q
q
1 0 0 1 40.01575 751.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
Q
q
1 0 0 1 40.01575 733.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 733.0394 cm
Q
q
1 0 0 1 40.01575 733.0394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
 
endstream
endobj
166 0 obj
<< /Length 8835 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Index) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 744.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (_) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 726.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (__init__\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 696.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (A) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 666.2394 cm
q
BT 1 0 0 1 0 14 Tm 29.05961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (auto_close\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 636.2394 cm
q
BT 1 0 0 1 0 14 Tm 30.15961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (auto_open\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 605.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (C) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 587.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (close\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 557.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (D) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 539.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (debug\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 521.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (decode_ieee\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 491.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (E) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 473.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (encode_ieee\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 442.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (G) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 424.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (get_2comp\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 406.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (get_bits_from_int\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 388.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (get_list_2comp\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 358.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (H) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 340.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (host\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 309.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (I) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 291.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (is_open\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 261.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (L) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 231.4394 cm
q
BT 1 0 0 1 0 14 Tm 35.18961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (last_error\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 201.4394 cm
q
BT 1 0 0 1 0 14 Tm 26.83961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (last_except\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 171.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (M) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 153.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient \(class in pyModbusTCP.client\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 135.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (mode\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 104.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (O) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 86.63937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (open\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 784.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (P) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 766.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (port\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 748.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.client \(module\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 730.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.utils \(module\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 700.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (R) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 670.2394 cm
q
BT 1 0 0 1 0 14 Tm 31.84961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (read_coils\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 640.2394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (read_discrete_inputs\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 610.2394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (read_holding_registers\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 580.2394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (read_input_registers\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 549.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (T) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 531.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (timeout\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 501.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (U) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 483.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (unit_id\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 453.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (V) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 435.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (version\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 404.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (W) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 386.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (word_list_to_long\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 356.6394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (write_multiple_registers\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 326.6394 cm
q
BT 1 0 0 1 0 14 Tm 4.069606 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (write_single_coil\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 296.6394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (write_single_register\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 296.6394 cm
Q
q
1 0 0 1 308.9102 296.6394 cm
Q
 
endstream
endobj
167 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
168 0 obj
<< /Length 846 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 744.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (p) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 726.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (pyModbusTCP) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 708.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.client) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 690.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.utils) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 690.6394 cm
Q
 
endstream
endobj
169 0 obj
<< /Nums [ 0 170 0 R 1 171 0 R 2 172 0 R 3 173 0 R 4 174 0 R 
  5 175 0 R 6 176 0 R 7 177 0 R 8 178 0 R 9 179 0 R 
  10 180 0 R 11 181 0 R 12 182 0 R 13 183 0 R 14 184 0 R 
  15 185 0 R 16 186 0 R 17 187 0 R 18 188 0 R ] >>
endobj
170 0 obj
<< /S /D /St 1 >>
endobj
171 0 obj
<< /S /D /St 2 >>
endobj
172 0 obj
<< /S /r /St 1 >>
endobj
173 0 obj
<< /S /r /St 2 >>
endobj
174 0 obj
<< /S /D /St 1 >>
endobj
175 0 obj
<< /S /D /St 2 >>
endobj
176 0 obj
<< /S /D /St 3 >>
endobj
177 0 obj
<< /S /D /St 4 >>
endobj
178 0 obj
<< /S /D /St 5 >>
endobj
179 0 obj
<< /S /D /St 6 >>
endobj
180 0 obj
<< /S /D /St 7 >>
endobj
181 0 obj
<< /S /D /St 8 >>
endobj
182 0 obj
<< /S /D /St 9 >>
endobj
183 0 obj
<< /S /D /St 10 >>
endobj
184 0 obj
<< /S /D /St 11 >>
endobj
185 0 obj
<< /S /D /St 12 >>
endobj
186 0 obj
<< /S /D /St 13 >>
endobj
187 0 obj
<< /S /D /St 14 >>
endobj
188 0 obj
<< /S /D /St 15 >>
endobj
xref
0 189
0000000000 65535 f
0000000075 00000 n
0000000189 00000 n
0000000299 00000 n
0000000414 00000 n
0000000625 00000 n
0000000836 00000 n
0000001007 00000 n
0000001178 00000 n
0000001349 00000 n
0000001520 00000 n
0000001692 00000 n
0000001864 00000 n
0000002036 00000 n
0000002208 00000 n
0000002380 00000 n
0000002552 00000 n
0000002724 00000 n
0000002896 00000 n
0000003068 00000 n
0000003240 00000 n
0000003412 00000 n
0000003584 00000 n
0000003756 00000 n
0000003928 00000 n
0000004100 00000 n
0000004272 00000 n
0000004444 00000 n
0000004616 00000 n
0000004788 00000 n
0000004960 00000 n
0000005132 00000 n
0000005304 00000 n
0000005476 00000 n
0000005648 00000 n
0000005820 00000 n
0000005992 00000 n
0000006164 00000 n
0000006336 00000 n
0000006508 00000 n
0000006680 00000 n
0000006852 00000 n
0000007024 00000 n
0000007196 00000 n
0000007368 00000 n
0000007541 00000 n
0000007714 00000 n
0000007887 00000 n
0000008060 00000 n
0000008590 00000 n
0000008802 00000 n
0000008925 00000 n
0000047247 00000 n
0000047356 00000 n
0000047470 00000 n
0000047729 00000 n
0000047920 00000 n
0000048092 00000 n
0000048264 00000 n
0000048436 00000 n
0000048608 00000 n
0000048780 00000 n
0000048952 00000 n
0000049124 00000 n
0000049404 00000 n
0000049521 00000 n
0000049724 00000 n
0000049955 00000 n
0000050074 00000 n
0000050195 00000 n
0000050407 00000 n
0000050619 00000 n
0000050831 00000 n
0000051043 00000 n
0000051255 00000 n
0000051467 00000 n
0000051679 00000 n
0000051891 00000 n
0000052103 00000 n
0000052275 00000 n
0000052447 00000 n
0000052619 00000 n
0000052791 00000 n
0000052963 00000 n
0000053135 00000 n
0000053307 00000 n
0000053479 00000 n
0000053651 00000 n
0000053823 00000 n
0000053995 00000 n
0000054167 00000 n
0000054339 00000 n
0000054511 00000 n
0000054683 00000 n
0000054855 00000 n
0000055027 00000 n
0000055199 00000 n
0000055371 00000 n
0000055543 00000 n
0000055715 00000 n
0000055887 00000 n
0000056060 00000 n
0000056233 00000 n
0000056406 00000 n
0000056579 00000 n
0000056752 00000 n
0000056925 00000 n
0000057098 00000 n
0000057271 00000 n
0000057444 00000 n
0000057617 00000 n
0000057790 00000 n
0000057963 00000 n
0000058136 00000 n
0000058309 00000 n
0000058482 00000 n
0000058655 00000 n
0000058828 00000 n
0000059001 00000 n
0000059174 00000 n
0000059347 00000 n
0000059902 00000 n
0000060115 00000 n
0000060288 00000 n
0000060461 00000 n
0000060702 00000 n
0000060815 00000 n
0000061056 00000 n
0000061137 00000 n
0000061326 00000 n
0000061493 00000 n
0000061624 00000 n
0000061759 00000 n
0000061899 00000 n
0000062050 00000 n
0000062221 00000 n
0000062367 00000 n
0000062509 00000 n
0000062706 00000 n
0000062881 00000 n
0000063012 00000 n
0000063144 00000 n
0000063314 00000 n
0000063451 00000 n
0000063597 00000 n
0000063744 00000 n
0000063891 00000 n
0000064031 00000 n
0000064159 00000 n
0000064287 00000 n
0000064484 00000 n
0000065490 00000 n
0000065626 00000 n
0000071498 00000 n
0000071634 00000 n
0000080649 00000 n
0000098601 00000 n
0000115622 00000 n
0000127887 00000 n
0000139914 00000 n
0000153353 00000 n
0000166957 00000 n
0000178987 00000 n
0000188255 00000 n
0000205487 00000 n
0000218782 00000 n
0000220159 00000 n
0000229052 00000 n
0000229188 00000 n
0000230091 00000 n
0000230338 00000 n
0000230376 00000 n
0000230414 00000 n
0000230452 00000 n
0000230490 00000 n
0000230528 00000 n
0000230566 00000 n
0000230604 00000 n
0000230642 00000 n
0000230680 00000 n
0000230718 00000 n
0000230756 00000 n
0000230794 00000 n
0000230832 00000 n
0000230871 00000 n
0000230910 00000 n
0000230949 00000 n
0000230988 00000 n
0000231027 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(-\270/\215\023\374\232\255\017j\310\301DYu\363) (-\270/\215\023\374\232\255\017j\310\301DYu\363)]
 /Info 126 0 R /Root 125 0 R /Size 189 >>
startxref
231066
%%EOF
%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 50 0 R /F4 52 0 R /F5 53 0 R /F6 64 0 R 
  /F7 67 0 R /F8 68 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /Contents 150 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
5 0 obj
<< /Contents 151 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
6 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.7894 251.3057 766.7894 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot >>
endobj
8 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.7894 135.0457 748.7894 ] /Subtype /Link /Type /Annot >>
endobj
9 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 80.01575 718.7894 190.0657 730.7894 ] /Subtype /Link /Type /Annot >>
endobj
11 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot >>
endobj
12 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 549.8594 0 ] /Rect [ 80.01575 700.7894 146.1657 712.7894 ] /Subtype /Link /Type /Annot >>
endobj
13 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 549.8594 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot >>
endobj
14 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 345.4594 0 ] /Rect [ 80.01575 682.7894 159.4857 694.7894 ] /Subtype /Link /Type /Annot >>
endobj
15 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 345.4594 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot >>
endobj
16 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 129.0594 0 ] /Rect [ 80.01575 664.7894 223.3957 676.7894 ] /Subtype /Link /Type /Annot >>
endobj
17 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 54 0 R /XYZ 40.01575 129.0594 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot >>
endobj
18 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 605.4394 0 ] /Rect [ 80.01575 646.7894 308.4457 658.7894 ] /Subtype /Link /Type /Annot >>
endobj
19 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 605.4394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot >>
endobj
20 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 156.6394 0 ] /Rect [ 80.01575 628.7894 202.2957 640.7894 ] /Subtype /Link /Type /Annot >>
endobj
21 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 63 0 R /XYZ 40.01575 156.6394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot >>
endobj
22 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 626.6394 0 ] /Rect [ 80.01575 610.7894 240.0857 622.7894 ] /Subtype /Link /Type /Annot >>
endobj
23 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 626.6394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot >>
endobj
24 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 92.63937 0 ] /Rect [ 60.01575 592.7894 235.0857 604.7894 ] /Subtype /Link /Type /Annot >>
endobj
25 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 92.63937 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot >>
endobj
26 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 574.7894 207.8357 586.7894 ] /Subtype /Link /Type /Annot >>
endobj
27 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot >>
endobj
28 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 736.2394 0 ] /Rect [ 100.0157 556.7894 281.7357 568.7894 ] /Subtype /Link /Type /Annot >>
endobj
29 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 736.2394 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot >>
endobj
30 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 40.01575 672.0394 0 ] /Rect [ 80.01575 538.7894 202.2757 550.7894 ] /Subtype /Link /Type /Annot >>
endobj
31 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 40.01575 672.0394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot >>
endobj
32 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 702.0394 0 ] /Rect [ 60.01575 520.7894 171.7157 532.7894 ] /Subtype /Link /Type /Annot >>
endobj
33 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 702.0394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot >>
endobj
34 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 648.8394 0 ] /Rect [ 80.01575 502.7894 215.0557 514.7894 ] /Subtype /Link /Type /Annot >>
endobj
35 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 648.8394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot >>
endobj
36 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 87.23937 0 ] /Rect [ 80.01575 484.7894 192.2757 496.7894 ] /Subtype /Link /Type /Annot >>
endobj
37 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 73 0 R /XYZ 40.01575 87.23937 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot >>
endobj
38 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 320.2394 0 ] /Rect [ 80.01575 466.7894 193.3757 478.7894 ] /Subtype /Link /Type /Annot >>
endobj
39 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 320.2394 0 ] /Rect [ 549.6998 466.7894 555.2598 478.7894 ] /Subtype /Link /Type /Annot >>
endobj
40 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 40.01575 284.2394 0 ] /Rect [ 80.01575 448.7894 262.8757 460.7894 ] /Subtype /Link /Type /Annot >>
endobj
41 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 40.01575 284.2394 0 ] /Rect [ 544.1398 448.7894 555.2598 460.7894 ] /Subtype /Link /Type /Annot >>
endobj
42 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 344.2394 0 ] /Rect [ 40.01575 430.7894 126.7157 442.7894 ] /Subtype /Link /Type /Annot >>
endobj
43 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 344.2394 0 ] /Rect [ 544.1398 430.7894 555.2598 442.7894 ] /Subtype /Link /Type /Annot >>
endobj
44 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 120 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 40.01575 412.7894 66.13575 424.7894 ] /Subtype /Link /Type /Annot >>
endobj
45 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 120 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 544.1398 412.7894 555.2598 424.7894 ] /Subtype /Link /Type /Annot >>
endobj
46 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 124 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 40.01575 394.7894 140.5857 406.7894 ] /Subtype /Link /Type /Annot >>
endobj
47 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 124 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 544.1398 394.7894 555.2598 406.7894 ] /Subtype /Link /Type /Annot >>
endobj
48 0 obj
<< /Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 
  46 0 R 47 0 R ] /Contents 152 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
49 0 obj
<< /Contents 153 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
50 0 obj
<< /BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
51 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 251 /Length 38123 /Subtype /Image 
  /Type /XObject /Width 968 >>
stream
Gb"-VG?e'Jrs*L7fR(^O&]BASWONNfcJfTuXV3XRC2k$EE>H#3U=>0+'jCoF'i@g80&26b;.P=Gg#)Po5#6VV+JOOZ!2'!-^1'WN^:F!nF$AdLk2r:czzzzzz!%P%RYV7@L,q^f&3]d-:rVPR4iBdKeqXeM%Eg:lsBP8eGjMd#nDr/.#-0O@MY^VK1z?RI'CK*!VNg[jUS+$Fr"gY5pT&1h(rE8%[5UIUAgEcUHtZ(n_7[@*GNJUrB<Q55P%X!83kC22JVg@Vu=k2pO8[dDbSVmE_9X/kRaq=@[j>e+_+[K?aE"9\i1#7!J>oI(k+Tt%V"ost8+!!%Nf.m#iifs>=X044GEo:s)`GOA]P(RI=6qUjKS)&jMF.Op<F=c1H5)Dn\&Yb3!%kibPtG5V.*ZY%HcZ=F8)GOstAPe)nq3HF,tM4gN7CY,_CLPJ*>ng$7W3]T2\V%R6H@V?pl1lD%7A4k&Err,)F5!*uVUt8n\CtZIHo-dHH)`Fd9hnBR1%^rgSPd`)abK7j4Ms'^-qYL%h<`WM;F;ZfB`/GQik_ZopmJ>k(5ORFDT9PSYH;aeD!!#8A&0E!DoB+<TIf#,A,Xp)K^]30Eg0.!:7i4>LjlIpI[qjTuJ,fM3-;@[TFQqAY>E9jj:@\,De#2Hpl)`dY2p07aTicd0eh'MS'ZF.T=>=mZ9M4663d!2:2cipV'<V?^-)IJ5Rs+2QQ"Cei(+l9-*Z,aho&\'3_Eugl!WW3#!#S7!9"K?A.V6\T$Ptic4+I"\GO"JY>]c3oPAA[H&OjhsA&c$j]5QB.jij,KiSia8EH/(\B'/-oO,k>F\o?WFhS"8!4Zt/fSCj`8+%o7"@H=:'#N]g6P61RBc("b2o?ZXaBUi'(!!!!q_o0U9#6b9VH$Qs1\CfKfBkV1!Bi%`,e)&s<e^[YB&GZ/";g;&/8RYn@23X5f6P2@%+Fr#dX[u#Q7l)qWmK@R!TibE!d'Ud0_h2"Y_hSb\MMbNf$NL/,!+-lo,NILcCE#3M*&1njj2R(hR&?gYetu02n`.Zn?bcU<q=Cds^W$<).[$<lI/Wp7h7ImWRPg"dG.i4p\;?09SmJU,]p:3PEotT6GOOCn/e\3b!!#WcKREh!r>dtCN#O_$b0#Ufk>R6o1,9b1GjsFpCUk/(]#Io*,pe8.[^Wa?`/,/0Xf[9rB]-[WX&c@6FQl\HFuJY)!<<*"C8mr%U@@YkJO&/Wkbt5M69.b18&r`nahu"@-n)%jIZ(EgaNr1^q!]HGC_mm($O[=[)&Z'#G'8&smd:)V!SDPq!!!!3OHu2Uq!d7iUITB<(T=@6p?pa`c'gLKDr*#n-t$=$I#Fr%-m'P'0k85QY@!p1.F"$%p$/r)j2Mlg?Ec$k!!!"lVMU.dfsYa%NugIF5O$k-Va)@1%1PalY$i_OEuA1`=-k\NQ'KnZ`J_XN_Jh7m!!!!aAL&NHr;,`_X]i,qOc`L>;]@W2fT@CKdaHQGf*,0WYd!W^eZ6#hcSdX<j\Ege2/CeAqtF7F"TSN&:n8:7'V%=5G0lmJo()A:lKT$09K77a>]+F3lahV+]6E^iG^)&_gmA/OSXnTfX]od66i[2eJFZQD>./78TqNWja)c?E4F$?<XqUo,io8sZO:[jkd8Wb9;/sgI0p.T\XG[,[!!&*A+$P'kGB[+e;q'4E>J>K19M>l\MEjdFARulAE59cE:.@]bi4snP@:?5f!WW3#O:#]9BliF\;,U:I2E'F)Gr)9DeeLLDE8eZf:7XGrWDf]rY?j23%0-A.[G6lh7goh9ld`'!j5Z>iQcHZWW.%'"699>Y/12f(J,]AibY6ULz8D9OlDgM'>_;k&tba;750(Dg%IsUkW/UBY[=84/J]Ys"4.n4Y2J9tgHEUel!-i3T+DdZs<nPr"H`QH><b*4?KTqQ$MNR-e:>\WEKU#Fth<De$U<2$M!YE"W<K*De1T0Fus(Bjd=!0@CDDVWUjf;Ek:qt=mX[<r-12p0:c;S5[u:?Lt<8kS+2WKFafj2[4TZ\C5fpZIi3lQeGL\13@h;aNgfW)9='VRCBu3f1Nuz6\#(-Qa3o;^OH,:1,;t`no_IPaQ:W/HhME&mbYXHrnF>HTB_]BbC<fkrr)`CrE<B.)`DMgMMfR"bKJ&NHMmOm^$?.K3gBI4gt^[HGOBS;dY7,Re>\W7MAN[?j$npWmdBKUIU)pR!!!>#8>`De3bZm5lM+;7>^G27D]erDkig+DftD`VqX=F^qeKN@5(EPoh5R*An`7fUYC69%[r:LPRQu_?cjK:4nY'X`jlIfaQNdEi!0E/6U7rDT>-r/$QH>3#E7llp/'HJn<C]Q7ir-ZD"(/`fp!9O'kk$5)"+q5QbGI=[N/ZsrQS)PV/g3)0<F0"'cf`>u69",CBk_:XZXmHLSj4Ek\#f3.h,q.(?%.7:n,Y1L^)Sh7J;T3keMCdZ'WS:Z>[:sdU(8[DST;2Rrj$tLp3,iWeZE%W:/9*]cu@'f+[JC[jZGtF`/#"IkN^Tu/%BIcmpVTaM5R7!D%p5#"98E%C8umk&'E&;5(!!^afBL9Dt)]$U?;O.Y@!n`;n>>O%eSWf)`EL9A]pAkFD'pjX[SRA2u<457lPVXfKkXbDY3DTs.<3BOto%A't=mfG4!F@l_L=%H?IV"$#?SLc)"dSoUY$_O"Xd+q+hSX0eo@`^Ncuo`7&EYEUVbtDV_nS@<!=oLLtM6[^NQ2R(PH[!!#8ald;KJd%Ng0]fMMY-nAW;H8Qolj3!W;%2q'rH[btikC<JTc@_^[T(#p#'TDA.X%.C5rql/Y9DI]!"G(H4l-cDLkK\20d%Ni,P_u=>JUma#WN#.Jl^RCchS"9de^`nZmYc5[\n0Gk3`gg6k0bndqG(U5A\.9nkntEZ96m*1q:W)eHhQf/c;TB1'c#uYS=H)VY1jR7r4U&^%Ndl.P;qM("98E%TI-@3\U4'g<j0f&]mtV5iB=)6SYCJ"2fI"?[oKJ0oO#bYgjckeeb%JQiaU:]r:B/&)3d.,T-u-;EF6L4&P[+YD!HC/)-aHP+!2T9e(3*9DO[,bQW[,K>[:+L?d.'UX&+nL4aT*#H;mjC3@h#GS_oa6q0]o-J\dEk6iR)^mk6l0l;44P@S39_!WW3#:u)j%(/bM4p\/<#!13O[;cADEUnjg54d7"us.2E&Rf9@_UI.&0_Ba?0HN4!C-'l@&(7q!]!OD?)s7p"M9h\4pXW\i2JaT<^::CrP'[!MTFKR6ojtGl^)`MZ%R[T,rhVPqma2c5eo+[m:3tF_OE:*&fn`-\Y!<<*"&3hBaUU=mhZ?l0sB%5i"@dYB1b*=J9Dr+/H)Dl+MqDCXfoQ]`T1%)fnR0&RW/L)K-rtQSP-e[2+,o0BT:dF8kh7@_rLCR<a<M_p>(bqc/PuH[;mX'k-euU<AI=C_NCdgc];+[KH?3:0-!)R0a+$[JNbEf59S]cKDS5V^%,hMj6\Rn2r6b9O6bEgRLi,31=AZ:&D2bO,CTDtGeiofJP\ccAIh`>40&&c9!JH#H:j\+P7/mc1m:<JQVNi#$TCMT9IE_>-/STCs5WVON:RS%"kVTFt'Y&8BpS0J"6!5KC>6q#,;aKR]?KZei+HjB/5:Y1`%aN?ZODV_lM0"Y26H7\SfmX'j+d4&6HI^3nL50BgH`;7/9m]mf1qtH/.M>?r:iu`dK@;Ka2\e#)OLB@bk]RB[C&nXHs_V2D5l]cPf]?e/JmWW(fLMtnRM)'@*IQjlt-Vp=uo=H^)JDM`Wq5$`NZ7Z7[!!&[l9UIMbZK9Q5:F6%h>kT*nBM]]]U=ZL,:^Z=`ZuY9N17(i:nqI+gc-<(Y>Gm]<?+T+Yjo+d.f@_[Pk&]_2Putci_KqqL.)FHa[=W>aX+&+eoBT_WB_?Q9g==^&1d+!mFY*Rn!!$"F.kAfgcAn(HM\e#lr6ejDbKS2+Cp0\3V4s\>@))ci1FP5lDV_%BWMukRT%,C'K^tH_H4NG[JO!UQA#$!$W2-4W2qG-;bCs[@]mB_XrM^EHD='oY-@P<+@EPe,f@SX0gg!TLcIgcofs51CKnZ6/#n7??k;I//O<1'qX4s=8#B+O!H;)<8>&eQPn`.[ep$66u?m$sM9/TgS=\YGJ<V4dPl,hJ_H3Xp"84Bht)@6BD!.Y1t,pfs8foe*s?soWQ?akX?DqqjBoWXs:qFL`7JU#/R`jTgCT&rELYF>t$!!"-5R@0J<7ZHEtGgiNaPLtZ`(!5"0?G4e9e"_[]HLs``<In6d(DlPr]2qWubM:nNn`.Zkb5hSC!0F.cB?rJLcp1rF^ViPsWlPut[ICQ^^4#lNTH4X\RKRcscp9r`5p-_p?5F1R!!&\c84cC@3,t[ON(gE]]rLq8qhjHL77G2P]mIM@pT@+=!HEsQM/dTX;c6M.eZ./j4*Oen!rr<$^t=Vc2n4c@FR7ZMgpqL-bCOEdq=Eb_-;9MfQZ(BPOcPQ!l#1#4!!!#K>2eH!K*DeEnT`X9f"_4\C['a1#0>!2qu-9HqtKR*kOYgWX:?73KL?7L!!#imLCYJ%Rl3u691r#TDSUc'VbWcq]eCJV=qM>YDJj@']"4-)^]4<11M>!hrd$X+!!!"`.46M+nDV8JHhQOjGWIlHj2R'?IJS&B?U'2^O-4Qd=P0?:M_$D1lI;f^XB@?15_-2u!<<*"^-PFdbhBI?gUD)s!F&]0H19b.IXZ_lIN];<R/Hm[TV.tBe#.9%7ql^Q3c!<Jldr>HXpY40!2(Z08P/IHpNLUs;--hsXCZ!Uk3D5()4Q4:ldA$,ZEpkd9=qgJgY(9%IcBSTkiLo+q?J_U!!!!a/2At9:7j^5CXt%PCMOe*)*X\MZ=V3>F68uRFXf:-Q?@?>'kgNP]m=holIERoohndiV<O/:U#DqIUO7H:hRn-O\iKfk!.\5u+X,gsZ"$_09PN(Z)0^AkHM-P4(bf@Zb*<br?;*p^@9k#R93tq2=BO5LmG#[A*G]A'8TQ*0A3)b46\Z$&[VZt4it;=l!'hGJ-75<GGAc*>APPuq"pP9:b\l4G0kE6R&!,bkO$A!b%+f$RYdh3Q^qdaF)`Ncr2m-/]<q>hPZr*'QQ0mu+B@!/tkg6$dc_'7'*WQ0?!7EDF-KaC2P7&0Zm+8FJ_hJV3A7R+9.4H_!g"D?*4*LT!oqtTXIe`D@:/2;b8o'6WU8$8C?XLBdC"KLnDJj@J\olKPe`CC%g=k8O4*R8[ICbK#ci*b8$OR5C(CL3C!!(p?j2[4STqT)Bn)bgdSt6u>q'^/#)]O"gg3(i>8HOJ$`/,->&J6*KHsg6`<6NA(GkC4Iq=EdYD;-sqp?YPF3]1X"6pX+i>GWf!.`0<N`JYOP=ZcZa!.^Li4[&bhSNHiMri9,(ShOS>kK]Xkp%@YK&#DZM1G]7@LG<;Y\@]@kfs9`3l-m+Zh0SbZ<G#hile8CEIXXKBiVWB<;g@02GH[pB-`s-"]mEse>&%_a#hP6:VIll0X_>E<q>AgG>Ar6&$""\V!!!"t[0d6JNZUJ\&Xn<GXf_!Qc's?;K(eZj^O5kJ.9!*'3B=K\d6`(M"%QKs\NtiPD;)Amrql/6r:.gQoB'oBY[PkL4d=CZ\RAoTc_!F_O,qW3c"6k9rh[-73$fjs3]`]V'N_GBTp^M)T-(c(V+[.MSih;V^k!LfG&5a2R?j.>M)S(OG3d`HLECtI]Qit,*BO<(!q+pYS!9/U/[hUVLu,PGZa60lS=uW"9ge+jfY18a!!!"\UtF=%$A&'MqFX@PY-+pl2TpAbG'5d_`R)t.8sR-)^&ijnmbG?*/hVSKoP*!aV6R;1R[REN;A9i\C&*udmHj0f[5p?0%N[`Wq!d87E\h@RUfXJd:5di6CR95kCtuO_(.(ZhP%_s:'rB\l]m<NmVUr5]ZD-p"l[G1'Su&8pQS)RBWYmU)/6fQ!qtBD):S%t)%Y"?NnQ5YlchmJ*W=1R=1EMTIn!%E%p^MNL!!%P<NT)Z=:O.52,9nFjK&Shb\u;R+bQG]rSgj;0OJ^AtnWfh+`D-XC#7A-Y\LE>Lr>Tt:N,k/-4N1o9#fZ\LD;3L%qt98Fmr&'unWP=rVUo+bFD6TLl-GqaX1H45_Sb!t/h"*=\[akNpol5S#QOi)!*CZu.%m5+BpPK-]6<SAb5kVCp=QW[XK2,21r\tXp9q94UAASpe*X6</Cm5j!!!!aV'I?5H$FQN)B-c@b.>*mKSP>hY37B8dp+ImCYRCi<EWI-;cAltgqS?2F[Z91!!)N=+sS<]81Q):kih5,['#FUIB2eHRZj2/lL!tU@q-`GHsI\oX9&A%!)VJd()HcDqqKl[;i7oeZL[VYX1ge!;_rI%&9mnQ77BXN?2][g(Bjd=!!$%t;GmW!6)-o/pjBf^ZZAZ.#j[?tX+o_N:3q5t\$u*UhgHk7I%?C^_7D#p!!!#oO!d_p\@T8OWMsTHC:_$h7n#kOY"1ZiA?H^-%UZ8bio8r1'GSKs+ohTCJ6Jt_\2YTR^sUPla5]$mf$)n'4$>`tF]%-tZZA"ej2[40IX\X9l-3C6=9o%]YI\g6z<(9nhQC!q>e##iNA7V4#S:Z?EMMd9n(F=O<+]f%7HM#;7h-EN@7o<.2g"De%.F">a(Bjd=!)R1=H1T&#btUPm6WmRFe^a?L]mHh2W^=*C=*&D&Er>n7*??/7`ait)/eA:$',+Lb"TSN&:nn-s"Z\S'nT[0+@q1C##mgp>/#mWt0NSWFIJVILh-F)`=$]+QLT^^Y!!"K%-RZshgUh%?Q4u+AmHslNrU]XP=ViA-[5h<0EcZ;ULTd1(BgVEjq"T*b70*Ag!)tbZZ*E`bmeZeVEcQ3Nm\^]:!kDLuq=Ee!)"dImjQ5KoS=D!D(D[dl/d_RY!'o7lL5%`N4&^aZe^a?^n;*!\@pKZcaOMTtjlHXK"Amk2oD/(Ff;GGCk04jr70*Ag!(`Z4Jc\/$5<Cqgb*+_A2KV#>2j\Ya/0S)EcJ,gH"TguB"q>f>Sti'U^V;uj*nEa\!!!#'Q^!`qiSe3YBIGA]>;L^X;(Rg0b?%YB'GM6L%>L<G]mBA,h;)GPI*&rJz2Bj@j?!LVK'c"-`ZmZ_Z7n9ng8;\Nk=4"R'mfW\X_hJVSLTbL>QWjIj!2,W./1dUd@rH;3rQ:_@[s(;2#4&"Z%W_5D&K\ZPPERdV0VE.6M\e$K(Bjd=!)QZn;c<i$6)-o/CA(FLM?S%n[u$$$j4Y>optF'?00;7bF\r,=!!$L"jN/':='%7:2&-i@2`J5/c_%PH8D54g<sEmDg;V$"8P)KH98hN\K*Moh(Bjd=!:]B5Mi.Z=!ZW4$Gs%[TM2@Rc='AcGl_:BajD(qj8P/IGp9qE<VY+Y9B1KG;ZEdRK"TSN&n.d@b:l9/EZmk)Sb12`ZEQZ='6*;!,nF1Bu='&sEAIT(X\oI2q4k:>K!!!"H_4*B%gt^[5]dP<Y;1Q2uk76g8W[6`kWfWO4k3_QlU.#IKiG3gR('"=7UejlaOHYkAO2j%31(jiqnaZ.N/#pUNX/cqYpf^Zt<F&n$DF?l\Yc\63!!(rLS=CR;DsruD>>c/Of<1[Z^OKQr*p]Q#4lg>a85E"t2I/C+4"i7jP`um570*Ag5]%2S)scq[Y-5#^.kBrFiY!:RcFTa="1_TuW9Ln(\S5bl.4Qf.4$*ZN"gP39!!!"6MpTgIMBDE[niAfm*ZcBkhnNf0;,)[J/U9?:3WB$WNfK.,ns_RV/eA;OP*/o`"TSN&2,ce,JY/R,SXgc)%kB.\\kQ%TF\t"0E]$4F+$XpmGGdHrJq=&Jpq!uFQuu7+!!#h_,UFa^G^.`==-(\j;pkpX$"7+:%>S35>]+F3GPG?27]'=pAcdN++X)DZ;#gRr:lRn57_6+>-n6]]C21>l]15:YZ*($+5d$Co:S0hIQ=%+=?$U^@*52UW!._7Q=BOeUmr*,_:B@Y%ZY&(NhWa:hXGa)IOK53P?='5mn9*d2NBKBd@U`eK(Bjd=!)bC+2,tb11htNrnq3-i;c$:%IO\4cOK53Y<)aQcC1Ca`5+bV*S&.'X6<P*.!!!#IjiN]6Y-+pBC21o6b4r)O[ZIPd*+`iQE]Q9D;n=kB13.S_J,T4$l_4@Z!._?6io5K=!(TOL*fjrMClIgq0bGBF*$g,Voo^Uo7.3]A9k@TTPT_qCQ?F,Z',0)J\AQo%"U1uc!WW3#8^#9!o()?deuTac3.$"!M?NbNq5fLSV$7AI<9Nk;Pa"@\r5cH=poL3a,4=s.XK8LsTqT*1qob<Z=Vh5A!!&2Ok04i(2`D0T%66F/r)BCITLk-%N(fY5R^Ne32V&$uKtMp8?6Be9CtMR/p_n3R!!%P<.OZ^daiTADI9g,a%hF`2\2`%S_11P.k,PG]QC4d&DkB1>Q?@cJ'nh@GBhkJ-YE'&j!WW5M,WRkFhVR*@>IL>tAn,?2kN>?$Nce4g04W%_Q'[gjSZC;keT&g>RelO4K0UPmgpf(U7lrdog'=sjZWS(J!!!#V-oO!7h;)@D?XHi7(-e'4blRtLb<-*Le^]q-Bi%skiSh-aQ'@Li2)XX<rVQ=l<s/L'!+-m+1mEU!]Y(nc[PgS?kic^2'g[*P$O_*!F@o'hX&lL1/e,`D2)Wq=gY9`f7X4\h1Gb5;;#gRrn6#nu"b(oL1htLlD.-j=@s:C3#4&"V6JUAO8t66_YHO#Ejf*O8_q-@f.N03DFQ;fF]<!La!!%P!8P2VGnF3AXY9&-BZ'l"/%2B?&Pd,`7kpP%N5ugKL9;?4)Xf\_pn27)Y!!!#C77KbX\@<q:.]TGG\@K.5J,Ys\7IZ:19M@jL2(jG^)fUS9<E3&LeC<[d^'"H:!$HQ@Kn]O*rq?'Z'Yl,XH$O\3V5:FL$7]WWil/c56-RQs=I0,QoC:j2Df9Q3GIF`[&-rE\aiWX/jm_6H(GB*Z9R-U<!&[bkC9$e"?&jr*!<E3\jeHF4r:mPd8g'^sSug*9"s,pRjR2H=Xf\_(W9EU7*#'+Z\OYB-g@G(;4aZlnZ9/*eJ8-5g3r4d)prS^IY-+pBC2-@58p'+=SNE"6%4$]*AU-T[Rrp<u9MS?C^V<"XR].U#S"%kh3\`?doDs1)hA)V8ZuG!@io4EJV#gVs8=T,<E*Zc*5Q:GQbeMT!)%[?EK.N)(1GU_[5rLnj?G[G/AC/>mUsu,-$eC#^<1p4t]=U.I%LNOMgu3$$6IW;F:/6hme^Q2Cldmd?.uSPT!!#hG'GM8"`Pk887UEWGKa+FGkKj$`3-!qGcmLbigj&PZ=__]OKZg-jPa.MJI-fRpCPb:'=R"r/`>uj4f<-,oS!THhiUWX6V50nLHM$FdeZ71$C%eoVlW+l@R5&3k#b0r3]6E/IIpZ;[aLY8Wk2XLC]6E^]e#!TI"1GYH)`DM/<)aS1MCY=FDqVGXLCYJ/<LBDN:G"Rf3r7^HHe5H.&,MnSB?p:=KfWZ$A&?+"*^>,Op?c)+pUpP,:lb2?o[(t3K*Mpi>e+n'Ue*^qoUnTUk0In/:JO[1d*T!cM\ZC!%%&nf(+%_aVb^7dTmSKdRZALQ.P!#B;2T^7iGZ!7H1T&#btUPmKDt/qidsfj<-Lc"78KL;TsVIEc'n1_a#c7?(`ODE-n&'!:%ENk!s=2E^ADg#Y[NG+0AaHns/fM7n@R>\%8HcVh;-W3eYt]rBHbl&e?<4dm&(BAKJ#/@p;W(2P`YY-h7J"+l8`qJ:lj,(:EMY[4#8ZK?!Z8!+hs3(h:8Q-O1K4UH[G%/-VTo3B[NP]J,T&UJHM.VWJCE22`^s>i7l2h`LT,:EoFlh:/4Q]VP[V-XJVk,@:@QqGOLA%-[L)bDVr2,q!mBGY?lYPn6p]lI*1WcIJ```SNG>D;[6(R3/q:?8!!)jYp1igqoDcD?Ja8aG0H=.CY,]u%M#XhWnFdqQg"38Y<mk4:f%_:*Bp)k1BJ'tO8&,#Me-1FjAD\Hp,R?bgs2HP;mW8o9L5*K"#\A<e#!ES!^Aoa$PtEXGjsY/LC_7Fpt&l&M)J"!j4)_A*'$@W]6X#1%2gpSdPXb/\0seP5>(1shVM+,;68Y-8-h)'d^bf^&(Jh+>e0D7bG9F@X&lJW?G*dbgU?qLkDpTCP%&9\"q>76gqp&b1Ggqq[']2LWRJY6"0&2mLJ]"f%[NRRn%\lt*S91us8DTSds(9;Q.+!D7^#Is!(D*XFano@4aZm!pUbhKnl`;2;1S,i[r8m%m@#kG,'no1=]r:\oB&2_p8#](SKpoc6UO5'[fHKC6#:?gFhH5]2JU`t3`m7;RAN]J%Ndm)HMG:k^_5Pm&Jl@-SiqFDo]T-ZgXMYWlKWCEQob.*F6<Dj`uj3#Z"['HNf8*E?"7a#VG4R<?8Y19K'%B]>IUKO&N,aFmG#7`\c)6VDj6@&Gi]^0<1Z7"p6T-8U#;W@V+&X`-@h>(:7XG2S!tq2<rm#Vn(t`u%e`fWVEX(VJHP!eUnFA'1,>"6[U?oQR]0Fo>76KPCMIT^DBC]Kd-TGlBe">hbSb^q.HubJMi0$k?b_'gd%Nh-<ipCbFf!r^-E=q`;c<=dh/1rWEN<0EVJ_e+$e?U+!(\@":.%B9(G/h/rB-L:RTc=II69YUc_!FoP*3\XUo:5jK*Mq4S2moUX&_'C.4H]C]\1#IqqJSu^\D%@=#4I4&>&br,$36X!S>SsNhW;DQS2^kSIFDO8J>hX!<E3C5CSj49,A?ZhR[iF`JPB?%Ls38.:uN>#S%?aAKkk1R\L2(YuhJH%hI'#jlbf*$e_dp#;lpYnSp"HH5gpHo76uKrquB65!D0^Y$J**?\kTQs5M"UF6Chcg9bS:PUYG"FfSTI*k*3_o^jPY]=YZs4aN@d:tCm5!&/TZc5dfnN/W]DL"b55d9mP-*\M<71G^hN&ekdW"pP9S55ct9Q^:c?6:.(N/gr+b2/6*Y+6*\5!ZD1fr"e4[AS#FuH[F42YOfM%U:ksMP$pMQWMt>qISNX5PaZ:+Tg\G5bo;E1J/ID1k%\XG;X[KFXLs5Vj2Y)cV#HPr-hfo/h7@a.@8JWBn*g;GiPV,_AQYDLL4k6,^.E+UhVOin8uSek4$#FN)@-ZW_T+\;:jZ#ZVPMqB9,AL1BIog:0d7fnF\uL8*VG7&-i3N%-RU:>U7sDgo&Q]ET8GfT4$1&mhnHs+(<]*aR79>?DZM>J2E+@'BJN":LGnIP$Q#W(q!bV&cXtCgTr+]aTV+PEYp,g9J<])s?pAu0BP1u@mbPKR>dUrJDUbTs9qX="1q:^9Q-caD6PgQ*SND$ZGjqA<#O1ejA7SrZI!PPYjaI!tTt(K3)-UMP#7dOeoBOjVf$sd$<0b,/4E#.VF)uD[QT]Ze3.:XFFZapGiPUE[)`F(PRW=a\]lres5G&F$4$#Fnq>BfE1=9#]FQgO:*C+m`hWNqZ@r,sT'<"Kd-;fA+?.!;]V57$feC2lF<)fADB22?&''kE?r0!8-p[-]oI/%YtD/Cmus7kW8gUD+9Gk#6#4gh%WdJb(&)7aP7Xs$/eE*iXC&SLh(fn"^*[<_$<!&Y2XFU&BrTFjIU6"/QYE=X*Q?sQW@;&=ZYpi-Y_F[#c^\<W>EBRZgL7dj;_?G:O0<`2i4cg=<+Lkl?)4,GRB/h^PD?sQN]d%#!uRPd,e3kDo6^:q<ZF^,s$)/[sBLC_kXS[oEu1j\oa]m953kKfd,Y,aT4-n)TOp$.,4$Z'ZsARo=b#!-86N#O]n?loE"C5mPJ(+i_2b0!JH0HhbiL35Lck3qb7UE15=Rl"j=i8?;2kg7G8-SJ`7E;fY+HhZqkFm;qFE,]>ujL]X)EcQ2&f*c05c-;e8B+?6Q2Jq/IM\D:H85;pO1hdSVLJFC$YrrC5.Z$41;56U[W2NO.UcA>-Dnem+)mV=?pXNbpF7VGbY-,*AaV(+,"T[(J>$@AqX"02&!sT/^EAhis5uF%3p"IX69Nt_Js8MsV(fK`h77FV#fohNBp?gV2m@1Fhji39!c'pZDeC6U+ng*O)i9OocB("B\bM([]cDU,$Dr/-piGU9u@,^)'1kVr8\#ug6m#WAX/ml?:\fq-)$Ft3=MNO$`TqPmH)</!.ZKBH'bNJJDp$,OGQeI1oE:2LAF`hgW/$#+YILa?'++F!9ZJ#0Oo.e4b(6XlF(G&ZRZQVb+`?0U-nb2A)X=L=HEcZ:4*^%N7aCf4$H2-mfC-A6pJ/W@d`f7:0ZGVD+@s&5q<l2_jbfn9L1h_DH-a+<`rVbj>jbF?g:=CE<[><<"h7L3RYOGgLBpP?^mciu8TqS0XVmgj:>(#p@o'YAJ961t7T5SR`IHo<29LStIg<_h)F]7VWXfJ"@<-!#"c^m97'btN+JbnZtnDV:7:o@'Z=sFPX;+R?L3-t5\)Yrg$46dcu]tJPP=gM^7AnECUMJBPs:S3Xe3KhGC[;"*EOuDWH!!*"V7dtEX`[N>cSNhUqFY,/ljFYgK]Y&VW5QL+RTPR]5?<'fuQp#dSlU%UJ?sk*76?dWteqLoS]Qit@CY,_0EcMO(/kf&:B3c#F=(GiP[r1#8].@-m#i@?A!,4,s`XL!>[6.E0MMmB?:S(6qj0-5s@U0A+'HJ3rXfXa.kg15t/GHX2IZonVnb)Qd>mUA[SiqFbQ'H3'D=?8j_n$U3M>HUF]6:0SX#FtRr8GPKXNLWp>0YC>O%+)Yr#eCqD</d#FmIV<NK%LT$iE4-3kKLu@Uio3SXn$:(.hW4@"Fc8)Lh4H3U.1<c'q4ojH:f^WoHlaeK-G"0b+[')B'M[5s_Sf!J"@2VY2Jh.Ptm>l)SbfXn'%&8th3&%!-K2H[GXAJcaN2^jkb*[7aP$p@#crAls[2>B4V!/iCN&]mEi.nt@8uo'utq*iu<=Gkgc:f!W;[d9\V@bSW?#\UFAKZ*"61C82h5HF.G;Wi?TH80EnJI@1Te4J9uFc^m:/>UFhS)D2I.%4-1$p#hd-KP-*BY?n'e#6tK8h+L$/-;Br)Y-*6PqK:ACLgQFU?A8\\MMmCZ/6TjMnaI\Q!(bb]M\iAYPJE8'JNgLl?=Lp5)3j5tfTk6l.;s-C77G2jpison>QpU\"<)HM/mWG;R[(!Z[o,=MHhK#V6E3FJc./?+P:*E0W'#CuLg^_m:ttX-eZ23$*YN^kC7;3\]mE7P%c8:j#&W)$EH,u\fZQi^Y!.!nP`1P0I_/bRSih9B-RZB<eLK.(<0`oCX7PrSgU:rlrC61eCb,QW?:mhIXK:d9UIW;2^k..>0/"t?4$+/l'dY0&cCI$)Y?(D::X9Ok3'`PVd*Rl@QZ(BPdJWh3e'cZ:4MJ&(E5d\L-71)3(isb>dC<DY/7Nm'K*De]rql0'Z7,K[M2@'O*q/acdpcH`RE\+kc>o@P3A$ZQs7Yj7gU1fu[r,Ko@to_m6\Z#Kr:d,[o($ILg:MQI-'n^@bLtS%`l=mUJ"W^0DNcul5TjafU4q#CFCX.<Fe\'cIBd95VbNK+a?r9\`f(dFA7S(1KXS=4NugG:?G%[io/Cm7<O@g7cJ?*VEAe(&8Bd2@8#SXG9hcAGd\sYDfsBj#UljZri_cI?Q%#I(V5<YgZ.qM&a,_nD(k7$bd0Gp3dZm4GL.8OREWHNHp&"3mdh"18[T[;7.,A.C[O%8XTAjU@ZtDu$=?Vb!KEMX21uGLb="1'%bg"E"e>ZC25BZAI<>_jQfJ/]@-GS3S7ENWlLsBbMpq!)%Gh)1+T@:8f?^sRh!0XU/ku);4CN1qC_hJWM4fYN^DVi&%mG#*,.,;I\F5Xibgg<]rStc8@ZY'g)2DR%^4uk>POV03.Z$#B`FJnVP0t>7C)]PD4H^;Nl9MA.[rr))QNZC3I\P+`(o]Ql=()KAMC[Ki`%3%2>f@%fX.ciM7$9h-d=da/SH@!TN`_uA!:/7\K8u\f\"j`YsYAN%&Q!Y##glWgO-s(%lA5qfoPgaIV"9SF`VP^5oYA_9*1ri[!=/S.3X]rh/rJM\+q/,\DNP&&Z53L7a:J4?UVpH*,rUj6<)"l"f#CLTJ>]oqbkNq*@?VsZ458F>$&hn4Y3&+1h>I8'0*TleG]?C+f3GF-J"5U\7m@*8!USFUKc6c8SLd"!V0MqOpQS2^o4_e_HT6glaTi$FXMdO\:C[TugmFnr]f@$ZI=.>\KdqoEuZY.VXnaVHnM@s",ldr=!0ej9ld\%dH4?P/H/Z\_Jb3:g$Ci&<2,q]s'm>C>=[C,,qqo+T#r&4A]7XjUMV1/C>)&O43b/t&%.8r8Zn\fA0OK37@q4%[#*mcFsgPZ%S!CMVP*B%`$\<a"fUdX$?6:+#,J,SA(55lqB:Ln!H\-L*sab`2foU&!cEH)/7:aHhk'i@Q>cSpE3ace)rlded89<4dlIH/<V;cD.+,&#g_Q4')HfWde68#Pq$JVopUDdJnkD6!G4b3:f5a3pRm',*h'Udrk(oITFF?gJWQDj+`jntS^9$@C\DKTGrk%_:luOjA=Gl4q!)=BJ\U]`\<8BBIF+%Ls!.>1tpuC@6qN;s)QD\4eW's8IEeM-PoLb->L!&i#ua`5Mr.WrusGB32;tQ2e(?Jc\OSldi258ZSkk.fF)"L_5n*f[J<UH1U0`?Og&*5Tha=2Ql=H&PK8Zn\g<oaYKK+@:;HG:73m!fs><rEmDnQXN96q_*+`Sp6![pf:nV)FBs#B!<Bo<ZY#2rWN!CnAnu0Th:Lh=7AZM,[oKJ0?TaoVO`$Zs94IpH`*9]gd:-IsHn!pk_H5ErAP:jjFiCaF!s=/ggQ]=3HUXB%`Fj8I\P1`2g6F>De^_'#QS+P1%TM5[9:$oca3*X)\ar)ar;8tOo_%mZ;sHK,&l5TRRk1n..jugmSYDH\3cjH-2rs7]FN@qH7m;^j7s]K-\C;Q"83f^:#k_n-T0="5dPc!u=Qe0/Fka?AMiE_@c-6\,%B[_G(:fQZU(.Vb1l>jWB@Cpo4aXVap[7bBgR%a.1@M$aPQ#q(n6tj97E*a)e(E:ih(i3aQ>#;BH1F?S9C(02)_J1As8F`-0crW/r8Wi&BG4IO3L/'V*?6%/*'!H]m9@^G#mgoRf<1r7.4ZoM^0h<VMk>Lu\amppMTa2dUT'c=LI[WD8ib]SpUs!I/M2k2M4a.h[nfq$ZVILg/XBLN`S4pkNP'8k`cUC<7>m=mP>bCYrVc]fp%?'C=-pJeWnU%d<)ch-DJhXLb*4AZ4og,3_SSWF?/>2>f8F3Sq>'jB]6CGW$MW0C]B,G:B9n!U3DV="cEUm"QMK<.ZEpl)\',hO_AX=24*Ks%bL4\,4'//U#VZ3(I*CcB;`QG?bQdG!l<;;Ej5T'/A7S;;5Stbs68c0^c^if;(?KY-Pd)ZkQMsgL/mTmsF&2gFa&me[/@1I;BJ4Ag%mTtg::'uUSRjFdr-H;AVBiIQZFH>:!(b>`WDcMc9ng9&-.*Pq.G`"`7T!#[77Dq,s,-h/bb[t!L(55=A7Qr5-`<c9A8,a<GOF75p[3ItnYP\J91u%h@q&n69.9E%h]Om<R$MgdlIF$1$7]c^kg@8n0.P<"f@Sg5S=5>?Z15,2b@lo=_<+]l9+DC?SM4J=_hJWb.5YQ%d%Q*$[s-q`<J5CQ[^J)sTItMsc5SWUjQ,B$V&rd(dqr!i('k&uT;Yhe)f+'.(%&0=fJ/]L-Hg5doN/&j8WtJ.$4:BWB!cd/XS*TRFdWW@U4&h2Y?no:*J_XsW`V4\5agKDJ$5rT]P5hAeqHX>)GFAEDI'*j<eZFCJ,d6AN(e)Xj&!,3e'n3UQX<i2;G5iYH'8m!XBDl3(BRqk0eoqYoB+WTf!o`X!([r$k@miok04jrKh*4++!1i1[r1#2>mU@0[r1"_GOA_:c?6$FYEG&H>[/976>E^!8!!6:r2EVm<qQulK=K9IAnbsnC23V=m9A/L!'mYRe+rIHqlWr"<k5cOXD<qB&J5T^$48af-rlj&IB'6E\7Ni!eqHZ9oB4FK</^&]&FdqrJqDM&eK#YNe'lcKf)f;uj2MNK*??'G5(*.@\eY:EV&hdGUoLFUET4o?FX412n)(lud\KItcCMq'eNTq-KaS\p_Pn!ZT#Q1qc,RaM5<kc_/b#AGK6;<Z>I8&U*ZiV<(+<Ba;:3[[4/m_nhS$PbFTMRD,k'&Ds&;fkQp,pZU@j9P+.>-,DImBZV8!'9hhKQka,V079hfEsW=cKVNZ'cI6ULsB16<R)dF"LGFlN#gF6CinbfjU'%f?^Z[I*AKAS#G&rqU2HI1m\&TJF#jmHWt?RldG_04%a_=<LR9Zc'f#-;BqVpYC$nH3#jW-rdgh\]Mt8"U,(7Xp+fY2U1s_gXXg'9MA.Xr;;G0MHEp_s61*WbaB\/05k?1oCq-lZRuI_i;_1aY-"g#Zi9^fhm9J>Jb/'NCM@L*m+AS?#.>Ep3]c!=bfnkt4=2D0FY.'':f-ZAO$?N53-OX*lWTrtY@#$c2/3hda.it9R58JXQW&6BA7R5q[S0t4>t7Cth7@_g@gW43:fLDYKnY5STqUroWjP,f:<nFp$i#,KUe-bboATO\KVj2M>-t58^OBj0.-k'T-8@6[GOOCgWiCW$JZNX<08PRG*'AJMN/UH2<iu)_gP>+*8^a(eD\ap.<4?aN$It`>T(kJu!(\p2UW/<79B4"\iPTHKkn(\I_+gCWe^W+@naU$n$[dZ8Zns-X-TO2t%3%4TJF<YpKS7]/_:6sk+sMV]/Po='iSc"ONg,lsf?r!62fIQ2(GAll<0J%3'j\=g@DIBoHp6H7d#\l_EcNr$U&Y0C,VUpV@Ddha2HR(g>uSM6oDJE*RQJk)@c5%Qn(t`f>n26>MUSV,XeJ+iCY,^bSigFec8WneaI"brNi]<uhnFN$'<3:Gid#fp;28;P:)s]M$P*aYl<@@,<HAig'EeOA\@B%^CMQjm9sa)WTHKc[%KP#h`TcL-Q`I0f)]BW4gU=42rK?`@2fC$=Sh)6:B5)'_X3PshO[;B$BKOA[b:d27Qng/WEkVV"$]Z;n?GCr;g<6p@fn-/!Xl\a/T/q,;g"BM"8VtLJFm7=ca,V28Bp*C(]0f\&fYW=Mc-4CF_I@=t4E')hqtKQcXpY6&;A'WVB@!0OTV,,jDV_-^QWEj=m>$FN%N@<"<`ZXpK*K'(^A&/FRXl[-RPek[<)ff]DV21e>0I$Ir:<]G4$*cXPf3'28PSdGj2^&+qlNYd51Ip"aN/c'h02MX/@g3+2Wd^K5uZh$J,ar6KF%he#./U<kib^.1*nn>(i'W^C6JAepuT\c)]BVm^`GLVjOpkPX4N]A'+tqdD;3XMD-Q;(gUD*No]X]f<BjFc:&="tSZAin9FZ.;lI@^;A6i%MW8UVFj-jH7^3qGJZ*"A48m5EPM%_6`:7PG$IXTr*qYL'<H#D<@,pFN7^H!Si4[&b\KaYZnnk8`Fh._](nT_0?[pHXfl&?W@E9IB(C9Y@`]L.Ga3BB3!^Se-54*Bi<TV*EA^46F,l2CMR;gORkQ.=C6S2=pm/oY"S;7^)<?idZ277G0%'.2)Q/1!ft?G1ZmC=OdY,9o3/\REC1KnY5cXp?:#1,<mfL(4+Xp!_LCVMqXWWnORZ2i<W.cCB1OjpgYA,`QE&p[6kl[r3>t,1b>r1n`2VC"frYq!mBYLr#?O!MHlXNK%5UFtNBBe/>9eX#iC);gbE'=kE<gKnY5)mbCsYH?K,YmJ2.DJq=&`AcD].\.D]C6CXH6m5Ah8:_TZR4*0Q..p&l-q2jV+j2YrdXD-4b'ie/8?G0]pq#tDZe7Q\=`K[WOm+=%=o]QJg)V"RN7n:VId;f0`q1fJ&Idl8]DJh)m1;tdn.I$^%leAmeT/^hbSXgdDbOhrOJk<Fac'ie7`/3c.L*6PI=M/nK@cPIf*BJ;(Occ>ddaZcgba:+HGOD8;/'6i(aiVYSrUne5ji`#Dl:!_*.ac\m)Du9ZZ"(gnC"$6<.Oo2`W`:WS[,;E,3]T3;hRo8N99jt?r:]O4UIUB*+$\W7fU+`$@+qu%=0GqqOsB-44VADAK7\^+X]m`)jN-K.S+HH'C+qakY@5>'e=4j5E8.g<JUrBuSis,,7g>nN^3B&&ace)d3]V*5\G#=Ee#\+i50sd1K>mKIe+`4^'-83$o;3#u!1!<@bo7Q2)E2R#lg)/j_#aiH#:1ZBl9]&nAM#JcLCYK@HM)$q[p`]R@ek,LTV15nX&kW@?`'1eq<+Asp[2m/AAiWEP[4P')FQUck09ATI2Y_6NfMu1I=&_XrDZ`qW3t!e*BSG71M>"IIJ]tZ<9@`Xm-O*9p[91gIXKhSA[HjQqc4Djg9bScb:gV`L5+\-;5g.hXK756#b$u0?bUp[kg?M:\(8pQW:N6"H?q/I[N$u/J=E#I7<(OV^H_brPIaf[K^"=+/!?(ee#,u/6:+G<3jj>/DGO&(RR6`7folUAAS#F][5=lLhS&fN.8r-Ag2uc<3L\o9?3pU.^,pQ,:n"43SXPus]JD2oO7&o0J,]BA]mB@GhN^0kboO!\Yhc-KQXRdd9qOW*_o$!=[Valn7ih0;KaXm/mbbd/LCP=C2Jbp(SQh>1Jc_:n=05YKk006[04-J>%oA8Hk2oRmV1ppPlr\%=CO(2NY!m&?CYROq3B9)oQnVt5d\U0WDZ*hHUs(W)`f.`d#M\"f2e^Q'fY$JB^juShXB9KAr;!.a,h?lJC5DZ[GRDd3s8KWsQe,"trC!2(FbW@T7blZ26Bl1Y9MDAo;[5t?GiZr.Y-+ols84Z18:"`*h/$d>g1_@j4aZn@M%cGNSLHAD/(2^PBP8eA-R\bbC2.M.RPem4Y$IelN>=*LZtI]+CA\Sa5*TU'#6:\?!WrNR-W@VOil??:J7m3"dGoH>hS!IAOss>,$lUsYdWkBGc0Nr_X/2X]S[3!:c/\?$5,#6V7>hpEHLr%3C6Y3WgWGd3%j!iXrVH22n(uTFT@a6[:f(!Xil)94"'`3MR6,W\Qn`*^GOJ:*2Ea2dC4V8"MPZeRP9s!bG3h2!aH2fGB<GRSqY9U@p[6j)O9!E"q!hin<7K0^2Zj*_I!pDH!eItqqp_TD?!LWJMWa3e827_je#)g'e^OAe&ntT-+U]B%C2.KpA_"MCHg5r,=49iaeuW$(F]1K%*r*U+$[;'rNK&o4pAFPig0Z8S;a"qu#QR+IjmVY6rU[sa'Ccr!e9I3=NZC4$\dAH%p$1).7ZA=7pYC&'RKii.f@mWJ(SB#tGB_(nA#KiuWr]rurVQ>TQBp[qk4k35!.]s%36gLR]Y(mZ(BP^&aOL8*&K`*5CMR]p@M0Cj`OZfb!,5M6<&B%"F?)@l!s]=?Xp%(2OK/C3-oEliIJ`^B"pPSZ4CDG&!.a^aaiPD_Gd+KZo%C?^=k<]t;978f'pk>Vl0.?0Xf[$Kp2/Bg!!#Qbo^qcnh7Dk9lCso(=pVYWi2br$jpi@j:d[V1qXs0UCB4Es/dVgjX]i-4?bcT87upd(!l+eV28IhdbKFsMG#hXE^3K/llWO8gUrA6.0,c]_e>ufZf<8PfXp'=bjD'3`:fpgZIf+G9H23XO:U7,,!._b0p[/n;)RaSA4ukWkFY*U;+BJYmS)WGefs>>_q>C3gpTq"+!.^o-O:Y,\c/--\B4bb]Xp'>%jD'4fnF5q/Oce>&AIIfj!!(Y2H1Ib_K#3<U,P(Er=P!Vi(ihK!,ma\UMUq+FY@h,H!.^m4fs?I[kKf\\(I+f'n.0OsJ2loN\Wb(o\\#J[/d)/>EjuYH"9JVi63*ebE]&AL*'AIB<`XD?o]\>K!rt2b;,NIFRi?Kr^:q=_CB9M@aOL:MEr,EB"U0TOP:"\5_n$T`J?"d)T0Hr3(e$m4;l<BqXp%)%+BJZ$dCF>]Pa%D%N#4k@%dR9u!5pN8,K%pV;-dK+b*=KYCB9MXaOL:M'c\2e,L6&@J"N:&c+4Yj!-(V)9Pi1TNLl_JG^)46=ob?1E]&C"rVcKJ3]]<m4*U]!nK[@'!!'q^-75U8oB)#O2i`oYAmGdpPX;MWW!\S,4fVSe?L-1EPEM)2f)bqK=UuQ9TK^WOei#-5NccoRdL3T(TSbj[qUF0MR"h=0pitAt!!%DY)`MYJCMQ!k32EFKZE=?rWZbFG<1VXE?T2]IUfk$9Dr89?>mgYJ[lAU"S;N3HO<Hu3F)tL9![-llWr]5">[3f,[C(jJ8Q8Y'lWO8g^5fD#YH4hlUe-aW$O^+h!`0=K<s)F0Pa%E@D;,sG(d*'4J9<FD!#;njrH]>!)%R5gr7i#P"X-qL83g?^>/uXD[C!;Yh7CS:('&k<THNXak/QHO2K.Hr\e]h]"M#F91:"3kHM-R"TqQK)qK:As!!%CI5s`<t5PuWO-[4La!S4XY<&;VG!"tK^QT&Hr&7oG7$PtG"Xp"fu%,'=erVH1c<E0J8$=[9K5kTb7%3S5rKnVbjpnPL7r.u(7=P!TSn1SKiBq7;-dacm]IJYqg=obQKjD"Z$.kWHG3HHO>cel3M+7!)1!<+K,2V-=)db*4In`.ZkCB:B:OK/C-O.u<[H1PQWAFQ-4!0@E2Sinke2)R<OJ,T4$lWO:g1$!'L<WiI)7I,*^f!-h1!,AotL^8EWrV#X5-RU:JXp(JE6`pW$B\Tt4'Wp3Ih,tNq!4C=qM\fAn<I=K.SXGnf\e]g2&%NU/XkgU5o6@q4e#*us'sXnF!,@jq7utg9bE!Jp+tkU1FY*SN!HL$tF%;61OctuMEH*EU-t$<g!7VcGG3n/Yq*4iM'7N[gi0slT#7$*Y>eO[i'%)&(;c?iN#Z0iW4aU4,;/uC#iVE<FXD7ieRa9gGSH==,+CJI\5kR$Kd%EFlVkg-\n`*-j2$28s=0>e*;cESmqsUktZWYl]!&_^[eZ3b4F%,OH.OplJFfMOE/2$T%:jN'>r\?5aAVOq[3B:_bB@[4fe6X:A+W;7;SND$J0te#+%\>Lk'!&#4TUMV.3XtKZ#7`:9/EH6@aiU7V.Olp>5(/l:D#cEqc!+1J<QiV:Pdeu14j1E%J6FNK,,/u2\uf/D8kM_8mWn<[J\&ERO2lVDoI8PK!2(5Z/hXT?[H2flET0Bt-TsW+9:%7fH)J="\iPA1A*hjQo()@JF#As534BQO\L11E(`=2o>$AXis8MickM"YDHp1n<<d*]RTr^lhJ84,kTgQ\XV^YeFRl8O:cE:KeHBF>PX@iYo;$$h%b<-*Le^]q-B`RWE'Wp]QYMZEa1E@JV9%:^RPet;S=I03leNe"i/ksY\:]$sB-71)7NH,$(.kE6I_7F`q^3]H%ld>dk^Ht7R'GM77Tpj?q?G1ZiXpY60J^'ZCoD/=4B7'(&]9dYS!&]k-Rp1_J61jjCnZro0;Bd_GcG[Xh1fOk=]Qo]`FT<Q7daQZ&1c3AQ+r-0Z4*gBBlN.*%RaBDXd2e3%p.mpO`4@>splFLsA92g53B=Xu@j35dcCI&'/eA#Yg9P;5b++`<LTD4*'lW!Dc+6ApR`<:a7!)cD%hE;Y&HM`mQ'Gp!DdVXW.!4k12:c=?J<YqPO&o4WqHWJT'6ZR35@_\Aen"p41lE/'(7kkBAnK&o*!#bpeC;t_.ot0%>F3CjQ$L<)`l&?-3j:4M!2S-*acfAIg-tbWaN,29)0pLQiE)9FWl!f:O+k38Vl(p.EWG%t'bqGe"9c)GdtZUE9;h)?s88('N;t)DBOn"i\S,=n0/$+X\nfp#e>;)-;ufpu=gM_qIYS="!(a#LOH:VQL6OZ@:&hW0[Os0bAmHDW8=)Vp#&uG=b0ndR-n6^X\[akKnq;-k!4@DD+J?EO7>hq_$NYeK6q9bri(-52kd@M^V1&DYOHYllP*1uiO:_@^pa9.G>R;nA`/,0,'gN9[rENMK[q+o,kiM"sl(pg!M26t\Sq6%[oWOjXSu8K!>[/8LeH/R,Unsp8%[EQSbjAb5T0D@[[uc]5dQ8]:q!mC@GM]H+\'j+lB$?VtGO>"bc^22@bEjl'0DFD@"0MXXF&P7O/1b>FD?+E&g<l3;=e_mpa^(4`_SW%W\2ZE+QeVCD^3iL6j5\1@\_Zk\^]#^ro3T(SYp.)scl[c8;._1plddY6M>R&9M[o8!5CR.VL&eptNEJhE8Pr>^J,fI+2=/ei:EMT;`7s$n_hJWDQS3Q,GFpX%aq$`7i9]gskigZm6O-h">I.,4[C*EL[)tL$9Cf"i.Y^RT^94E9XPC0sdr+!Q;;"o2]`i^,.oraE2aqYEhVaeXBB[Ug>CQ,%"hf<mge`u,F/@jXeZ2c6Occ?2U"#5-!Wm&Bg:MP^2=Iqgf</;bMAlD_3HJG2>q+[Z?I6<.Dq]^.m-Io_BYj)N7RfjNT9T03j&1]=3`g:V\okQm5QQDl;<Q5ql)bC411^1LiUhSs:S1DNSL2hfJRI6@D6uWi*BSH8j@NNJ_83rEn)hXU'(^*nlAi_8f.BfOjlXE:m6,RT&FBN<2f;m,Ae",DZY%IVI:U9P&VC8siWaMYK=JV:d*Rlobn?pN8ek?+<RKX[`l=lUX&ejFS=H+JMjlD/_R+%+kWLP&[Z'p.HIr&fmGfPa1`)gp:1J]]@U`YM*pX7=eJ4(V+$P(F@JB?SbD-TMhRn+i27D2EB9+&pG//V/1_S4*g7U_6F`m?i9ijVHJXS4iWC`:#[)[=UfTFnTd%NfsNuh$mj4q1d(G8r@pgiR5S^_`l*]utfQ]%hS*`!OrmW^_Y*Sd^B>GE"2Q_jh_$n@"SZa[E92fB`P8[k\W;56TXnamU\NR6FR2aqYebUc&\K)S0=KiZL7JHKUT;(SE+7]VPM+MAPm9Nn8`i#l?oR@/!N^4#M/_:>Sf:RsQ.lg%3M5Dk0EN2ZhV<rDsomlP[We?WXY)G4[:.J#kbZEgdQ&Vjt_eC<6]D+i-f=0Gpeim9AOMjc\L.LeFs(+nP>hd:m3ebbO4#7b\XOY0nK5WdJl9:*0e96etMrVQ=r];s@Fp9d\i+cgt1iK:B\f<0*`Yp^>cGnc=MJgi9mDo'?/KAM`[RiB%&DXQDc?U*MpDJ<fVCSP4LHF.940RRc72/Lplg=j,dqt<1!oUmLh+$Z>4\9ROQ>5k[1]BDZc!s?(t%:=8_#tn&iVhTEmp?cqacI%++jlNmtq/Ya<-;BpsD7+$&T'b7>UY05WqXrCge4R2h'bqHuiMNKLN>aYep'K6@cuX^7nOM;KIer:Vg4LeoMfo@_lHs+?0B2]>Ycoh/:Q^g'P.l+kY.3)e?]0A2`dQoBn"&d;\DmeJ[r:GQJ(dJnprS^I:RjD,h@Yb$_L:=sgmn(d?!U`^qk[APU8"BRSmLHsNTlStPehtWdr8*0rK8I"eurFV4YVQsR[?oA'H\EX&\hA?/UmH^h6Ub?;SJu)GfG[[e?gV;dU#D\X6>UgdgT2_?b^mXk*.l?Ak)q7"`2mUBm?Aj8:rAY[S]n!aiVZ+hc"*7m<93-/^kZ:[nfq+Rb-!qU")I[LK5"h.%8?.8u#B63ec`l0;4Y)X*WF&@C4af(S^Gd2T3:UpF,i=d9D7gV7=%&p<\R*+4ANO9l+MkSMb2KMi.s#/_Ul;Bc.a)cnr3':e7?,2)#q'C##MTR`8/BroiU92Jr$TnY,K,`YrU!:S'[op[0%c,d"T3gg&Q#\VW<mInC3crUq2torD/tjp(%3,=cd\)"(>5dXs=Br]3)$1a9DHh4!IW1h!*2$B=L2(%UtfUAti;&J5s$9/"6[]n3VdrZO$Po&@WHe8ct_;%&mJ@02-M#6tLfrMaidnQE*/]KG"AM33+=hS"87gS5NWcf-:%7un^f;(OO\Pe)RY\@CnlCtA&NMJsZ[F$'At9:&DD3'eQ6mB[M&B?m#=I59'fBsl^JfJI9gJ9p,dHTh$(9q!o4eP;Y;AV3!ak,_guOqN4/5QLJpDr8:Rcd-8&(?$bh-77/q4*gBBNQ^qVcQ>;r1i7Z0Hd[R?\C&jWeS/BcC"f4GK;b"6jd0>_DV[p3g"!-)Biq:((LQX5,`:p)N'o1>bEa`eP,D!A6@BuYp1DR<M&n1?9g]kU2A9pYg17SLB_0V@V#?bTqZ*mpNg_`jX]r95CYcUH06OUcR7E5Te\-<R.k<+grjXa!745ONPL<-aH=lH^h;$dJ4?TQZ:p-Q2fo6q0*^>*IUEMgrPW%$:EjP5=YV:r"7ueSBZ"(hS<NBf11Of7Hl2bRI9uA\[Kh>%$1c7.iBAgA_C"&s,k,&-.r:og?i*]_,c9eN#W9([As.4i1l-lQ>Dr4;W##11.^X8"aaN-n/1K2IO2E%G3S>2i(V<-sjVpg9tF#\F6+@TjVGV<F<`:R2qB_S=Unbr@Z042H[n*a&ar/)4>B$[&C?$G2?IG;2I9/GlH*t[Z#ku#daZY*'[%#t/!rqbrS6\d(B;4'kWc3iqr1m=Xc897R.='++jbfn:ak:4hB8H5MJBp6sBPaa)Kj(W&E-Bf(L+_YrD7\NOD)i-BcD(KQd$G0-gT\O^d9hZLp2E*c_,9qh`m817;D,AV_XfSV*TqS0NSXkt.'=W=7H$T5]q$Hdl*&sr]EcZ;9Mphek,UA':DJBIlVeKf,5+rPTd^]ZDh*^ou4$1nRMsCr<M:'_upuo7,8PMnoNnq&_BkpUb+SnY72gbul1c5Te&KEU.C+U_XL%b86THNOk\H]hY',D?!U*nW741fIqV[([LBMZZKJ&Nfr3Vg[S)gh;FR5]%jT0@ZA2/4DLaplUABJr8BeqFJJdbYcW(`3u&KhiGa2<m29,LWHb%D#r`K&OV&djCq$/aRVZ!RNBb)M=*3%lFdL<EYYn]?gb.r:ofSJ,ZuqgG[am6\Z"`fs7Hg^:pgQjLtiQWDf_BUIY@VdndaXqWlP(8%AniQ'K>"I&JsooCLkSJ,f9#J"J`BB#foP9:%7O2f9TE!EN6%3]]==p84jig:V]P\prG@C$X?P4+@)eAMAMi`>h>1Yct@LLCZ%F^ANa.IV@WQ4jBs[Vd*tPCYRLocl@qOg?R4h%idP?*$"nIj\$l^g50F^['Oi:)pf:GcC?mOZ(a-TY?jBNRACf?)UrA4`,U!FVa,Lgb*BGShr4ckMP-O1YJ:(jZ=V4D.9!g$m4'*ZBhI-bA&l]T-dt,Sfdk<n1,C^h(CQBnRl`A\Ou>Jb1n)E^@h9^CTLM7BAa7dEe82)Ri!WKCo&7KAbEjm2r+5EX`M5n^lHl4,NJuXRVt%$@rV@5".I+!:Z%>'5nEA8p['V[@<C<lR!K:W*1gd"\gSR]7VGEgZdCNJeB#6>teCE)RZtM1%^jt+EB5cY>q<Ze@1h"G@mAc8;RsX>DSO8/B/R,Z"ba:-Pg9oD[e`F5kP*-GpKqUkh/m>Vqn(t_o04(GW3TepiEAYFZrVAD=l.!L^$:Z6MNC9KMbhCcsd%E\rkKinrp85'""2=Y5H'FEhrV\lA4D=$&NS64"S!f\lIq_qMj)oTk3!O.H'/^25*n3`ZWDJ5@B#>W"TnYu8V+*m6S7]U=bH(oRZa5@$db3=,_SSY7.=CBdEUXhH82G"QV,%d>T#4?p"5W#"k!l+"9a9Y<j&su<c-VE(lRQWhd[Clq[8g1*m-O);pRmN_*<fEM]Y$@q=jmp8gs(OI;+!^ghVOjlo^_RII695=O`dp/Nn240)`Q?O?VbaqL(,)BlbV6+\:=PXZp1-GIJV3X2lpeJlA?Jj2'H^*e=<I7$'QP*p)>o+\9[ZmcEZQN`5GK5Zsq"3iPUH*g=gR[6.;pR`5JHac^lq*cJ6-^qkZrPhS+E]\l&M_TK2f7gUAU@/m>VqaH.QG<`\"<D'"a.rBoJVIHSqKJ+2C4aN2GSJcaNB8sfJRHj[tWGOCtXBi;Qdm8R(cBt_nVV/bP8K*Dcg]QitoUIQCgG^uq3R!\f.oso/,eui<Uj,ZFQ/<@DRW3!(:oB+;Q%3)`fbo2Jm2<GS>jQ,C.B?r24Ye\)kJK)ESo8FM@K&1r.R8!Ype?f8Z")0qll*5^9qV9+\SN:ms\8^CKJ,E/j%]@[pGk^X^rVQ?8R5:aF[r0pRg0AP`l!i_pOis%BUQLZ[J?KDKm86tfpu98N5QCY&j2R(]Y-.Klp0;(&]M0XAq!mB'Dr)HR**`k9/Yt<lo*\o4heCQ:[;"*ERt0_flLsJkkNAIerp@2P+sJ5X=+Kon.Oq0@r7%]EX&c?s^tH)/;jgFM1hf8Y+78jTY$J)7(IOkKl_R7@B$[&c@:@!#3_s[/_Lr5EIX\J,]jb7fe4))u^8,R:,:;eYgu2C/9?XkekPk/+?T%;HRP?NO#7hlG3d%I)XY"`p#E=eH>.'eUC!t:t4)`rdKols4'TKt*T0>Dcq!e4Wo,Shl\`kJUfWa>=@DfNifg9c+RX0]HNRsCL4?P_G*#uJH&h>F][Vt&PeuW#0%NV9__R_u40h>&75(ES0Z=V5Up?g%oUs8)o.0e-5o#-@u;L<<TLCYJ?Si^K(&FRCaAnGXSn?HKDio8s"QNlsZhS4Pio]T/0S_V=Xe6Ib=*D3<CqOVV.>[73riBtc3A&aH^0eqXI8@NEgElO%UqtBEhGOJk_Rl^ULWRn=\s8Moa9:%9udA$qj%:8<JqXj$YEokI%i8EmLnHt^T6psGE?ba=!n(q<82Dd612/:XLD;2qE_U)RRNCOXORPqaf\_5WfaN2HlGW\&L4.92W\8X_P^0R4mPdGT!f!]GM;IKn>$8gGn\8`b<rE7_Un7@Y&5MiVQ6hg$)jlPU'!Om")If&j+;EK"QJL1F4RqX4m?$qUNrLQ0!dX:u@V+]A)'.s9!<`iIKp[2<*jsYLqhqarfcG@>*c'gMPOcf[qhNc.3[/KAi9'0fO$me6[aIGl]P+k6u-kp7j.9of-1)&7NA]bQVK;"OoB'9lLE21XFa(rD$n+3.Drm']>B@qQ4B@ta\r]$OVVmX6SXmbb,pKi2`<D-BrI/<IAaT>X34GLSa^8Iml\om>A?b`aYd3pDBL?HmTn(Y<)0JK_Fe#$l3050"mgEXa<rmD&/^3rXG8O6%*LI&fCj5Z>fPXM9,74AC>(D1<4Y[NeI=,'=oG^(2fE.FSL0jV>1,s4:0.0't]8F,9p!Y:B^Rp/pc;c?N^$4e1?fY)WU5X7T*3d&MKOn%JPVl-Hap@USql%F_C6%]AAX]e^l6c73pDUkaeE$KH.?j[5qJ4o@d\T?u]U"-2F7te:X[9^IloqP$<PYghUC"(0"dTsG+M2mUn*tP1r1O/fjmDb,)4*U*$oenQ\RQc-\:F7i.AS"T+30?o+0K(g14aJpt><5]OJjNH;0?qefSiqFDldi1HQ.;m76TuP5+4$-R,!UPS84uSXSZYke$=O32^j4qa-n'<M=E.eZifG<N@+R*)Y$JY/77DbKaM"=[GOLP12+h(W>>J$*I"P2fTI@^fIf2=ua4dq:6fJ"BrDg62,VnK.cqne)F7T>!baC95SNB?VlUjIZ/&4BN?+\\(_#Y^hHM-PJ7Z;kgW_/X[Y?ie_Yb5=9H>jc\2E&^giC6+1-:)6>H$XdOBk\_Zp%A!CfBf]-040_]59@d%C=Hq7L(-8X91E7F<`Qgun(t`HpL@-H81mo`g/J3(rqmWU+7J4K@Us"KZ!p/cP*M<_Qn`*VZEdFXPtLQ9j2Z<.esVqoJR)'A3)Q)BYB+`)]Y(o(s5<Sa-;76ER-'41WWOPu9$HAfkKd)):2S@NJYo<Ab"&8?BuRuF&!nnSg:V]P[(:\_p:GP;<b<,+83LP,Pc=cf"U4#MjsmLuP(6W]UqCCm"\1\)rZ%ePDJlV[Y3tZCI.?48P*?^q'8+A4[r1$ck\,Fj3;o[g?B+^`rZ`[oE,K2^C#mh5hRsRs$H/T2WVGN2^4-#!'bs`H:*"b2rN0;5._<212f<kbGeeP9Qa^hd`fnHcX=3@YnRm4a#F,jTR58JJ[982M<aFfqPbfQ[1NW'D_$C/q>-pgq:0)IZhnOYJ[;(u0Y-+Il@73LOl1tMejjea569D!moet7Zq"T)ejpDhQq"a_KIJU=L-%KG6*&nLrNuL$<kEDiEbGtp]h6^l0fsu+_7Vr(tgM`pN=1buPTR?OtA]pCq]Qs+lQS0FFIa$!Y,I<Dq-AHQ@-kbCLGnU`#!4n)-WM!=76(qr9R\cjWASl:4kg1JA<1u9J?7cJK[*d+A%$`.b,Ui7Y](.PD`BZ^TJ[`*I@VDAtII>n$US(f]oCG%dl;X`\V<QI,o/ooD"m+9^#3FBuq"aOEY$JY59hk<Rog,pp?O.FpTgK%e",!tf1rY;!0;t1<DqVE"^Q+>7A7prE4g;J>ldetSX&Dqq;0\'=2-<pd.Yk[*!-B$SKIA2A<uA)H^"Tu9@hcY$mp>gUX;k&C/I@]L;+!\QPq%'eL[m-f`C=`_DT@bX_0_rPUZGfA4AqFo<P!A@W]8k<BM`$[B2Dnd$_KV2RPo"$ZK;H,-?,C@Kl]Kh9h\5uhRofjnMoO_[r8<JXg5CDL)\OfdHTN$HV-m;3@$LDVbWd$3cle2f@8<O<NDFLPLGX=7mtO']65bG*B6a3MA;,1NSWFH1GU_Q%nQr(pRcs7dF-H03-utPra6CrM58FEq=8+EU.)1f[F,WeJ!MWg,.\7KI&!aC.iMO%G3q"o`dI^Z;6%sYIXcisS5Zh1ec,OEMgi`FWhPC=A8("r6%a,[G^)46=Km+gf[s:7&1BTN_VEp/,U>eM]>3M*n)(m8Kn\'\?Q\H5>$>h#]NOS(0sF9H*9?;GUXOP_lmYHiEp_R<?!Ub"G%"gQ]ZO2%=;@+S"rYFIq*M&'QbS%MI`.$SeZ2b11,=HVpa(09bM1d`B$HbUElO%UU>s3r$`f0a&q!rW?b_&c'*84:A6CGSAdPN"PZb:n=a^?A@:XXkL=$^9L"-40MG[=hbnHb05s[g%lKW09XH@"ta,_=of%(m+I/)mNTB01VI)44]A8OqjSA5[==_m*D,u1'rN@5#!'H%e1Z#D<Rb8_TM_'#sKD2Q0:9C>,X'jeIfI/EX)YX+3jl^=u*F@&_tNY8/I#j;S^$qKb<Go@Z+;Gn,flK@=XCHraI8VQX^lj/*lX]l$Y^`O@/(J1UaqJ:"c,n%2k[jP5Go&\'+FmFo+EcZ;cg,.c;!aI%Ah(;W7d@C\_,g3];q+Q<<WQ9RnQQ\_N8=&/GH#qq-?F!(!'&frr=VC9.g"G&_G7:rc8pg=#*I8d0P)!rY9*KN.'nrRq15mmXKi133)_bZMkZ,aHaYl%8U3keu3K!QhK8RBfnH'2m9.)E3QEU_<ILq-B]u:Y>_#ql\=0*0<#KT>mU:P#E+X/*s6UO4I%,o<l-X^gU5!F!99lZ77/?-')CK"8bX?fZ`NSM'4H?so!b*>8(Kd;tlE)rIi&g,*.+L%SW9%JIZ_ci!I?g;HTs8Mt1HX'eq_`:7'9MJ5/:S+XEWOQ?hZ=W6%A>Vm:+$=cJFZOmC/@&5q<34i(qsClBe5R]D:p#K`+0JkZ;GHY(2E;+;_<0O`F)_I5^_dS%2upX'4sUl[H?\`.JNn=$G$mi8ZZG;)8Z@eN@^B[kRRl,'$P3sb6U(C-";<.VSN7Mc6*X1V4Sf!Tq\(>POL:8$,^bX53Oi+)=%MaiBOdl2Q#MQ&MfM^l,6'T=g4]Js@pqQ?1>n$,.<Ias:7F.9oR*STWeN;Y/1`(<]"<.Q.]WojJZL1MQ`mZ%/G/T,9$s\/>SNIV#(O`9?e,T26&KF5](P1.Q_@0*JUqQfktGQ5\od17<:Lf)1cRH3Rgg8m+J"$iP*X7r$X&rFX?os+0^gHF0LbQJ;JT]`J6^#@Wf-!Y]Y(nmT]ECLaRn`G6/hV.fk"b0eJ3&QE/#LV>U)a5:/"@2f%*;$Mllom>WAe/Ef#id?k?EH2H=Q`c!%<P_FpY`qtg.IC!q[NY4M5Td&9U(/h'^K<jZVl$;t`r\5DNgZ-bRXoOu!grJZ\oa@]A6+H>H\V55Ir0hdcX9o=sk(7jd.E/;']GOOC^r!EMhkie-&g;Ke%fs7HC?o#0($)g9e5RE+OMl+KJD5f]hnslRORnE&TadiiWPRF\_d%LR@B4bb5Sq$Y2D="X6YRir^4[!(q_OWc4e-+Z0OAuJAE8eY;LaSNhgn>PjOX2YNC#G_abVo5hp@tq"-japSE#m$?Nuq$N@pi\@<:Lf)'ODKCE;79`clig@+`"E;<QOG7jupZpVFVb1l@)b=a@2&^\nJf$4$+DP(DIRJ]Vs9<2i?l-3,1E?&7hr+M^IoFZ%K.>+uqB=\StT=jUrZS^`]ioCeE8tPh^u8._IUl33d6';,<`DKbO6iP!$f8Ud@*hor.*<`5T]pX/i9m"$,>aR57A]7JHQEh>>m3B?Z-5lP2VOEHcVn4SnBYX;*1aBF/>aG+s-SO6ftC0O%b+o_%P%@YKn<a`E.3/6,P-2IA*.5Y/2[+TP(jKYpZl@R\]971&n<T0F49j<9UW6bLmG:RA^Bn3-Tm\l:Lg'p[;RJ&rO7/f.-3S04>2.b#cL4Xdk>i\@A[GACdH/7B:!H@pK=0neNRJS"4]Fb!`8.&r3f)kK0;U*`1,M?crriM9i;U):%`UP?r!JughMd:@n^Y]S!D)6AOug+8Tc-jBm,Q!dNgLI3[H<*%tSdDeJ>eJS)^+Uk?LWQLH_(#6KKZY%JOJ'=97q>'hs9L!q"+?"W)^4!oO/QoBt_o&6aeZ(ScB[@mQ6d55kfs?HMMG50*Su`o<9se3u's19(5&kC&H#GD],!o=WV)DRpPDk_W8A1P$9HN3O_1N<fn`.Y90?W/.Idl:3,qhc&?r^/Y2CN]q\QgNhaV1'9'O*]ISatdj-*2\kDfG4QXMQBL=#1Y!,T"]am+\u[<(a5*M?d?igL8!SQ+S)jU):>Y;8ZrK6.QsbBJLtgXQGR.r[;N&=Da?sHk_3<GdZ%5$9&i=9'YMYEM9\`@?u\@84lL+_T5V)!Z8#&PEV/2C19ZueudIjeqb)oUgf7r?(7@Sbb2?(&PT<1[>K&sZJLWa5?8@]38mT5;Y%n@gU:sn-#DGN=\Z'j5`CY\YUR0GdZGbE3&[D1ZWFJF9c/ei-;/3Ek[qGMmI:/Rq=EApQb&BB!IfKT#c?S=huGqlQdXmRit6$e+$VBEdZa`47HJ!2;TH8F`_.G"!qRHc[BQ[0j9&ceB.cRa<CfII">2lh<>]<Y/B_3c942mm>f70UX,H*T5d;4bC?4dL/XOo4F]qsPo(oAlJkuk[j/CqBJfnig>e!0g63<S3Y]AjJ+uP/+B">iM0e`m7"IgmLUZPH-QRL10)uoj3ZaI1u=fm8Va:pHf1rrj#4MgUMbLH_OF-&^PI/"6^ai_bhqUQ&p(]MaJ1#pfb=%F;)mbMYlBIJ0n[r1#2@q-TCG_"10I^+.f@N;CQ\MEb"WF5E"@RnNj#.hCWY_!YmCtZ)t,Z[XBmk'.[W<j=c.4d#tp[6kRK*P+F9fY-3f71OC"!(^Q@KlE"ldr>45(1"krAsOo@73&2;'V=C&)=jF(RJX95h&XtVbWd"qFte(JUmh[GO=,'_[d5D)rYp.5O;\hJ>Klg\NqsUZa8akTVB9&W2qoP9?-aI\PNp%-SY#J;@BO_:73j@ru3k4R$jB<iPPoui]hK-MPu,"Dm9'@0#B;h?s2&1=ot`,j<@&j>r7$29s_78Kr)k+N[:3:f</E(bfojp3+js^NMD6O$A,?:Eo[l1p?a*SHKikSgmc2rZWuLb(`3BVJk[!7;7"h(X74PKit-8#i5&[4q>l8)LEi&q9@d&Jp^m#0'etfFUApo^@d!O]pdgu-#(M,Pk!N#i<HD[kKfMD,,g3['ZQigHj1]o/fTK^<9+2h)Hs!ItiMnc:c2T)fn!K.X5G#CgZ1Fg[*&1oUXP-[4A]pCU1k]1./qA.gEcS0ZWDZD`N#[aU&6K[4eHUNF(gem38j`(Ojulsa@9(]fc^p9r^d>QB]&FO2=B6T&W.IZ\YkeJT_D$=E=k5)!T@Es_&OZ,02+AD,'3r8!\Ohu3%2q'bbF?dD5XUu!D[p:<eY9RJ.#+iqeH&O/'4_84ef))?M*64ZOKU2Ak=2`mcGaBuj.dG."BL+K(#)Tlegme?ApJWT2fIP44$/)dMnYe)N6opJn;#u?L\#%&+(uHGa-J;]Jpp[u;?`L6FY3@VhnS2.$O[>ZD/JA)oB+:b66UXVEkRS[7j<km=L"TlSmLU*SYMpRaF\+7LSR8:jtId/'d1=<:!h;8_&q`IU7WC=F6ARAM[N]iX&c@MUIWN(dKC1kaGDG_B>SK(^9iTQf[A1\9e\F^7IqZea6"'5r:q#*]'r^,<+0?L20S=gdG)"/(3K34;%F0J',)&/JsO:Ls5uWHaj&(AkVoc;cra7N^OCTq^td7._u'2sLCP=3UR48q^>'+:&BpY)'-.Q!asHXZ/XR9<eHUNF(gem38j`(OjulsaiM*%M"U0>Op4ZF6-c#,5Q'Cq6ojs\tLaoq,`\06B^ekpQ%kPn-`CaN\J?32oeO?MYDr88<#ml/g4$#DX:VSG%?GCr+Df;hUV%k$m0)@F:StHq/`mNXS"[OauEo[kJ">AsNC/'(>Qbp;c/9?3'"G=LI[]*^tC+_,-C>l#.`\TA*lIDqJBP:Mt-eI9XeZ2bA"'Ij67R9n[EVT$3R"()62>6LrYIIbVEcPu4CarD_i8s(>i+=E_Lc&u!W!Vl+Q0KhIjFnC'?Hf!(]4T<Vi)EpiDH5Kh8j@e&=L)HDBGFDmd@%[Z's,?C=.hHUp2KWc:%Gdsa\hSkjbF?gH?sn;$'l5eGOD!V-)@3l3R43ZlfdQ2-?ph>$0tA2r[&s=>$G4+7L'0RUnf9HHprWRmVm;kc-4CZqtBF;a,`/sgdjWL+Q"IYPu%X<gi;GuPu4;Gl0.=J(`4f1]U4)l5gd)cn",T$%oVu,D;4L4[>UYqI*2[UkLJ'ob:p6.Zb=#a1c7/F[;1!QfWc'Tp?/&tG3RG/"StK@%e4;5&./b5!,VAEJHPW>p/$*?>?eWh<F$lcCu*n%1c.$_9MC%jKB_c=^-PHpaG**T^m9j-.--(pc^mQp7bZMIW!QL7fX,AAVb`qL/43`MT!,?$QBkRB3d#&[S1-?bY\\jQ]UIPjf`P.4kic\hg0hcH.4K;u^djD)+g73$S"%`p488I9g[Zh^Jq?4sFmE(ABW.>e)-#G>d4ljj6\WAk()DXYKiqM[W!PZ/2/1Jaa@!Wt+)pGjTjGEY)&jNI`kWmTKS2mF8:pkA:m;OCY$G8EGVN*79hikN2/8'k4o3Bj1TD2SiPUGWB?u=d<2`Uo1gn:[(&.1S=05#6"OD?N[Fm;;d-3]?p'_p#Y\M^gg=k7JLCQIop8il2\o?Up?smC0g9oJ]e[otiL9+X%)++ag;Mou'q'RXA$=O3tXf&'5'GPZZi^HiTom]5MN*mYG*)+qDY#_Zn]=WD`9[&\J:K/na"\#u>Vb`op+$PWC83RH;BS`%fGOJl"hk4Ssf<8QUn)*TqjTSZbT@U`)qaHDYh7@`%eT+M`n/>[9Z*CS4qtJ^id6V@OQ5^\Z.@4s5Z/Wrn01e`,*ZcB`/Q?@qk7&@g4F$?\#uso#a:X,[L$R?on'e11,lp+k4]>6VGkbma&3"Oa>d7alK7a:%-s3NNXi?DDO0i(C++L)ZTTG$A+$LZ+G&6U%\NP92+CCm]g9g+oWDbT/1O6K4JLJ>-'+to^%j$[W*+CjFhL*1n$1N!-4t6^>!DGI'.r2tQ"_;`rctQ]ggGNct.,g.8W;sDgM2<*(?iWcUgU(ZNHhQfIkK_JAXXJE%.-FrerAABA/Fk5?KGuj/[k1gmPccAe0YP!+\1qL5ZtRhgIK0gke>UcN&L02PhHWlRTPE^>-qZX/^3l?=S/`Lggp(?ZZ4r[_M$[)KeZ2c<`Z)\mrqgVC@U_Sf!;S1=VP[t':7Vs":S'[?Vj:2E6i?oWhlpZn=4\?JC;;%co^pqph:Jc5a.Ji#T0IfhEo[K=@<6L288)C=i8NVqR<*Fj.EA;^3M;%l/mX?nN.g/OcTHc4:7O9u4[$Ie`"Z_bWMuk<k03);UB`PZ[*I%FYYUlT1M>!lO,krXY:iaLa;qHk^HQu9kgH;##7hklBkaQLY-+IlJa>HH-tqehSbMR.;mh-r_kT__d%XC47ZhWP<N/lmHhZqO+X(e@oXQbH=iJ!smuAJS*YB"3^OL`C@q.C4f;8"eeZ)W9043l;MB$neH'$M"c&E:%RPekA4$,)uZ6UqNWsl336bt^/rVH3Rfs?SQ0CIT(0DW10fHti#PZ,:<53!Ac@M^\(>e>/2Ju5r`[?d*oYsAU"LFH0!m+AQFk/m3Bf+\qA!U/X]K*T<2_?LDc5UK-V9:ME?H[:!mLPKMQA0;Ga>"42J6om4aG20TI2E!J3?.>iP#@mr/"!j[)oDh<_"eoFCDJiEQPb4S?Q'E)0Y\RZUiU-"Q)&\j+P>b*BqSI7>h7ImJKF%qS,lMZ4X;SZOBP;'O8r=fV5t+Xg!Hiul6+)fpR@0I/fq<@^4K'?d:fVS5<":`ifIb/qa:%[^ef>bOrVc\WAUm##^3uL6ffB:*8H=3alI77NfP/g3&cY*UAECt!]6*9=(U7i3[VOKtnbLuJ,lefA3WWN;%RIRc0%/;#`IFSb:sM.-'GO!T^]4:[iPGb30<oM;7iDBj*&_UMZkjeA_hSc&(/rMgJ,fM>4aX&$SVhq-;al$>bsq-*CtZ*=7uih1ja\bD!%89*#0I#_Jg-=qcIT!q$OR*]!gbMj/6'$9quY=<r;?Kfq"TON(S]B?FB#5;KfC/!,9o93]7>E^'e<=8LL7`@[HtFHMXl:9hnIpWF6D2\A",An$4[P8KXJ%gd+$PjPD\nfe^YE6@EXrgkKfbj/690kr5J!RYLCtLQS2]0@`/QI$6:--'"&Z;DX?fZ5(!"i\@=LPRF:b?$:WX`QS2]`gph@ni5)6_QhpRT[VOKT`3K^b.PtniaN_tHcC?olp?aAK.mg#EB_D#^e"*#!C=fU_JpXn?e^-NE5!BPj&W)@$"U,'Ol3P?^6*(24KM"KaOF';ca@'LCc;i2^4eYDC-T[U(W;-2[kIl6:daHQEY$C5[mr)uWX/DjCr2>0tJO,&$*<lrkK^OhWMF*E<H1PVcR#t-@"p!2%o]X]ee#-\cA*;11n)rkHDf=O+5m'HI!V!l_D;%7%E>2P6;FRUs-,K?Ehr07IB#.Tb>JORdK6?0%3d:!SI/*38YcurqG@tQ$;mK+@0>MD-?b_'J^k!4N<WiU2,2>+nfT=lX"8)9ZHh?MVC!rg@k\+MLoQH<ESih:=m+ARcldh%72\*N3@U_Yb9hS-[H1U/N/hW>8:L:A>c/HQqOebhJ=GHAAo4JL%TgOShgb9KPIC!P1a:h/99"q'q,Er>2Er>]P\q[O8nFl8(gtZ.F0d,3a-;<XTYFh)FQ13'WJuP`KBpUGX]Y(mbPrK#Ejij,KKnY6Br%U6d,4OsPZV-W;V50p&jCc`+"nDj.?tj=XWDY%:O;09H1c$q/E,ZXSEo_fU$[1mh!H$oD9DrE=nC;f0H-+1MbEjk(4*I]hP8!L*;8UeeA&j-&#6kD<Y?nm\,7(LDqXnW(9236$r;5rt8DGsU11F^%6:4+gI!k;Im)1;oVbWe;%3($qH.T3)@*qrEM@(WAkK]XQ]Qs,@l-hdY4ftigakLGRZIc-YcedM"N\ij\4>o+kjN3Sh"U2PBR@f'K(b?(5#&a>3m0a^_`)+=,0W`-<+M,.q(j*9!.);-#>G)CHbuN9q$jWO=(Ddl"&V8F9.8RR!m>R!_eCE*'L1tI?gqJ46rr)_T+$Y5%U.&:qDFKG)iPL9R%iui#X1AHK]YfdP5Ft&eHM-Q'Urb]BmYm*`":Z;*A4X1Ih8#>a[C(]a:MSCXdCabr?G1[\qYJL*1C'W4`/,.On(sne1jK8P]8ObQ?!UajZtWI><\<8i<j,gMH+L>gF'rAu>QjshW784jfBCHGnph5m4s99c3d#3+hRtW:.9!*oh:^H5+H?^b6q9`PM0%"74\(JM'c%QSV].''Y?nobcH\mDK2.&UJQg[/?_8l%.\%7#Z=V4nIJ`m<qp1`j&&'tS/a^]G.utc:VX@O-q"jY6])D3]bGhJ?a?\q6SND/iBFIUn(+k1qJ&q"(%&/B,",mN'\nB>1$o-!o9+__,n(kU"qXeJ=-A(KX8X#5FFm7<X=d&9OU+iB$C!remf<-7QA&jT54'Jt&%34`,J,Ta!IJE<ja,_<Bh&6X2!?M6OfSph/cCR1gS=CQ>*PGjsJr(-gJi:O'6*:V*%>B'aaigmn1ot'!IS^Q.e8<sK*Be^*0/&AMhC\,>s8G1&1U?B?ldu19qsWCuhXCWEVP_4COlZ%Sh7@_jFQe7F4Wkji1c,mo6Z]Q=Z9ZEC:uFQGVt]Z;ccO9pd,2EWCICPnE[ueFUreT82\nUL'M]`bgU8\C!IVc,Pq*L\&eOou0iZs7MZ:YV+$[QucC[=nPa&P$p$1ejV[j_)XF'^0()@\H<=9uBo^nS1D/*j%lgF0^'GL\VrSrr'p?gUiYR^M2=BJ+\(#fL@'Y4[CL9:V368tVp!s8YQZ*5?mZ7'c@)(<_OcHZneK)rhC@B_Fr(q<JTedVdQ5ZRCHo>/!O',*<@fRRd^r:ogO['7nhc'mn_l`9u6J;P9b)rhLH0)1]mNt7%-Y(FscfWbNu)'nV7eZ3o_hF3s2CBc7+Dr/,mq?*aFiPL;-N!s75(fR6J+X&#MMr!1Dm-X1E[r.1iML=>X'NM272)dJ_gpo4C'2n1"ZXuWq7df!<lbnVn?sJMcFA\LtM<E3W_kPW/e$j8Q^1>=ufK1iAp]n_Lo$%Xf1c.$S`ipQ1_:@)dcd*,Z[s7H&R$\]nPg%?FKI#OpW%Q1(aGF<t88nP)lS!Kj$km;.lkddIVl(n9^1GKR-71'KG>YSI^OH,VSN;<^K5SM\Dq_QI,p`_7+/R@VK;BJ>?bZI8n%U15+4rHp;tMXn!_lB`li\]FZ*EQHZ_s.V(D:@W_*s7t77BYa`l?$=a!76"K8']i^4#mtM\i5d-6%V.'@;irgfuZC9g]"k3+sk34Die/1`n7S?.$B7HZTWV8,-[-Q\5O^q!-B[<O\-C^\INi)q$5R.C_=Lm^?ue<ioO_B?hLDn"E+(p?C$2T%VQ?'(JrnacpJ]#'+TnB%FD->K#O8IJ^lnrVc\IK7i@4S\&^k12&GcK_Z]RHl2,XYF^rA",06SM"k2'<eN^JK(_BVq@mcON<(a<Tgaa0B0^@^9?:AROC@]i`f*40,8rU(3a,`l2eg\C5uWa$#Z7p?9lrQoF)l;QUVO:Ps8G+4;06o%6:/QZj2^+\mbbcT-g=JB&($hnp[1=Qe'cZfmbA+#7=5t3DB-01Y?nnMocS1if@WNCbcYj>]#`5[G3k%["U7NQ_Yj6$iF/DKEH-!qp[<kD+B:r-YRBq`fLVEX[#L"]W@Q\IjiWkTltj'*i5(&MIG!eqFmDT"L[h*?SXl;`b$28geZ`IL?!Ua`-V=Nqg=jQd``?,@n@(rbdAo'8bZMT,q:;ZP%idQZcHOV\V[jTd3Cm6WrB#)_%!&Tn4*H,f/m,>cb*4>"7ui8V3&in)C"%h#R-6mf1#Q`93cu>uC1JmrY!Q)S:(;86OFlnOcVG3^OT91KY)SSp:`tXTLkm1]+I>KmW#>_&$jZrtLhmV8U'g(a9*0j#k+Kic>.=p1J?D.mTNfc'E,OaF+ZbTXYb=l?hS4ONOp2PJmbBgc"2^J0=gNj]4\X)?`s:l:D+>M#>gLpL'UgRr,=Q>Q-45gXOk<4fcCGsZE,fmf'EBH[K0l"ultb1R=i?CH,9u;caAP<5+#%Wi4<adr%Y"K`%2oB>4?P`^^^,+Z$"+HT]Z<Ui1uTF!WR0#=^c@.(L?@X\\BrOHY$\qmK*MoViDZXL"V4b@@`??H)\Id&;c?J_3X)OB!0)AohA)jE#sNk<r92P'ldr>X1SgqH6WZ3`g'"\d&jCU3A3W:C@N]Uta:giIR>lf#"JR/5fL6e^aq;X8+=&38`]/>=Cgs"%f<88G'3Mhf.B3X]$R6\mmLB<nqYCg0e[p$DL^2rdk23[gis#r2Y^/OD^=ou1P@iP'gOgsa)`B5q-j\K\\X0gQpMPY2=T.@)Q]^4A"06aH.EWdSD'&n)QnX]YA&jTQ7tVOD"';X1\T$LoU@X2Ud!9/O:j<*l;2$qB5[Rl*<s"PqTiBr,a_T"(4*'eG"@lFKWZ_A\&>]NgiSb=_!^gc0O!^MC2f@D9UZf%,MR&+`n(p@Dn(bHP:f%.G7q)a9St);Z.u9%=M%VqD60:^SAC@8F,]7pTH]t\aZY*&N<0&(`Ljc[Ifoh^AM:#5;b[tF?3N5I3l04>q/1iH1!8Y5/,Cpn]"N26=E$,`pR(n8NTLDD)UBJ'gaFgpb-VpK(85):-T07NjT9rQAB70[S'dcaZ=Es/_/_J&,e#-V!#mgq!#nE[T\WI7nS2cY`(CUc8L3/ne?b:LK@#S,e<l@,:;'h3'f!?E#W*Hm=<$tMG?9M8=]Ke<lK2*'b"bJ=@rh//,(GCgFn'ekT['UJo:8!SlH$QWB[$n_85X@\%5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&_12@nYCDWs~>endstream
endobj
52 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font >>
endobj
53 0 obj
<< /BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font >>
endobj
54 0 obj
<< /Contents 154 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.rst2pdf_image_0 51 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
55 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Modbus) >> /Border [ 0 0 0 ] /Rect [ 60.58575 571.3894 218.4257 583.3894 ] /Subtype /Link /Type /Annot >>
endobj
56 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 50.01575 129.0394 0 ] /Rect [ 279.1024 524.3894 411.1024 536.3894 ] /Subtype /Link /Type /Annot >>
endobj
57 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 50.01575 240.0394 0 ] /Rect [ 279.1024 506.3894 351.1024 518.3894 ] /Subtype /Link /Type /Annot >>
endobj
58 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 168.0394 0 ] /Rect [ 279.1024 488.3894 393.1024 500.3894 ] /Subtype /Link /Type /Annot >>
endobj
59 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 636.0394 0 ] /Rect [ 279.1024 452.3894 411.1024 464.3894 ] /Subtype /Link /Type /Annot >>
endobj
60 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 747.0394 0 ] /Rect [ 279.1024 434.3894 423.1024 446.3894 ] /Subtype /Link /Type /Annot >>
endobj
61 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 789.0394 0 ] /Rect [ 279.1024 416.3894 417.1024 428.3894 ] /Subtype /Link /Type /Annot >>
endobj
62 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 50.01575 279.0394 0 ] /Rect [ 279.1024 398.3894 435.1024 410.3894 ] /Subtype /Link /Type /Annot >>
endobj
63 0 obj
<< /Annots [ 55 0 R 56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R ] /Contents 155 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
64 0 obj
<< /BaseFont /Courier-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font >>
endobj
65 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Two%27s_complement) >> /Border [ 0 0 0 ] /Rect [ 167.7357 402.7894 391.1457 414.7894 ] /Subtype /Link /Type /Annot >>
endobj
66 0 obj
<< /Annots [ 65 0 R ] /Contents 156 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
67 0 obj
<< /BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F7 /Subtype /Type1 /Type /Font >>
endobj
68 0 obj
<< /BaseFont /Courier-BoldOblique /Encoding /WinAnsiEncoding /Name /F8 /Subtype /Type1 /Type /Font >>
endobj
69 0 obj
<< /Contents 157 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
70 0 obj
<< /Contents 158 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
71 0 obj
<< /Contents 159 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
72 0 obj
<< /Contents 160 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
73 0 obj
<< /Contents 161 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
74 0 obj
<< /Contents 162 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
75 0 obj
<< /Contents 163 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
76 0 obj
<< /Contents 164 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
77 0 obj
<< /Contents 165 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
78 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 633.8394 0 ] /Rect [ 40.01575 727.3894 283.4257 739.3894 ] /Subtype /Link /Type /Annot >>
endobj
79 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 381.8394 0 ] /Rect [ 40.01575 678.9894 257.3057 690.9894 ] /Subtype /Link /Type /Annot >>
endobj
80 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 381.8394 0 ] /Rect [ 40.01575 666.9894 76.69575 678.9894 ] /Subtype /Link /Type /Annot >>
endobj
81 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 294.8394 0 ] /Rect [ 40.01575 648.9894 256.2057 660.9894 ] /Subtype /Link /Type /Annot >>
endobj
82 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 294.8394 0 ] /Rect [ 40.01575 636.9894 76.69575 648.9894 ] /Subtype /Link /Type /Annot >>
endobj
83 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 207.8394 0 ] /Rect [ 40.01575 588.5894 271.7457 600.5894 ] /Subtype /Link /Type /Annot >>
endobj
84 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 60.01575 135.8394 0 ] /Rect [ 40.01575 540.1894 276.2057 552.1894 ] /Subtype /Link /Type /Annot >>
endobj
85 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 621.2394 0 ] /Rect [ 40.01575 522.1894 246.1957 534.1894 ] /Subtype /Link /Type /Annot >>
endobj
86 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 528.2394 0 ] /Rect [ 40.01575 473.7894 246.1957 485.7894 ] /Subtype /Link /Type /Annot >>
endobj
87 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 435.2394 0 ] /Rect [ 40.01575 425.3894 238.4057 437.3894 ] /Subtype /Link /Type /Annot >>
endobj
88 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 330.2394 0 ] /Rect [ 40.01575 407.3894 265.6357 419.3894 ] /Subtype /Link /Type /Annot >>
endobj
89 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 213.2394 0 ] /Rect [ 40.01575 389.3894 256.1857 401.3894 ] /Subtype /Link /Type /Annot >>
endobj
90 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 777.0394 0 ] /Rect [ 40.01575 340.9894 267.3057 352.9894 ] /Subtype /Link /Type /Annot >>
endobj
91 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 690.0394 0 ] /Rect [ 40.01575 292.5894 283.4257 304.5894 ] /Subtype /Link /Type /Annot >>
endobj
92 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 618.0394 0 ] /Rect [ 40.01575 244.1894 251.1757 256.1894 ] /Subtype /Link /Type /Annot >>
endobj
93 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 618.0394 0 ] /Rect [ 40.01575 232.1894 76.69575 244.1894 ] /Subtype /Link /Type /Annot >>
endobj
94 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 546.0394 0 ] /Rect [ 40.01575 214.1894 259.5257 226.1894 ] /Subtype /Link /Type /Annot >>
endobj
95 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 546.0394 0 ] /Rect [ 40.01575 202.1894 76.69575 214.1894 ] /Subtype /Link /Type /Annot >>
endobj
96 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 50.01575 681.8394 0 ] /Rect [ 40.01575 153.7894 238.9557 165.7894 ] /Subtype /Link /Type /Annot >>
endobj
97 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 474.0394 0 ] /Rect [ 40.01575 135.7894 273.4157 147.7894 ] /Subtype /Link /Type /Annot >>
endobj
98 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 387.0394 0 ] /Rect [ 40.01575 87.38937 270.6457 99.38937 ] /Subtype /Link /Type /Annot >>
endobj
99 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 315.0394 0 ] /Rect [ 308.9102 787.7894 534.5302 799.7894 ] /Subtype /Link /Type /Annot >>
endobj
100 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 789.8394 0 ] /Rect [ 308.9102 769.7894 443.3902 781.7894 ] /Subtype /Link /Type /Annot >>
endobj
101 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 40.01575 674.8394 0 ] /Rect [ 308.9102 751.7894 437.8302 763.7894 ] /Subtype /Link /Type /Annot >>
endobj
102 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 228.0394 0 ] /Rect [ 308.9102 703.3894 523.4102 715.3894 ] /Subtype /Link /Type /Annot >>
endobj
103 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 228.0394 0 ] /Rect [ 308.9102 691.3894 345.5902 703.3894 ] /Subtype /Link /Type /Annot >>
endobj
104 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 117.0394 0 ] /Rect [ 308.9102 673.3894 408.3902 685.3894 ] /Subtype /Link /Type /Annot >>
endobj
105 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 70 0 R /XYZ 60.01575 117.0394 0 ] /Rect [ 308.9102 661.3894 507.8602 673.3894 ] /Subtype /Link /Type /Annot >>
endobj
106 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 735.0394 0 ] /Rect [ 308.9102 643.3894 417.2802 655.3894 ] /Subtype /Link /Type /Annot >>
endobj
107 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 735.0394 0 ] /Rect [ 308.9102 631.3894 507.8602 643.3894 ] /Subtype /Link /Type /Annot >>
endobj
108 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 624.0394 0 ] /Rect [ 308.9102 613.3894 406.7202 625.3894 ] /Subtype /Link /Type /Annot >>
endobj
109 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 624.0394 0 ] /Rect [ 308.9102 601.3894 507.8602 613.3894 ] /Subtype /Link /Type /Annot >>
endobj
110 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 513.0394 0 ] /Rect [ 308.9102 552.9894 550.0902 564.9894 ] /Subtype /Link /Type /Annot >>
endobj
111 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 426.0394 0 ] /Rect [ 308.9102 504.5894 546.7602 516.5894 ] /Subtype /Link /Type /Annot >>
endobj
112 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 339.0394 0 ] /Rect [ 308.9102 456.1894 549.5302 468.1894 ] /Subtype /Link /Type /Annot >>
endobj
113 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 108.2394 0 ] /Rect [ 308.9102 407.7894 535.6402 419.7894 ] /Subtype /Link /Type /Annot >>
endobj
114 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 267.0394 0 ] /Rect [ 308.9102 389.7894 420.5902 401.7894 ] /Subtype /Link /Type /Annot >>
endobj
115 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 267.0394 0 ] /Rect [ 308.9102 377.7894 507.8602 389.7894 ] /Subtype /Link /Type /Annot >>
endobj
116 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 156.0394 0 ] /Rect [ 308.9102 359.7894 551.1902 371.7894 ] /Subtype /Link /Type /Annot >>
endobj
117 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 60.01575 156.0394 0 ] /Rect [ 308.9102 347.7894 345.5902 359.7894 ] /Subtype /Link /Type /Annot >>
endobj
118 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 60.01575 777.0394 0 ] /Rect [ 308.9102 329.7894 407.2602 341.7894 ] /Subtype /Link /Type /Annot >>
endobj
119 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 60.01575 777.0394 0 ] /Rect [ 308.9102 317.7894 507.8602 329.7894 ] /Subtype /Link /Type /Annot >>
endobj
120 0 obj
<< /Annots [ 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 85 0 R 86 0 R 87 0 R 
  88 0 R 89 0 R 90 0 R 91 0 R 92 0 R 93 0 R 94 0 R 95 0 R 96 0 R 97 0 R 
  98 0 R 99 0 R 100 0 R 101 0 R 102 0 R 103 0 R 104 0 R 105 0 R 106 0 R 107 0 R 
  108 0 R 109 0 R 110 0 R 111 0 R 112 0 R 113 0 R 114 0 R 115 0 R 116 0 R 117 0 R 
  118 0 R 119 0 R ] /Contents 166 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
121 0 obj
<< /Contents 167 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
122 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 789.8394 0 ] /Rect [ 40.01575 709.3894 132.2657 721.3894 ] /Subtype /Link /Type /Annot >>
endobj
123 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 72 0 R /XYZ 50.01575 621.2394 0 ] /Rect [ 40.01575 691.3894 126.7057 703.3894 ] /Subtype /Link /Type /Annot >>
endobj
124 0 obj
<< /Annots [ 122 0 R 123 0 R ] /Contents 168 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 149 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
125 0 obj
<< /Outlines 127 0 R /PageLabels 169 0 R /PageMode /UseNone /Pages 149 0 R /Type /Catalog >>
endobj
126 0 obj
<< /Author () /CreationDate <rst2pdf.createpdf.PDFDate instance at 0x7f56b7c62878> /Creator (\(unspecified\)) /Keywords () /Producer (ReportLab PDF Library - www.reportlab.com) /Subject (\(unspecified\)) 
  /Title () >>
endobj
127 0 obj
<< /Count 26 /First 128 0 R /Last 148 0 R /Type /Outlines >>
endobj
128 0 obj
<< /Count 17 /Dest [ 54 0 R /XYZ 40.01575 787.0394 0 ] /First 129 0 R /Last 141 0 R /Next 146 0 R /Parent 127 0 R 
  /Title (Welcome to pyModbusTCP's documentation) >>
endobj
129 0 obj
<< /Count 7 /Dest [ 54 0 R /XYZ 40.01575 747.0394 0 ] /First 130 0 R /Last 136 0 R /Next 137 0 R /Parent 128 0 R 
  /Title (Quick start guide) >>
endobj
130 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 711.8394 0 ] /Next 131 0 R /Parent 129 0 R /Title (Overview of the package) >>
endobj
131 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 549.8594 0 ] /Next 132 0 R /Parent 129 0 R /Prev 130 0 R /Title (Package setup) >>
endobj
132 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 345.4594 0 ] /Next 133 0 R /Parent 129 0 R /Prev 131 0 R /Title (ModbusClient: init) >>
endobj
133 0 obj
<< /Dest [ 54 0 R /XYZ 40.01575 129.0594 0 ] /Next 134 0 R /Parent 129 0 R /Prev 132 0 R /Title (ModbusClient: manage TCP link) >>
endobj
134 0 obj
<< /Dest [ 63 0 R /XYZ 40.01575 605.4394 0 ] /Next 135 0 R /Parent 129 0 R /Prev 133 0 R /Title (ModbusClient: available modbus requests functions) >>
endobj
135 0 obj
<< /Dest [ 63 0 R /XYZ 40.01575 156.6394 0 ] /Next 136 0 R /Parent 129 0 R /Prev 134 0 R /Title (ModbusClient: debug mode) >>
endobj
136 0 obj
<< /Dest [ 66 0 R /XYZ 40.01575 626.6394 0 ] /Parent 129 0 R /Prev 135 0 R /Title (utils module: Modbus data mangling) >>
endobj
137 0 obj
<< /Count 3 /Dest [ 66 0 R /XYZ 40.01575 92.63937 0 ] /First 138 0 R /Last 140 0 R /Next 141 0 R /Parent 128 0 R 
  /Prev 129 0 R /Title (pyModbusTCP modules documentation) >>
endobj
138 0 obj
<< /Count 1 /Dest [ 69 0 R /XYZ 40.01575 787.0394 0 ] /First 139 0 R /Last 139 0 R /Next 140 0 R /Parent 137 0 R 
  /Title (Module pyModbusTCP.client) >>
endobj
139 0 obj
<< /Dest [ 69 0 R /XYZ 40.01575 736.2394 0 ] /Parent 138 0 R /Title (class pyModbusTCP.client.ModbusClient) >>
endobj
140 0 obj
<< /Dest [ 72 0 R /XYZ 40.01575 672.0394 0 ] /Parent 137 0 R /Prev 138 0 R /Title (Module pyModbusTCP.utils) >>
endobj
141 0 obj
<< /Count 4 /Dest [ 73 0 R /XYZ 40.01575 702.0394 0 ] /First 142 0 R /Last 145 0 R /Parent 128 0 R /Prev 137 0 R 
  /Title (pyModbusTCP examples) >>
endobj
142 0 obj
<< /Dest [ 73 0 R /XYZ 40.01575 648.8394 0 ] /Next 143 0 R /Parent 141 0 R /Title (Simple read registers example) >>
endobj
143 0 obj
<< /Dest [ 73 0 R /XYZ 40.01575 87.23937 0 ] /Next 144 0 R /Parent 141 0 R /Prev 142 0 R /Title (Simple read bits example) >>
endobj
144 0 obj
<< /Dest [ 74 0 R /XYZ 40.01575 320.2394 0 ] /Next 145 0 R /Parent 141 0 R /Prev 143 0 R /Title (Simple write bits example) >>
endobj
145 0 obj
<< /Dest [ 75 0 R /XYZ 40.01575 284.2394 0 ] /Parent 141 0 R /Prev 144 0 R /Title (An example with a modbus polling thread) >>
endobj
146 0 obj
<< /Dest [ 76 0 R /XYZ 40.01575 344.2394 0 ] /Next 147 0 R /Parent 127 0 R /Prev 128 0 R /Title (Indices and tables) >>
endobj
147 0 obj
<< /Dest [ 120 0 R /XYZ 40.01575 799.0394 0 ] /Next 148 0 R /Parent 127 0 R /Prev 146 0 R /Title (Index) >>
endobj
148 0 obj
<< /Dest [ 124 0 R /XYZ 40.01575 799.0394 0 ] /Parent 127 0 R /Prev 147 0 R /Title (Python Module Index) >>
endobj
149 0 obj
<< /Count 19 /Kids [ 4 0 R 5 0 R 48 0 R 49 0 R 54 0 R 63 0 R 66 0 R 69 0 R 70 0 R 71 0 R 
  72 0 R 73 0 R 74 0 R 75 0 R 76 0 R 77 0 R 120 0 R 121 0 R 124 0 R ] /Type /Pages >>
endobj
150 0 obj
<< /Length 949 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 113.172 0 Td (pyModbusTCP documentation) Tj T* -113.172 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 208.0095 0 Td (version 0.0.12) Tj T* -208.0095 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 218.61 0 Td (Loic Lefebvre) Tj T* -218.61 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 203.592 0 Td (December 15, 2015) Tj T* -203.592 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
151 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
152 0 obj
<< /Length 5813 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 391.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 363 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 363 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 345 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 345 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 309 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 309 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 291 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 291 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (10) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (11) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Index) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (13) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (15) Tj T* -60.88 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 391.0394 cm
Q
q
1 0 0 1 40.01575 391.0394 cm
Q
 
endstream
endobj
153 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
154 0 obj
<< /Length 8957 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 695.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 665.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .072131 Tw (pyModbusTCP give access to modbus/TCP server through the ModbusClient object. This class is define in the client) Tj T* 0 Tw (module.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 635.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .438637 Tw (To deal with frequent need of modbus data mangling \(for example 32 bits IEEE float to 2x16 bits words convertion\)) Tj T* 0 Tw (a special module named utils provide some helful functions.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 617.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Package map:) Tj T* ET
Q
Q
q
1 0 0 1 210.5178 565.8594 cm
q
174.24 0 0 45.18 0 0 cm
/FormXob.rst2pdf_image_0 Do
Q
Q
q
1 0 0 1 40.01575 533.0594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 515.0594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from PyPi:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 436.2594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (# for Python 2.7) Tj T* (sudo pip-2.7 install pyModbusTCP) Tj T* (# or for Python 3.2) Tj T* (sudo pip-3.2 install pyModbusTCP) Tj T* (# or upgrade from an older release) Tj T* (sudo pip-3.2 install pyModbusTCP --upgrade) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 416.2594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from Github:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 361.4594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (git clone https://github.com/sourceperl/pyModbusTCP.git) Tj T* (cd pyModbusTCP) Tj T* (# here change "python" by your python target\(s\) version\(s\) \(like python3.2\)) Tj T* (sudo python setup.py install) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 328.6594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 310.6594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (init module from constructor \(raise ValueError if host/port error\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 243.8594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
.933333 1 .8 rg
n 0 48.75 24 12 re f*
.933333 1 .8 rg
n 30 48.75 108 12 re f*
.933333 1 .8 rg
n 144 48.75 36 12 re f*
.933333 1 .8 rg
n 186 48.75 72 12 re f*
.933333 1 .8 rg
n 0 36.75 18 12 re f*
.933333 1 .8 rg
n 18 36.75 6 12 re f*
.933333 1 .8 rg
n 24 24.75 6 12 re f*
.933333 1 .8 rg
n 36 24.75 6 12 re f*
.933333 1 .8 rg
n 48 24.75 72 12 re f*
.933333 1 .8 rg
n 120 24.75 6 12 re f*
.933333 1 .8 rg
n 126 24.75 24 12 re f*
.933333 1 .8 rg
n 150 24.75 6 12 re f*
1 .941176 .941176 rg
n 156 24.75 66 12 re f*
.933333 1 .8 rg
n 222 24.75 6 12 re f*
.933333 1 .8 rg
n 234 24.75 24 12 re f*
.933333 1 .8 rg
n 258 24.75 6 12 re f*
.933333 1 .8 rg
n 264 24.75 18 12 re f*
.933333 1 .8 rg
n 282 24.75 6 12 re f*
.933333 1 .8 rg
n 0 12.75 36 12 re f*
.933333 1 .8 rg
n 42 12.75 60 12 re f*
.933333 1 .8 rg
n 102 12.75 6 12 re f*
.933333 1 .8 rg
n 24 .75 30 12 re f*
.933333 1 .8 rg
n 54 .75 6 12 re f*
1 .941176 .941176 rg
n 60 .75 192 12 re f*
.933333 1 .8 rg
n 252 .75 6 12 re f*
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (try) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\() Tj 0 0 0 rg (host) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (port) Tj .188235 .188235 .188235 rg (=) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (except) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .941176 0 0 rg (ValueError) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("Error with host or port params") Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 223.8594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (you can also init module from functions host/port return None if error:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 145.0594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
.933333 1 .8 rg
n 0 60.75 24 12 re f*
.933333 1 .8 rg
n 30 60.75 108 12 re f*
.933333 1 .8 rg
n 144 60.75 36 12 re f*
.933333 1 .8 rg
n 186 60.75 72 12 re f*
.933333 1 .8 rg
n 0 48.75 6 12 re f*
.933333 1 .8 rg
n 12 48.75 6 12 re f*
.933333 1 .8 rg
n 24 48.75 72 12 re f*
.933333 1 .8 rg
n 96 48.75 12 12 re f*
.933333 1 .8 rg
n 0 36.75 12 12 re f*
.933333 1 .8 rg
n 18 36.75 18 12 re f*
.933333 1 .8 rg
n 42 36.75 6 12 re f*
.933333 1 .8 rg
n 48 36.75 6 12 re f*
.933333 1 .8 rg
n 54 36.75 24 12 re f*
.933333 1 .8 rg
n 78 36.75 6 12 re f*
1 .941176 .941176 rg
n 84 36.75 66 12 re f*
.933333 1 .8 rg
n 150 36.75 12 12 re f*
.933333 1 .8 rg
n 24 24.75 30 12 re f*
.933333 1 .8 rg
n 54 24.75 6 12 re f*
1 .941176 .941176 rg
n 60 24.75 72 12 re f*
.933333 1 .8 rg
n 132 24.75 6 12 re f*
.933333 1 .8 rg
n 0 12.75 12 12 re f*
.933333 1 .8 rg
n 18 12.75 18 12 re f*
.933333 1 .8 rg
n 42 12.75 6 12 re f*
.933333 1 .8 rg
n 48 12.75 6 12 re f*
.933333 1 .8 rg
n 54 12.75 24 12 re f*
.933333 1 .8 rg
n 78 12.75 6 12 re f*
.933333 1 .8 rg
n 84 12.75 18 12 re f*
.933333 1 .8 rg
n 102 12.75 12 12 re f*
.933333 1 .8 rg
n 24 .75 30 12 re f*
.933333 1 .8 rg
n 54 .75 6 12 re f*
1 .941176 .941176 rg
n 60 .75 72 12 re f*
.933333 1 .8 rg
n 132 .75 6 12 re f*
BT 1 0 0 1 0 62 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg (\):) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("host error") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg (\):) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("port error") Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 112.2594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 82.25937 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .132576 Tw (After init ModbusClient, you need to open the TCP link. After this, you can call a modbus request function \(see list in) Tj T* 0 Tw (next section\):) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
155 0 obj
<< /Length 17893 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 732.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
.933333 1 .8 rg
n 0 36.75 12 12 re f*
.933333 1 .8 rg
n 18 36.75 6 12 re f*
.933333 1 .8 rg
n 24 36.75 6 12 re f*
.933333 1 .8 rg
n 30 36.75 24 12 re f*
.933333 1 .8 rg
n 54 36.75 18 12 re f*
.933333 1 .8 rg
n 24 24.75 66 12 re f*
.933333 1 .8 rg
n 96 24.75 6 12 re f*
.933333 1 .8 rg
n 108 24.75 6 12 re f*
.933333 1 .8 rg
n 114 24.75 6 12 re f*
.933333 1 .8 rg
n 120 24.75 132 12 re f*
.933333 1 .8 rg
n 252 24.75 6 12 re f*
.933333 1 .8 rg
n 258 24.75 6 12 re f*
.933333 1 .8 rg
n 264 24.75 6 12 re f*
.933333 1 .8 rg
n 276 24.75 12 12 re f*
.933333 1 .8 rg
n 288 24.75 6 12 re f*
.933333 1 .8 rg
n 24 12.75 66 12 re f*
.933333 1 .8 rg
n 96 12.75 6 12 re f*
.933333 1 .8 rg
n 108 12.75 6 12 re f*
.933333 1 .8 rg
n 114 12.75 6 12 re f*
.933333 1 .8 rg
n 120 12.75 132 12 re f*
.933333 1 .8 rg
n 252 12.75 6 12 re f*
.933333 1 .8 rg
n 258 12.75 12 12 re f*
.933333 1 .8 rg
n 270 12.75 6 12 re f*
.933333 1 .8 rg
n 282 12.75 12 12 re f*
.933333 1 .8 rg
n 294 12.75 6 12 re f*
.933333 1 .8 rg
n 24 .75 6 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 12 12 re f*
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (regs_list_1) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (regs_list_2) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (55) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (close) Tj 0 0 0 rg (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 712.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (With a forever polling loop, TCP always open \(auto-reconnect code\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 621.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 90 re B*
Q
q
.933333 1 .8 rg
n 0 72.75 30 12 re f*
.933333 1 .8 rg
n 36 72.75 24 12 re f*
.933333 1 .8 rg
n 60 72.75 6 12 re f*
.933333 1 .8 rg
n 24 60.75 12 12 re f*
.933333 1 .8 rg
n 42 60.75 6 12 re f*
.933333 1 .8 rg
n 48 60.75 6 12 re f*
.933333 1 .8 rg
n 54 60.75 42 12 re f*
.933333 1 .8 rg
n 96 60.75 18 12 re f*
.933333 1 .8 rg
n 48 48.75 66 12 re f*
.933333 1 .8 rg
n 120 48.75 6 12 re f*
.933333 1 .8 rg
n 132 48.75 6 12 re f*
.933333 1 .8 rg
n 138 48.75 6 12 re f*
.933333 1 .8 rg
n 144 48.75 132 12 re f*
.933333 1 .8 rg
n 276 48.75 6 12 re f*
.933333 1 .8 rg
n 282 48.75 6 12 re f*
.933333 1 .8 rg
n 288 48.75 6 12 re f*
.933333 1 .8 rg
n 300 48.75 12 12 re f*
.933333 1 .8 rg
n 312 48.75 6 12 re f*
.933333 1 .8 rg
n 48 36.75 66 12 re f*
.933333 1 .8 rg
n 120 36.75 6 12 re f*
.933333 1 .8 rg
n 132 36.75 6 12 re f*
.933333 1 .8 rg
n 138 36.75 6 12 re f*
.933333 1 .8 rg
n 144 36.75 132 12 re f*
.933333 1 .8 rg
n 276 36.75 6 12 re f*
.933333 1 .8 rg
n 282 36.75 12 12 re f*
.933333 1 .8 rg
n 294 36.75 6 12 re f*
.933333 1 .8 rg
n 306 36.75 12 12 re f*
.933333 1 .8 rg
n 318 36.75 6 12 re f*
.933333 1 .8 rg
n 24 24.75 24 12 re f*
.933333 1 .8 rg
n 48 24.75 6 12 re f*
.933333 1 .8 rg
n 48 12.75 6 12 re f*
.933333 1 .8 rg
n 54 12.75 6 12 re f*
.933333 1 .8 rg
n 60 12.75 24 12 re f*
.933333 1 .8 rg
n 84 12.75 12 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 74 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (regs_list_1) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (regs_list_2) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (55) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 588.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 570.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (See ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Modbus ) Tj 0 0 0 rg (for full table.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 564.6394 cm
Q
q
1 0 0 1 40.01575 172.6394 cm
1 1 1 rg
n 0 392 515.2441 -26 re f*
.878431 .878431 .878431 rg
n 0 366 515.2441 -18 re f*
1 1 1 rg
n 0 348 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 330 515.2441 -18 re f*
1 1 1 rg
n 0 312 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 294 515.2441 -18 re f*
1 1 1 rg
n 0 276 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 258 515.2441 -18 re f*
1 1 1 rg
n 0 240 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 222 515.2441 -30 re f*
1 1 1 rg
n 0 192 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 174 515.2441 -18 re f*
1 1 1 rg
n 0 156 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 138 515.2441 -18 re f*
1 1 1 rg
n 0 120 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 102 515.2441 -18 re f*
1 1 1 rg
n 0 84 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 66 515.2441 -18 re f*
1 1 1 rg
n 0 48 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 30 515.2441 -30 re f*
.960784 .960784 .862745 rg
n 0 392 515.2441 -26 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 369 cm
q
.960784 .960784 .862745 rg
n 0 0 37.07087 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL .200433 0 Td (Domain) Tj T* -0.200433 0 Td ET
Q
Q
q
1 0 0 1 55.07087 369 cm
q
.960784 .960784 .862745 rg
n 0 0 110.6772 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 19.77858 0 Td (Function name) Tj T* -19.77858 0 Td ET
Q
Q
q
1 0 0 1 177.748 369 cm
q
.960784 .960784 .862745 rg
n 0 0 49.33858 20 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 10 Tm /F2 10 Tf 10 TL 3.559291 0 Td (Function) Tj T* 9.44 0 Td (code) Tj T* -12.99929 0 Td ET
Q
Q
q
1 0 0 1 239.0866 369 cm
q
.960784 .960784 .862745 rg
n 0 0 270.1575 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 80.91374 0 Td (ModbusClient function) Tj T* -80.91374 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Bit) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Discrete Inputs) Tj T* ET
Q
Q
q
1 0 0 1 177.748 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 351 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_discrete_inputs\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 333 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_coils\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Coil) Tj T* ET
Q
Q
q
1 0 0 1 177.748 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 315 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (write_single_coil\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (15) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Registe) Tj T* (r) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Input Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 279 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_input_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Holding Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 261 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (read_holding_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 243 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (write_single_register\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 225 cm
q
0 0 0 rg
0 0 0 RG
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (write_multiple_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read/Write Multiple) Tj T* (Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (23) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Mask Write Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (22) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (File) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read FIFO Queue) Tj T* ET
Q
Q
q
1 0 0 1 177.748 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (24) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (20) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (21) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Exception Status) Tj T* ET
Q
Q
q
1 0 0 1 177.748 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Diagnos) Tj T* (tic) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Diagnostic) Tj T* ET
Q
Q
q
1 0 0 1 177.748 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Counter) Tj T* ET
Q
Q
q
1 0 0 1 177.748 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Log) Tj T* ET
Q
Q
q
1 0 0 1 177.748 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Report Slave ID) Tj T* ET
Q
Q
q
1 0 0 1 177.748 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (17) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read Device) Tj T* (Identification) Tj T* ET
Q
Q
q
1 0 0 1 177.748 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (43) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 366 m 515.2441 366 l S
n 49.07087 348 m 515.2441 348 l S
n 49.07087 330 m 515.2441 330 l S
n 49.07087 312 m 515.2441 312 l S
n 0 294 m 515.2441 294 l S
n 49.07087 276 m 515.2441 276 l S
n 49.07087 258 m 515.2441 258 l S
n 49.07087 240 m 515.2441 240 l S
n 49.07087 222 m 515.2441 222 l S
n 49.07087 192 m 515.2441 192 l S
n 0 174 m 515.2441 174 l S
n 49.07087 156 m 515.2441 156 l S
n 49.07087 138 m 515.2441 138 l S
n 49.07087 120 m 515.2441 120 l S
n 0 102 m 515.2441 102 l S
n 49.07087 84 m 515.2441 84 l S
n 49.07087 66 m 515.2441 66 l S
n 49.07087 48 m 515.2441 48 l S
n 49.07087 30 m 515.2441 30 l S
n 49.07087 0 m 49.07087 392 l S
n 171.748 0 m 171.748 392 l S
n 233.0866 0 m 233.0866 392 l S
n 0 392 m 515.2441 392 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 392 l S
n 515.2441 0 m 515.2441 392 l S
Q
Q
q
1 0 0 1 40.01575 172.6394 cm
Q
q
1 0 0 1 40.01575 139.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 121.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If need, you can enable a debug mode for ModbusClient like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 91.03937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
.933333 1 .8 rg
n 0 12.75 24 12 re f*
.933333 1 .8 rg
n 30 12.75 108 12 re f*
.933333 1 .8 rg
n 144 12.75 36 12 re f*
.933333 1 .8 rg
n 186 12.75 72 12 re f*
.933333 1 .8 rg
n 0 .75 6 12 re f*
.933333 1 .8 rg
n 12 .75 6 12 re f*
.933333 1 .8 rg
n 24 .75 72 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
.933333 1 .8 rg
n 102 .75 24 12 re f*
.933333 1 .8 rg
n 126 .75 6 12 re f*
1 .941176 .941176 rg
n 132 .75 66 12 re f*
.933333 1 .8 rg
n 198 .75 6 12 re f*
.933333 1 .8 rg
n 210 .75 24 12 re f*
.933333 1 .8 rg
n 234 .75 6 12 re f*
.933333 1 .8 rg
n 240 .75 18 12 re f*
.933333 1 .8 rg
n 258 .75 6 12 re f*
.933333 1 .8 rg
n 270 .75 30 12 re f*
.933333 1 .8 rg
n 300 .75 6 12 re f*
.933333 1 .8 rg
n 306 .75 24 12 re f*
.933333 1 .8 rg
n 330 .75 6 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\() Tj 0 0 0 rg (host) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (port) Tj .188235 .188235 .188235 rg (=) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (debug) Tj .188235 .188235 .188235 rg (=) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 71.03937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
156 0 obj
<< /Length 16962 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 768.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
.933333 1 .8 rg
n 0 .75 6 12 re f*
.933333 1 .8 rg
n 6 .75 6 12 re f*
.933333 1 .8 rg
n 12 .75 30 12 re f*
.933333 1 .8 rg
n 42 .75 6 12 re f*
.933333 1 .8 rg
n 48 .75 24 12 re f*
.933333 1 .8 rg
n 72 .75 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (debug) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 748.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (when debug is enable all debug message is print on console and you can see modbus frame:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 729.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
.933333 1 .8 rg
n 0 .75 6 12 re f*
.933333 1 .8 rg
n 6 .75 6 12 re f*
.933333 1 .8 rg
n 12 .75 132 12 re f*
.933333 1 .8 rg
n 144 .75 6 12 re f*
.933333 1 .8 rg
n 150 .75 6 12 re f*
.933333 1 .8 rg
n 156 .75 6 12 re f*
.933333 1 .8 rg
n 168 .75 6 12 re f*
.933333 1 .8 rg
n 174 .75 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 709.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (print:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 642.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (Tx) Tj T* ([E7 53 00 00 00 06 01] 03 00 00 00 04) Tj T* (Rx) Tj T* ([E7 53 00 00 00 0B 01] 03 08 00 00 00 6F 00 00 00 00) Tj T* ([0, 111, 0, 0]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 609.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 591.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sample data mangling, usefull for interface PLC device.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 585.8394 cm
Q
q
1 0 0 1 40.01575 585.8394 cm
Q
q
1 0 0 1 40.01575 423.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16 bits to 32 bits integers:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 150 re B*
Q
q
.933333 1 .8 rg
n 0 132.75 24 12 re f*
.933333 1 .8 rg
n 30 132.75 66 12 re f*
.933333 1 .8 rg
n 102 132.75 36 12 re f*
.933333 1 .8 rg
n 144 132.75 30 12 re f*
.933333 1 .8 rg
n 0 120.75 72 12 re f*
.933333 1 .8 rg
n 78 120.75 6 12 re f*
.933333 1 .8 rg
n 90 120.75 6 12 re f*
.933333 1 .8 rg
n 96 120.75 36 12 re f*
.933333 1 .8 rg
n 132 120.75 6 12 re f*
.933333 1 .8 rg
n 144 120.75 36 12 re f*
.933333 1 .8 rg
n 180 120.75 6 12 re f*
.933333 1 .8 rg
n 192 120.75 36 12 re f*
.933333 1 .8 rg
n 228 120.75 6 12 re f*
.933333 1 .8 rg
n 240 120.75 36 12 re f*
.933333 1 .8 rg
n 276 120.75 6 12 re f*
.933333 1 .8 rg
n 0 96.75 174 12 re f*
.933333 1 .8 rg
n 0 84.75 72 12 re f*
.933333 1 .8 rg
n 78 84.75 6 12 re f*
.933333 1 .8 rg
n 90 84.75 30 12 re f*
.933333 1 .8 rg
n 120 84.75 6 12 re f*
.933333 1 .8 rg
n 126 84.75 102 12 re f*
.933333 1 .8 rg
n 228 84.75 6 12 re f*
.933333 1 .8 rg
n 234 84.75 72 12 re f*
.933333 1 .8 rg
n 306 84.75 6 12 re f*
.933333 1 .8 rg
n 0 72.75 234 12 re f*
.933333 1 .8 rg
n 0 60.75 30 12 re f*
.933333 1 .8 rg
n 30 60.75 12 12 re f*
.933333 1 .8 rg
n 42 60.75 18 12 re f*
.933333 1 .8 rg
n 60 60.75 6 12 re f*
.933333 1 .8 rg
n 66 60.75 6 12 re f*
.933333 1 .8 rg
n 72 60.75 6 12 re f*
.933333 1 .8 rg
n 84 60.75 18 12 re f*
.933333 1 .8 rg
n 108 60.75 6 12 re f*
.933333 1 .8 rg
n 120 60.75 12 12 re f*
.933333 1 .8 rg
n 138 60.75 72 12 re f*
.933333 1 .8 rg
n 210 60.75 12 12 re f*
.933333 1 .8 rg
n 0 36.75 132 12 re f*
.933333 1 .8 rg
n 0 24.75 72 12 re f*
.933333 1 .8 rg
n 78 24.75 6 12 re f*
.933333 1 .8 rg
n 90 24.75 30 12 re f*
.933333 1 .8 rg
n 120 24.75 6 12 re f*
.933333 1 .8 rg
n 126 24.75 102 12 re f*
.933333 1 .8 rg
n 228 24.75 6 12 re f*
.933333 1 .8 rg
n 234 24.75 72 12 re f*
.933333 1 .8 rg
n 306 24.75 6 12 re f*
.933333 1 .8 rg
n 318 24.75 60 12 re f*
.933333 1 .8 rg
n 378 24.75 6 12 re f*
.933333 1 .8 rg
n 384 24.75 30 12 re f*
.933333 1 .8 rg
n 414 24.75 6 12 re f*
.933333 1 .8 rg
n 0 12.75 240 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 12 12 re f*
.933333 1 .8 rg
n 42 .75 18 12 re f*
.933333 1 .8 rg
n 60 .75 6 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 6 12 re f*
.933333 1 .8 rg
n 84 .75 18 12 re f*
.933333 1 .8 rg
n 108 .75 6 12 re f*
.933333 1 .8 rg
n 120 .75 12 12 re f*
.933333 1 .8 rg
n 138 .75 72 12 re f*
.933333 1 .8 rg
n 210 .75 12 12 re f*
BT 1 0 0 1 0 134 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T* 0 0 0 rg (list_16_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ([) Tj /F5 10 Tf 0 .313725 .501961 rg (0x0123) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x4567) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x89ab) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0xcdef) Tj /F4 10 Tf 0 0 0 rg (]) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# big endian sample \(default\)) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (list_32_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (word_list_to_long) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "['0x1234567', '0x89abcdef']") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\([) Tj 0 .439216 .12549 rg (hex) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (i) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (in) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (list_32_bits) Tj 0 0 0 rg (]\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# little endian sample) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (list_32_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (word_list_to_long) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (big_endian) Tj .188235 .188235 .188235 rg (=) Tj 0 .439216 .12549 rg (False) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "['0x45670123', '0xcdef89ab']") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\([) Tj 0 .439216 .12549 rg (hex) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (i) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (in) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (list_32_bits) Tj 0 0 0 rg (]\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 417.0394 cm
Q
q
1 0 0 1 40.01575 302.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 99.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 99.8 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (two's complement \(see ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Two%27s_complement) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 102 re B*
Q
q
.933333 1 .8 rg
n 0 84.75 24 12 re f*
.933333 1 .8 rg
n 30 84.75 66 12 re f*
.933333 1 .8 rg
n 102 84.75 36 12 re f*
.933333 1 .8 rg
n 144 84.75 30 12 re f*
.933333 1 .8 rg
n 0 72.75 72 12 re f*
.933333 1 .8 rg
n 78 72.75 6 12 re f*
.933333 1 .8 rg
n 90 72.75 6 12 re f*
.933333 1 .8 rg
n 96 72.75 36 12 re f*
.933333 1 .8 rg
n 132 72.75 6 12 re f*
.933333 1 .8 rg
n 144 72.75 36 12 re f*
.933333 1 .8 rg
n 180 72.75 6 12 re f*
.933333 1 .8 rg
n 192 72.75 36 12 re f*
.933333 1 .8 rg
n 228 72.75 6 12 re f*
.933333 1 .8 rg
n 240 72.75 36 12 re f*
.933333 1 .8 rg
n 276 72.75 6 12 re f*
.933333 1 .8 rg
n 0 48.75 192 12 re f*
.933333 1 .8 rg
n 0 36.75 30 12 re f*
.933333 1 .8 rg
n 30 36.75 6 12 re f*
.933333 1 .8 rg
n 36 36.75 30 12 re f*
.933333 1 .8 rg
n 66 36.75 6 12 re f*
.933333 1 .8 rg
n 72 36.75 84 12 re f*
.933333 1 .8 rg
n 156 36.75 6 12 re f*
.933333 1 .8 rg
n 162 36.75 72 12 re f*
.933333 1 .8 rg
n 234 36.75 6 12 re f*
.933333 1 .8 rg
n 246 36.75 12 12 re f*
.933333 1 .8 rg
n 258 36.75 12 12 re f*
.933333 1 .8 rg
n 0 12.75 84 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 54 12 re f*
.933333 1 .8 rg
n 126 .75 6 12 re f*
.933333 1 .8 rg
n 132 .75 72 12 re f*
.933333 1 .8 rg
n 204 .75 6 12 re f*
.933333 1 .8 rg
n 210 .75 6 12 re f*
.933333 1 .8 rg
n 216 .75 12 12 re f*
.933333 1 .8 rg
n 234 .75 12 12 re f*
.933333 1 .8 rg
n 246 .75 12 12 re f*
BT 1 0 0 1 0 86 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T* 0 0 0 rg (list_16_bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ([) Tj /F5 10 Tf 0 .313725 .501961 rg (0x0000) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0xFFFF) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x00FF) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .313725 .501961 rg (0x8001) Tj /F4 10 Tf 0 0 0 rg (]) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "[0, -1, 255, -32767]") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (get_list_2comp) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (16) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "-1") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (get_2comp) Tj 0 0 0 rg (\() Tj 0 0 0 rg (list_16_bits) Tj 0 0 0 rg ([) Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (],) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (16) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 296.2394 cm
Q
q
1 0 0 1 40.01575 241.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (an integer of val_size bits \(default is 16\) to an array of boolean:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 42 re B*
Q
q
.933333 1 .8 rg
n 0 24.75 24 12 re f*
.933333 1 .8 rg
n 30 24.75 66 12 re f*
.933333 1 .8 rg
n 102 24.75 36 12 re f*
.933333 1 .8 rg
n 144 24.75 30 12 re f*
.933333 1 .8 rg
n 0 12.75 396 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 102 12 re f*
.933333 1 .8 rg
n 174 .75 6 12 re f*
.933333 1 .8 rg
n 180 .75 24 12 re f*
.933333 1 .8 rg
n 204 .75 6 12 re f*
.933333 1 .8 rg
n 216 .75 48 12 re f*
.933333 1 .8 rg
n 264 .75 6 12 re f*
.933333 1 .8 rg
n 270 .75 6 12 re f*
.933333 1 .8 rg
n 276 .75 12 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "[True, False, True, False, False, False, False, False]") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (get_bits_from_int) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 .313725 .501961 rg (0x05) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (val_size) Tj .188235 .188235 .188235 rg (=) Tj /F5 10 Tf 0 0 .815686 rg (8) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 235.4394 cm
Q
q
1 0 0 1 40.01575 108.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 111.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 111.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (gateway between IEEE single precision float and python float:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 114 re B*
Q
q
.933333 1 .8 rg
n 0 96.75 24 12 re f*
.933333 1 .8 rg
n 30 96.75 66 12 re f*
.933333 1 .8 rg
n 102 96.75 36 12 re f*
.933333 1 .8 rg
n 144 96.75 30 12 re f*
.933333 1 .8 rg
n 0 72.75 420 12 re f*
.933333 1 .8 rg
n 0 60.75 132 12 re f*
.933333 1 .8 rg
n 0 48.75 30 12 re f*
.933333 1 .8 rg
n 30 48.75 6 12 re f*
.933333 1 .8 rg
n 36 48.75 18 12 re f*
.933333 1 .8 rg
n 54 48.75 6 12 re f*
.933333 1 .8 rg
n 60 48.75 30 12 re f*
.933333 1 .8 rg
n 90 48.75 6 12 re f*
.933333 1 .8 rg
n 96 48.75 66 12 re f*
.933333 1 .8 rg
n 162 48.75 6 12 re f*
.933333 1 .8 rg
n 168 48.75 18 12 re f*
.933333 1 .8 rg
n 186 48.75 18 12 re f*
.933333 1 .8 rg
n 0 24.75 420 12 re f*
.933333 1 .8 rg
n 0 12.75 426 12 re f*
.933333 1 .8 rg
n 0 .75 30 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 36 .75 30 12 re f*
.933333 1 .8 rg
n 66 .75 6 12 re f*
.933333 1 .8 rg
n 72 .75 66 12 re f*
.933333 1 .8 rg
n 138 .75 6 12 re f*
.933333 1 .8 rg
n 144 .75 60 12 re f*
.933333 1 .8 rg
n 204 .75 12 12 re f*
BT 1 0 0 1 0 98 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (utils) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "0x3e99999a") Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (hex) Tj 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (encode_ieee) Tj 0 0 0 rg (\() Tj /F5 10 Tf .376471 0 .878431 rg (0.3) Tj /F4 10 Tf 0 0 0 rg (\)\)\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# display "0.300000011921" \(it's not 0.3, precision leak with float...\)) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (utils) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (decode_ieee) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 .313725 .501961 rg (0x3e99999a) Tj /F4 10 Tf 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 108.6394 cm
Q
q
1 0 0 1 40.01575 73.43937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 55.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Contents:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
157 0 obj
<< /Length 12206 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 752.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (This module provide the ModbusClient class used to deal with modbus server.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 709.8394 cm
Q
q
1 0 0 1 40.01575 679.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.578819 Tw 12 TL /F7 10 Tf 0 0 0 rg (class ) Tj /F4 10 Tf 0 0 0 rg (pyModbusTCP.client.) Tj /F5 10 Tf 0 0 0 rg (ModbusClient ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (host=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (port=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (unit_id=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (timeout=None) Tj /F1 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F6 10 Tf 0 0 0 rg (debug=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (auto_open=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (auto_close=None) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 667.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Client Modbus TCP) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 661.8394 cm
Q
q
1 0 0 1 50.01575 631.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.092349 Tw 12 TL /F5 10 Tf 0 0 0 rg (__init__ ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (host=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (debug=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (auto_open=None) Tj /F2 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F8 10 Tf 0 0 0 rg (auto_close=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 619.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Constructor) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 607.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Modbus server params \(host, port\) can be set here or with host\(\), port\(\) functions. Same for debug option.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 595.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use functions avoid to launch ValueError except if params is incorrect.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 589.8394 cm
Q
q
1 0 0 1 60.01575 460.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 111 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (host ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (str) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address server address \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 105 cm
Q
q
1 0 0 1 91.03937 93 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- TCP port number \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 87 cm
Q
q
1 0 0 1 91.03937 75 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- unit ID \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 57 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (float) Tj /F1 10 Tf (\) -- socket timeout in seconds \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 51 cm
Q
q
1 0 0 1 91.03937 39 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (debug ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- debug state \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_open ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP connect \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_close ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP close \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 445.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Object ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 430.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 403.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F2 10 Tf 12 TL 40.79937 0 Td (Raises) Tj T* -22.22 0 Td (ValueError:) Tj T* -18.57937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (if a set parameter value is incorrect) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 397.8394 cm
Q
q
1 0 0 1 50.01575 379.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_close ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 367.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP close mode \(after each request\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 361.8394 cm
Q
q
1 0 0 1 60.01575 346.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_close state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 331.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_close state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 316.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 310.8394 cm
Q
q
1 0 0 1 50.01575 292.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_open ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 280.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP connect mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 274.8394 cm
Q
q
1 0 0 1 60.01575 259.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_open state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 244.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_open state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 229.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 223.8394 cm
Q
q
1 0 0 1 50.01575 205.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (close ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 193.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Close TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 187.8394 cm
Q
q
1 0 0 1 60.01575 172.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (close status \(True for close/None if already close\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 157.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 151.8394 cm
Q
q
1 0 0 1 50.01575 133.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (debug ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 121.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set debug mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 115.8394 cm
Q
q
1 0 0 1 60.01575 100.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool or None) Tj /F1 10 Tf (\) -- debug state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 85.83937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (debug state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 70.83937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 64.83937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
 
endstream
endobj
158 0 obj
<< /Length 11968 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 775.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (host ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (hostname=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 763.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set host \(IPv4/IPv6 or hostname like 'plc.domain.net'\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
Q
q
1 0 0 1 60.01575 742.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hostname ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (str or None) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 727.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (hostname or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 712.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 706.0394 cm
Q
q
1 0 0 1 50.01575 688.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (is_open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 676.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get status of TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 670.0394 cm
Q
q
1 0 0 1 60.01575 655.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (status \(True for open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 640.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 634.0394 cm
Q
q
1 0 0 1 50.01575 616.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_error ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 604.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last error code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 598.0394 cm
Q
q
1 0 0 1 60.01575 583.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last error code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 568.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 562.0394 cm
Q
q
1 0 0 1 50.01575 544.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_except ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 532.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last except code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 526.0394 cm
Q
q
1 0 0 1 60.01575 511.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last except code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 496.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 490.0394 cm
Q
q
1 0 0 1 50.01575 472.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (mode ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (mode=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 460.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set modbus mode \(TCP or RTU\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 454.0394 cm
Q
q
1 0 0 1 60.01575 439.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (mode ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- mode \(MODBUS_TCP/MODBUS_RTU\) to set or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 424.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (mode or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 409.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 403.0394 cm
Q
q
1 0 0 1 50.01575 385.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 373.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Connect to modbus server \(open TCP connection\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 367.0394 cm
Q
q
1 0 0 1 60.01575 352.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (connect status \(True if open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 337.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 331.0394 cm
Q
q
1 0 0 1 50.01575 313.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (port ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 301.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set TCP port) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 295.0394 cm
Q
q
1 0 0 1 60.01575 280.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int or None) Tj /F1 10 Tf (\) -- TCP port number or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 265.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TCP port or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 250.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 244.0394 cm
Q
q
1 0 0 1 50.01575 226.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_coils ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 214.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_COILS \(0x01\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 208.0394 cm
Q
q
1 0 0 1 60.01575 169.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 154.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 139.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 133.0394 cm
Q
q
1 0 0 1 50.01575 115.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_discrete_inputs ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 103.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_DISCRETE_INPUTS \(0x02\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 97.03937 cm
Q
q
1 0 0 1 60.01575 58.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
 
endstream
endobj
159 0 obj
<< /Length 13380 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 60.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 751.0394 cm
Q
q
1 0 0 1 50.01575 733.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_holding_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 721.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_HOLDING_REGISTERS \(0x03\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 715.0394 cm
Q
q
1 0 0 1 60.01575 676.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 661.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 646.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 640.0394 cm
Q
q
1 0 0 1 50.01575 622.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_input_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 610.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_INPUT_REGISTERS \(0x04\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 604.0394 cm
Q
q
1 0 0 1 60.01575 565.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 550.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 535.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 529.0394 cm
Q
q
1 0 0 1 50.01575 511.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (timeout ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 499.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set timeout field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 493.0394 cm
Q
q
1 0 0 1 60.01575 478.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (float or None) Tj /F1 10 Tf (\) -- socket timeout in seconds or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 463.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (timeout or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 448.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 442.0394 cm
Q
q
1 0 0 1 50.01575 424.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (unit_id ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 412.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set unit ID field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 406.0394 cm
Q
q
1 0 0 1 60.01575 391.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int or None) Tj /F1 10 Tf (\) -- unit ID \(0 to 255\) or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 376.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unit ID or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 361.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 355.0394 cm
Q
q
1 0 0 1 50.01575 337.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (version ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 325.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get package version) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 319.0394 cm
Q
q
1 0 0 1 60.01575 304.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (current version of the package \(like "0.0.1"\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 289.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 283.0394 cm
Q
q
1 0 0 1 50.01575 265.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (regs_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 253.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_MULTIPLE_REGISTERS \(0x10\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 247.0394 cm
Q
q
1 0 0 1 60.01575 208.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- registers address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_value ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (list) Tj /F1 10 Tf (\) -- registers value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 193.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 178.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 172.0394 cm
Q
q
1 0 0 1 50.01575 154.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_coil ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (bit_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 142.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_COIL \(0x05\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 136.0394 cm
Q
q
1 0 0 1 60.01575 97.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_value ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- bit value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 82.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 67.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 61.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
 
endstream
endobj
160 0 obj
<< /Length 13545 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 775.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_register ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F8 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F8 10 Tf 0 0 0 rg (reg_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 763.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_REGISTER \(0x06\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
Q
q
1 0 0 1 60.01575 718.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_value ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- register value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 703.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 688.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 655.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 637.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (This module provide a set of functions for modbus data mangling.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 631.2394 cm
Q
q
1 0 0 1 40.01575 619.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (decode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 607.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Decode Python int \(32 bits integer\) as an IEEE single precision format) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 595.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 589.2394 cm
Q
q
1 0 0 1 50.01575 574.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- a 32 bit integer as an int Python value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 559.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 544.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 538.2394 cm
Q
q
1 0 0 1 40.01575 526.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (encode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_float) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 514.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Encode Python float to int \(32 bits integer\) as an IEEE single precision) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 502.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 496.2394 cm
Q
q
1 0 0 1 50.01575 481.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_float ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (float) Tj /F1 10 Tf (\) -- float value to convert) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 466.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IEEE 32 bits \(single precision\) as Python int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 451.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 445.2394 cm
Q
q
1 0 0 1 40.01575 433.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 421.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python int val_int) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 415.2394 cm
Q
q
1 0 0 1 50.01575 376.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 361.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 346.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 340.2394 cm
Q
q
1 0 0 1 40.01575 328.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_bits_from_int ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 316.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the list of bits of val_int integer \(default size is 16 bits\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 304.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Return bits list, least significant bit first. Use list.reverse\(\) if need.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 298.2394 cm
Q
q
1 0 0 1 50.01575 259.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- integer value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of integer \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 244.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of boolean "bits" \(least significant first\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 229.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 223.2394 cm
Q
q
1 0 0 1 40.01575 211.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_list_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 199.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python list val_list) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 193.2394 cm
Q
q
1 0 0 1 50.01575 154.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (list) Tj /F1 10 Tf (\) -- list of int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 139.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 124.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 118.2394 cm
Q
q
1 0 0 1 40.01575 106.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (word_list_to_long ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F6 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F6 10 Tf 0 0 0 rg (big_endian=True) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 94.23937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Word list \(16 bits int\) to long list \(32 bits int\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 82.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (By default word_list2long\(\) use big endian order. For use little endian, set big_endian param to False.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 76.23937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
 
endstream
endobj
161 0 obj
<< /Length 12193 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 748.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (list) Tj /F1 10 Tf (\) -- list of 16 bits int value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (big_endian ) Tj /F1 10 Tf (\() Tj /F7 10 Tf (bool) Tj /F1 10 Tf (\) -- True for big endian/False for little \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 733.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 718.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 682.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 664.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (Here some examples to see pyModbusTCP in some usages cases) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 632.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 103.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 522 re B*
Q
q
.933333 1 .8 rg
n 0 504.75 126 12 re f*
.933333 1 .8 rg
n 0 492.75 138 12 re f*
.933333 1 .8 rg
n 0 468.75 90 12 re f*
.933333 1 .8 rg
n 0 456.75 276 12 re f*
.933333 1 .8 rg
n 0 432.75 396 12 re f*
.933333 1 .8 rg
n 0 420.75 360 12 re f*
.933333 1 .8 rg
n 0 396.75 348 12 re f*
.933333 1 .8 rg
n 0 384.75 324 12 re f*
.933333 1 .8 rg
n 0 360.75 24 12 re f*
.933333 1 .8 rg
n 30 360.75 108 12 re f*
.933333 1 .8 rg
n 144 360.75 36 12 re f*
.933333 1 .8 rg
n 186 360.75 72 12 re f*
.933333 1 .8 rg
n 0 348.75 36 12 re f*
.933333 1 .8 rg
n 42 348.75 24 12 re f*
.933333 1 .8 rg
n 0 324.75 66 12 re f*
.933333 1 .8 rg
n 72 324.75 6 12 re f*
1 .941176 .941176 rg
n 84 324.75 66 12 re f*
.933333 1 .8 rg
n 0 312.75 66 12 re f*
.933333 1 .8 rg
n 72 312.75 6 12 re f*
.933333 1 .8 rg
n 84 312.75 18 12 re f*
.933333 1 .8 rg
n 0 288.75 6 12 re f*
.933333 1 .8 rg
n 12 288.75 6 12 re f*
.933333 1 .8 rg
n 24 288.75 72 12 re f*
.933333 1 .8 rg
n 96 288.75 12 12 re f*
.933333 1 .8 rg
n 0 264.75 252 12 re f*
.933333 1 .8 rg
n 0 252.75 84 12 re f*
.933333 1 .8 rg
n 0 228.75 198 12 re f*
.933333 1 .8 rg
n 0 216.75 6 12 re f*
.933333 1 .8 rg
n 6 216.75 6 12 re f*
.933333 1 .8 rg
n 12 216.75 24 12 re f*
.933333 1 .8 rg
n 36 216.75 6 12 re f*
.933333 1 .8 rg
n 42 216.75 66 12 re f*
.933333 1 .8 rg
n 108 216.75 6 12 re f*
.933333 1 .8 rg
n 0 204.75 6 12 re f*
.933333 1 .8 rg
n 6 204.75 6 12 re f*
.933333 1 .8 rg
n 12 204.75 24 12 re f*
.933333 1 .8 rg
n 36 204.75 6 12 re f*
.933333 1 .8 rg
n 42 204.75 66 12 re f*
.933333 1 .8 rg
n 108 204.75 6 12 re f*
.933333 1 .8 rg
n 0 180.75 30 12 re f*
.933333 1 .8 rg
n 36 180.75 24 12 re f*
.933333 1 .8 rg
n 60 180.75 6 12 re f*
.933333 1 .8 rg
n 24 168.75 198 12 re f*
.933333 1 .8 rg
n 24 156.75 12 12 re f*
.933333 1 .8 rg
n 42 156.75 18 12 re f*
.933333 1 .8 rg
n 66 156.75 6 12 re f*
.933333 1 .8 rg
n 72 156.75 6 12 re f*
.933333 1 .8 rg
n 78 156.75 42 12 re f*
.933333 1 .8 rg
n 120 156.75 18 12 re f*
.933333 1 .8 rg
n 48 144.75 12 12 re f*
.933333 1 .8 rg
n 66 144.75 18 12 re f*
.933333 1 .8 rg
n 90 144.75 6 12 re f*
.933333 1 .8 rg
n 96 144.75 6 12 re f*
.933333 1 .8 rg
n 102 144.75 24 12 re f*
.933333 1 .8 rg
n 126 144.75 18 12 re f*
.933333 1 .8 rg
n 72 132.75 30 12 re f*
.933333 1 .8 rg
n 102 132.75 6 12 re f*
1 .941176 .941176 rg
n 108 132.75 138 12 re f*
.933333 1 .8 rg
n 246 132.75 6 12 re f*
.933333 1 .8 rg
n 252 132.75 66 12 re f*
.933333 1 .8 rg
n 318 132.75 6 12 re f*
1 .941176 .941176 rg
n 324 132.75 18 12 re f*
.933333 1 .8 rg
n 342 132.75 6 12 re f*
.933333 1 .8 rg
n 348 132.75 18 12 re f*
.933333 1 .8 rg
n 366 132.75 6 12 re f*
.933333 1 .8 rg
n 372 132.75 66 12 re f*
.933333 1 .8 rg
n 438 132.75 12 12 re f*
.933333 1 .8 rg
n 24 108.75 330 12 re f*
.933333 1 .8 rg
n 24 96.75 12 12 re f*
.933333 1 .8 rg
n 42 96.75 6 12 re f*
.933333 1 .8 rg
n 48 96.75 6 12 re f*
.933333 1 .8 rg
n 54 96.75 42 12 re f*
.933333 1 .8 rg
n 96 96.75 18 12 re f*
.933333 1 .8 rg
n 48 84.75 354 12 re f*
.933333 1 .8 rg
n 48 72.75 24 12 re f*
.933333 1 .8 rg
n 78 72.75 6 12 re f*
.933333 1 .8 rg
n 90 72.75 6 12 re f*
.933333 1 .8 rg
n 96 72.75 6 12 re f*
.933333 1 .8 rg
n 102 72.75 132 12 re f*
.933333 1 .8 rg
n 234 72.75 6 12 re f*
.933333 1 .8 rg
n 240 72.75 6 12 re f*
.933333 1 .8 rg
n 246 72.75 6 12 re f*
.933333 1 .8 rg
n 258 72.75 12 12 re f*
.933333 1 .8 rg
n 270 72.75 6 12 re f*
.933333 1 .8 rg
n 48 60.75 180 12 re f*
.933333 1 .8 rg
n 48 48.75 12 12 re f*
.933333 1 .8 rg
n 66 48.75 24 12 re f*
.933333 1 .8 rg
n 90 48.75 6 12 re f*
.933333 1 .8 rg
n 72 36.75 30 12 re f*
.933333 1 .8 rg
n 102 36.75 6 12 re f*
1 .941176 .941176 rg
n 108 36.75 108 12 re f*
.933333 1 .8 rg
n 216 36.75 6 12 re f*
.933333 1 .8 rg
n 222 36.75 18 12 re f*
.933333 1 .8 rg
n 240 36.75 6 12 re f*
.933333 1 .8 rg
n 246 36.75 24 12 re f*
.933333 1 .8 rg
n 270 36.75 12 12 re f*
.933333 1 .8 rg
n 24 12.75 180 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 506 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# read_register) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# read 10 registers and print result on stdout) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# you can use the tiny modbus server "mbserverd" to test this code) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# mbserverd is here: https://github.com/sourceperl/mbserverd) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# the command line modbus client mbtget can also be useful) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# mbtget is here: https://github.com/sourceperl/mbtget) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# uncomment this line to see debug message) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (#c.debug\(True\)) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# define modbus server host, port) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# open or reconnect TCP to server) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to connect to ") Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (SERVER_HOST) Tj .188235 .188235 .188235 rg (+) Tj .729412 .129412 .129412 rg (":") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if open\(\) is ok, read register \(modbus function 0x03\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# read 10 registers at address 0, store result in regs list) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if success display registers) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("reg ad #0 to 9: ") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (regs) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# sleep 2s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 70.43937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
 
endstream
endobj
162 0 obj
<< /Length 12229 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 336.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 450 re B*
Q
q
.933333 1 .8 rg
n 0 432.75 126 12 re f*
.933333 1 .8 rg
n 0 420.75 138 12 re f*
.933333 1 .8 rg
n 0 396.75 60 12 re f*
.933333 1 .8 rg
n 0 384.75 246 12 re f*
.933333 1 .8 rg
n 0 360.75 24 12 re f*
.933333 1 .8 rg
n 30 360.75 108 12 re f*
.933333 1 .8 rg
n 144 360.75 36 12 re f*
.933333 1 .8 rg
n 186 360.75 72 12 re f*
.933333 1 .8 rg
n 0 348.75 36 12 re f*
.933333 1 .8 rg
n 42 348.75 24 12 re f*
.933333 1 .8 rg
n 0 324.75 66 12 re f*
.933333 1 .8 rg
n 72 324.75 6 12 re f*
1 .941176 .941176 rg
n 84 324.75 66 12 re f*
.933333 1 .8 rg
n 0 312.75 66 12 re f*
.933333 1 .8 rg
n 72 312.75 6 12 re f*
.933333 1 .8 rg
n 84 312.75 18 12 re f*
.933333 1 .8 rg
n 0 288.75 6 12 re f*
.933333 1 .8 rg
n 12 288.75 6 12 re f*
.933333 1 .8 rg
n 24 288.75 72 12 re f*
.933333 1 .8 rg
n 96 288.75 12 12 re f*
.933333 1 .8 rg
n 0 264.75 252 12 re f*
.933333 1 .8 rg
n 0 252.75 84 12 re f*
.933333 1 .8 rg
n 0 228.75 198 12 re f*
.933333 1 .8 rg
n 0 216.75 6 12 re f*
.933333 1 .8 rg
n 6 216.75 6 12 re f*
.933333 1 .8 rg
n 12 216.75 24 12 re f*
.933333 1 .8 rg
n 36 216.75 6 12 re f*
.933333 1 .8 rg
n 42 216.75 66 12 re f*
.933333 1 .8 rg
n 108 216.75 6 12 re f*
.933333 1 .8 rg
n 0 204.75 6 12 re f*
.933333 1 .8 rg
n 6 204.75 6 12 re f*
.933333 1 .8 rg
n 12 204.75 24 12 re f*
.933333 1 .8 rg
n 36 204.75 6 12 re f*
.933333 1 .8 rg
n 42 204.75 66 12 re f*
.933333 1 .8 rg
n 108 204.75 6 12 re f*
.933333 1 .8 rg
n 0 180.75 30 12 re f*
.933333 1 .8 rg
n 36 180.75 24 12 re f*
.933333 1 .8 rg
n 60 180.75 6 12 re f*
.933333 1 .8 rg
n 24 168.75 198 12 re f*
.933333 1 .8 rg
n 24 156.75 12 12 re f*
.933333 1 .8 rg
n 42 156.75 18 12 re f*
.933333 1 .8 rg
n 66 156.75 6 12 re f*
.933333 1 .8 rg
n 72 156.75 6 12 re f*
.933333 1 .8 rg
n 78 156.75 42 12 re f*
.933333 1 .8 rg
n 120 156.75 18 12 re f*
.933333 1 .8 rg
n 48 144.75 12 12 re f*
.933333 1 .8 rg
n 66 144.75 18 12 re f*
.933333 1 .8 rg
n 90 144.75 6 12 re f*
.933333 1 .8 rg
n 96 144.75 6 12 re f*
.933333 1 .8 rg
n 102 144.75 24 12 re f*
.933333 1 .8 rg
n 126 144.75 18 12 re f*
.933333 1 .8 rg
n 72 132.75 30 12 re f*
.933333 1 .8 rg
n 102 132.75 6 12 re f*
1 .941176 .941176 rg
n 108 132.75 138 12 re f*
.933333 1 .8 rg
n 246 132.75 6 12 re f*
.933333 1 .8 rg
n 252 132.75 66 12 re f*
.933333 1 .8 rg
n 318 132.75 6 12 re f*
1 .941176 .941176 rg
n 324 132.75 18 12 re f*
.933333 1 .8 rg
n 342 132.75 6 12 re f*
.933333 1 .8 rg
n 348 132.75 18 12 re f*
.933333 1 .8 rg
n 366 132.75 6 12 re f*
.933333 1 .8 rg
n 372 132.75 66 12 re f*
.933333 1 .8 rg
n 438 132.75 12 12 re f*
.933333 1 .8 rg
n 24 108.75 312 12 re f*
.933333 1 .8 rg
n 24 96.75 12 12 re f*
.933333 1 .8 rg
n 42 96.75 6 12 re f*
.933333 1 .8 rg
n 48 96.75 6 12 re f*
.933333 1 .8 rg
n 54 96.75 42 12 re f*
.933333 1 .8 rg
n 96 96.75 18 12 re f*
.933333 1 .8 rg
n 48 84.75 324 12 re f*
.933333 1 .8 rg
n 48 72.75 24 12 re f*
.933333 1 .8 rg
n 78 72.75 6 12 re f*
.933333 1 .8 rg
n 90 72.75 6 12 re f*
.933333 1 .8 rg
n 96 72.75 6 12 re f*
.933333 1 .8 rg
n 102 72.75 60 12 re f*
.933333 1 .8 rg
n 162 72.75 6 12 re f*
.933333 1 .8 rg
n 168 72.75 6 12 re f*
.933333 1 .8 rg
n 174 72.75 6 12 re f*
.933333 1 .8 rg
n 186 72.75 12 12 re f*
.933333 1 .8 rg
n 198 72.75 6 12 re f*
.933333 1 .8 rg
n 48 60.75 180 12 re f*
.933333 1 .8 rg
n 48 48.75 12 12 re f*
.933333 1 .8 rg
n 66 48.75 24 12 re f*
.933333 1 .8 rg
n 90 48.75 6 12 re f*
.933333 1 .8 rg
n 72 36.75 30 12 re f*
.933333 1 .8 rg
n 102 36.75 6 12 re f*
1 .941176 .941176 rg
n 108 36.75 108 12 re f*
.933333 1 .8 rg
n 216 36.75 6 12 re f*
.933333 1 .8 rg
n 222 36.75 18 12 re f*
.933333 1 .8 rg
n 240 36.75 6 12 re f*
.933333 1 .8 rg
n 246 36.75 24 12 re f*
.933333 1 .8 rg
n 270 36.75 12 12 re f*
.933333 1 .8 rg
n 24 12.75 180 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 434 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# read_bit) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# read 10 bits and print result on stdout) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# uncomment this line to see debug message) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (#c.debug\(True\)) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# define modbus server host, port) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# open or reconnect TCP to server) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to connect to ") Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (SERVER_HOST) Tj .188235 .188235 .188235 rg (+) Tj .729412 .129412 .129412 rg (":") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if open\(\) is ok, read coils \(modbus function 0x01\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# read 10 bits at address 0, store result in regs list) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_coils) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if success display registers) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bit ad #0 to 9: ") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bits) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# sleep 2s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 303.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 234 re B*
Q
q
.933333 1 .8 rg
n 0 216.75 126 12 re f*
.933333 1 .8 rg
n 0 204.75 138 12 re f*
.933333 1 .8 rg
n 0 180.75 66 12 re f*
.933333 1 .8 rg
n 0 168.75 336 12 re f*
.933333 1 .8 rg
n 0 144.75 24 12 re f*
.933333 1 .8 rg
n 30 144.75 108 12 re f*
.933333 1 .8 rg
n 144 144.75 36 12 re f*
.933333 1 .8 rg
n 186 144.75 72 12 re f*
.933333 1 .8 rg
n 0 132.75 36 12 re f*
.933333 1 .8 rg
n 42 132.75 24 12 re f*
.933333 1 .8 rg
n 0 108.75 66 12 re f*
.933333 1 .8 rg
n 72 108.75 6 12 re f*
1 .941176 .941176 rg
n 84 108.75 66 12 re f*
.933333 1 .8 rg
n 0 96.75 66 12 re f*
.933333 1 .8 rg
n 72 96.75 6 12 re f*
.933333 1 .8 rg
n 84 96.75 18 12 re f*
.933333 1 .8 rg
n 0 72.75 6 12 re f*
.933333 1 .8 rg
n 12 72.75 6 12 re f*
.933333 1 .8 rg
n 24 72.75 72 12 re f*
.933333 1 .8 rg
n 96 72.75 12 12 re f*
.933333 1 .8 rg
n 0 48.75 252 12 re f*
.933333 1 .8 rg
n 0 36.75 84 12 re f*
.933333 1 .8 rg
n 0 12.75 198 12 re f*
.933333 1 .8 rg
n 0 .75 6 12 re f*
.933333 1 .8 rg
n 6 .75 6 12 re f*
.933333 1 .8 rg
n 12 .75 24 12 re f*
.933333 1 .8 rg
n 36 .75 6 12 re f*
.933333 1 .8 rg
n 42 .75 66 12 re f*
.933333 1 .8 rg
n 108 .75 6 12 re f*
BT 1 0 0 1 0 218 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# write_bit) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# write 4 bits to True, wait 2s, write False, restart...) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# uncomment this line to see debug message) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (#c.debug\(True\)) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# define modbus server host, port) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (host) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
 
endstream
endobj
163 0 obj
<< /Length 17837 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 300.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 486 re B*
Q
q
.933333 1 .8 rg
n 0 468.75 6 12 re f*
.933333 1 .8 rg
n 6 468.75 6 12 re f*
.933333 1 .8 rg
n 12 468.75 24 12 re f*
.933333 1 .8 rg
n 36 468.75 6 12 re f*
.933333 1 .8 rg
n 42 468.75 66 12 re f*
.933333 1 .8 rg
n 108 468.75 6 12 re f*
.933333 1 .8 rg
n 0 444.75 36 12 re f*
.933333 1 .8 rg
n 42 444.75 6 12 re f*
.933333 1 .8 rg
n 54 444.75 24 12 re f*
.933333 1 .8 rg
n 0 420.75 30 12 re f*
.933333 1 .8 rg
n 36 420.75 24 12 re f*
.933333 1 .8 rg
n 60 420.75 6 12 re f*
.933333 1 .8 rg
n 24 408.75 198 12 re f*
.933333 1 .8 rg
n 24 396.75 12 12 re f*
.933333 1 .8 rg
n 42 396.75 18 12 re f*
.933333 1 .8 rg
n 66 396.75 6 12 re f*
.933333 1 .8 rg
n 72 396.75 6 12 re f*
.933333 1 .8 rg
n 78 396.75 42 12 re f*
.933333 1 .8 rg
n 120 396.75 18 12 re f*
.933333 1 .8 rg
n 48 384.75 12 12 re f*
.933333 1 .8 rg
n 66 384.75 18 12 re f*
.933333 1 .8 rg
n 90 384.75 6 12 re f*
.933333 1 .8 rg
n 96 384.75 6 12 re f*
.933333 1 .8 rg
n 102 384.75 24 12 re f*
.933333 1 .8 rg
n 126 384.75 18 12 re f*
.933333 1 .8 rg
n 72 372.75 30 12 re f*
.933333 1 .8 rg
n 102 372.75 6 12 re f*
1 .941176 .941176 rg
n 108 372.75 138 12 re f*
.933333 1 .8 rg
n 246 372.75 6 12 re f*
.933333 1 .8 rg
n 252 372.75 66 12 re f*
.933333 1 .8 rg
n 318 372.75 6 12 re f*
1 .941176 .941176 rg
n 324 372.75 18 12 re f*
.933333 1 .8 rg
n 342 372.75 6 12 re f*
.933333 1 .8 rg
n 348 372.75 18 12 re f*
.933333 1 .8 rg
n 366 372.75 6 12 re f*
.933333 1 .8 rg
n 372 372.75 66 12 re f*
.933333 1 .8 rg
n 438 372.75 12 12 re f*
.933333 1 .8 rg
n 24 348.75 318 12 re f*
.933333 1 .8 rg
n 24 336.75 12 12 re f*
.933333 1 .8 rg
n 42 336.75 6 12 re f*
.933333 1 .8 rg
n 48 336.75 6 12 re f*
.933333 1 .8 rg
n 54 336.75 42 12 re f*
.933333 1 .8 rg
n 96 336.75 18 12 re f*
.933333 1 .8 rg
n 48 324.75 234 12 re f*
.933333 1 .8 rg
n 48 312.75 30 12 re f*
.933333 1 .8 rg
n 78 312.75 6 12 re f*
1 .941176 .941176 rg
n 84 312.75 12 12 re f*
.933333 1 .8 rg
n 96 312.75 6 12 re f*
.933333 1 .8 rg
n 48 300.75 30 12 re f*
.933333 1 .8 rg
n 78 300.75 6 12 re f*
1 .941176 .941176 rg
n 84 300.75 72 12 re f*
.933333 1 .8 rg
n 156 300.75 6 12 re f*
.933333 1 .8 rg
n 48 288.75 30 12 re f*
.933333 1 .8 rg
n 78 288.75 6 12 re f*
1 .941176 .941176 rg
n 84 288.75 72 12 re f*
.933333 1 .8 rg
n 156 288.75 6 12 re f*
.933333 1 .8 rg
n 48 276.75 30 12 re f*
.933333 1 .8 rg
n 78 276.75 6 12 re f*
1 .941176 .941176 rg
n 84 276.75 12 12 re f*
.933333 1 .8 rg
n 96 276.75 6 12 re f*
.933333 1 .8 rg
n 48 264.75 18 12 re f*
.933333 1 .8 rg
n 72 264.75 24 12 re f*
.933333 1 .8 rg
n 102 264.75 12 12 re f*
.933333 1 .8 rg
n 120 264.75 30 12 re f*
.933333 1 .8 rg
n 150 264.75 6 12 re f*
.933333 1 .8 rg
n 156 264.75 6 12 re f*
.933333 1 .8 rg
n 162 264.75 12 12 re f*
.933333 1 .8 rg
n 72 252.75 30 12 re f*
.933333 1 .8 rg
n 108 252.75 6 12 re f*
.933333 1 .8 rg
n 120 252.75 6 12 re f*
.933333 1 .8 rg
n 126 252.75 6 12 re f*
.933333 1 .8 rg
n 132 252.75 102 12 re f*
.933333 1 .8 rg
n 234 252.75 6 12 re f*
.933333 1 .8 rg
n 240 252.75 24 12 re f*
.933333 1 .8 rg
n 264 252.75 6 12 re f*
.933333 1 .8 rg
n 276 252.75 36 12 re f*
.933333 1 .8 rg
n 312 252.75 6 12 re f*
.933333 1 .8 rg
n 72 240.75 12 12 re f*
.933333 1 .8 rg
n 90 240.75 30 12 re f*
.933333 1 .8 rg
n 120 240.75 6 12 re f*
.933333 1 .8 rg
n 96 228.75 30 12 re f*
.933333 1 .8 rg
n 126 228.75 6 12 re f*
1 .941176 .941176 rg
n 132 228.75 42 12 re f*
.933333 1 .8 rg
n 180 228.75 6 12 re f*
.933333 1 .8 rg
n 192 228.75 18 12 re f*
.933333 1 .8 rg
n 210 228.75 6 12 re f*
.933333 1 .8 rg
n 216 228.75 24 12 re f*
.933333 1 .8 rg
n 240 228.75 6 12 re f*
.933333 1 .8 rg
n 252 228.75 6 12 re f*
1 .941176 .941176 rg
n 264 228.75 78 12 re f*
.933333 1 .8 rg
n 348 228.75 6 12 re f*
.933333 1 .8 rg
n 360 228.75 18 12 re f*
.933333 1 .8 rg
n 378 228.75 6 12 re f*
.933333 1 .8 rg
n 384 228.75 36 12 re f*
.933333 1 .8 rg
n 420 228.75 12 12 re f*
.933333 1 .8 rg
n 72 216.75 24 12 re f*
.933333 1 .8 rg
n 96 216.75 6 12 re f*
.933333 1 .8 rg
n 96 204.75 30 12 re f*
.933333 1 .8 rg
n 126 204.75 6 12 re f*
1 .941176 .941176 rg
n 132 204.75 42 12 re f*
.933333 1 .8 rg
n 180 204.75 6 12 re f*
.933333 1 .8 rg
n 192 204.75 18 12 re f*
.933333 1 .8 rg
n 210 204.75 6 12 re f*
.933333 1 .8 rg
n 216 204.75 24 12 re f*
.933333 1 .8 rg
n 240 204.75 6 12 re f*
.933333 1 .8 rg
n 252 204.75 6 12 re f*
1 .941176 .941176 rg
n 264 204.75 120 12 re f*
.933333 1 .8 rg
n 390 204.75 6 12 re f*
.933333 1 .8 rg
n 402 204.75 18 12 re f*
.933333 1 .8 rg
n 420 204.75 6 12 re f*
.933333 1 .8 rg
n 426 204.75 36 12 re f*
.933333 1 .8 rg
n 462 204.75 12 12 re f*
.933333 1 .8 rg
n 72 192.75 24 12 re f*
.933333 1 .8 rg
n 96 192.75 6 12 re f*
.933333 1 .8 rg
n 102 192.75 30 12 re f*
.933333 1 .8 rg
n 132 192.75 6 12 re f*
.933333 1 .8 rg
n 138 192.75 18 12 re f*
.933333 1 .8 rg
n 156 192.75 6 12 re f*
.933333 1 .8 rg
n 48 168.75 24 12 re f*
.933333 1 .8 rg
n 72 168.75 6 12 re f*
.933333 1 .8 rg
n 78 168.75 30 12 re f*
.933333 1 .8 rg
n 108 168.75 6 12 re f*
.933333 1 .8 rg
n 114 168.75 6 12 re f*
.933333 1 .8 rg
n 120 168.75 6 12 re f*
.933333 1 .8 rg
n 48 144.75 30 12 re f*
.933333 1 .8 rg
n 78 144.75 6 12 re f*
1 .941176 .941176 rg
n 84 144.75 12 12 re f*
.933333 1 .8 rg
n 96 144.75 6 12 re f*
.933333 1 .8 rg
n 48 132.75 30 12 re f*
.933333 1 .8 rg
n 78 132.75 6 12 re f*
1 .941176 .941176 rg
n 84 132.75 66 12 re f*
.933333 1 .8 rg
n 150 132.75 6 12 re f*
.933333 1 .8 rg
n 48 120.75 30 12 re f*
.933333 1 .8 rg
n 78 120.75 6 12 re f*
1 .941176 .941176 rg
n 84 120.75 66 12 re f*
.933333 1 .8 rg
n 150 120.75 6 12 re f*
.933333 1 .8 rg
n 48 108.75 30 12 re f*
.933333 1 .8 rg
n 78 108.75 6 12 re f*
1 .941176 .941176 rg
n 84 108.75 12 12 re f*
.933333 1 .8 rg
n 96 108.75 6 12 re f*
.933333 1 .8 rg
n 48 96.75 24 12 re f*
.933333 1 .8 rg
n 78 96.75 6 12 re f*
.933333 1 .8 rg
n 90 96.75 6 12 re f*
.933333 1 .8 rg
n 96 96.75 6 12 re f*
.933333 1 .8 rg
n 102 96.75 60 12 re f*
.933333 1 .8 rg
n 162 96.75 6 12 re f*
.933333 1 .8 rg
n 168 96.75 6 12 re f*
.933333 1 .8 rg
n 174 96.75 6 12 re f*
.933333 1 .8 rg
n 186 96.75 6 12 re f*
.933333 1 .8 rg
n 192 96.75 6 12 re f*
.933333 1 .8 rg
n 48 84.75 12 12 re f*
.933333 1 .8 rg
n 66 84.75 24 12 re f*
.933333 1 .8 rg
n 90 84.75 6 12 re f*
.933333 1 .8 rg
n 72 72.75 30 12 re f*
.933333 1 .8 rg
n 102 72.75 6 12 re f*
1 .941176 .941176 rg
n 108 72.75 96 12 re f*
.933333 1 .8 rg
n 204 72.75 6 12 re f*
.933333 1 .8 rg
n 210 72.75 18 12 re f*
.933333 1 .8 rg
n 228 72.75 6 12 re f*
.933333 1 .8 rg
n 234 72.75 24 12 re f*
.933333 1 .8 rg
n 258 72.75 12 12 re f*
.933333 1 .8 rg
n 48 60.75 24 12 re f*
.933333 1 .8 rg
n 72 60.75 6 12 re f*
.933333 1 .8 rg
n 72 48.75 30 12 re f*
.933333 1 .8 rg
n 102 48.75 6 12 re f*
1 .941176 .941176 rg
n 108 48.75 96 12 re f*
.933333 1 .8 rg
n 204 48.75 6 12 re f*
.933333 1 .8 rg
n 24 24.75 36 12 re f*
.933333 1 .8 rg
n 66 24.75 6 12 re f*
.933333 1 .8 rg
n 78 24.75 18 12 re f*
.933333 1 .8 rg
n 102 24.75 36 12 re f*
.933333 1 .8 rg
n 24 12.75 180 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 470 Tm 12 TL /F4 10 Tf 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (port) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* 0 0 0 rg (toggle) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# open or reconnect TCP to server) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to connect to ") Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (SERVER_HOST) Tj .188235 .188235 .188235 rg (+) Tj .729412 .129412 .129412 rg (":") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if open\(\) is ok, write coils \(modbus function 0x01\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# write 4 bits in modbus address 0 to 3) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("write bits") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("----------") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (for) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (addr) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (in) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F4 10 Tf 0 0 0 rg (\):) Tj 0 0 0 rg  T* (            ) Tj 0 0 0 rg (is_ok) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write_single_coil) Tj 0 0 0 rg (\() Tj 0 0 0 rg (addr) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (toggle) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (is_ok) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (                ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bit #") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (addr) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (": write to ") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (toggle) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (                ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bit #") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (addr) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (": unable to write ") Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (toggle) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (            ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf .376471 0 .878431 rg (0.5) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* (        ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("read bits") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("---------") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_coils) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (4) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (bits) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("bits #0 to 3: ") Tj .188235 .188235 .188235 rg (+) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bits) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (else) Tj /F4 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("unable to read") Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* (    ) Tj 0 0 0 rg (toggle) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (toggle) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# sleep 2s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (2) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 267.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 198 re B*
Q
q
.933333 1 .8 rg
n 0 180.75 126 12 re f*
.933333 1 .8 rg
n 0 168.75 138 12 re f*
.933333 1 .8 rg
n 0 144.75 90 12 re f*
.933333 1 .8 rg
n 0 132.75 444 12 re f*
.933333 1 .8 rg
n 0 120.75 108 12 re f*
.933333 1 .8 rg
n 0 96.75 36 12 re f*
.933333 1 .8 rg
n 42 96.75 24 12 re f*
.933333 1 .8 rg
n 0 84.75 24 12 re f*
.933333 1 .8 rg
n 30 84.75 54 12 re f*
.933333 1 .8 rg
n 90 84.75 36 12 re f*
.933333 1 .8 rg
n 132 84.75 36 12 re f*
.933333 1 .8 rg
n 168 84.75 6 12 re f*
.933333 1 .8 rg
n 180 84.75 24 12 re f*
.933333 1 .8 rg
n 0 72.75 24 12 re f*
.933333 1 .8 rg
n 30 72.75 108 12 re f*
.933333 1 .8 rg
n 144 72.75 36 12 re f*
.933333 1 .8 rg
n 186 72.75 72 12 re f*
.933333 1 .8 rg
n 0 48.75 66 12 re f*
.933333 1 .8 rg
n 72 48.75 6 12 re f*
1 .941176 .941176 rg
n 84 48.75 66 12 re f*
.933333 1 .8 rg
n 0 36.75 66 12 re f*
.933333 1 .8 rg
n 72 36.75 6 12 re f*
.933333 1 .8 rg
n 84 36.75 18 12 re f*
.933333 1 .8 rg
n 0 12.75 72 12 re f*
.933333 1 .8 rg
n 0 .75 24 12 re f*
.933333 1 .8 rg
n 30 .75 6 12 re f*
.933333 1 .8 rg
n 42 .75 12 12 re f*
BT 1 0 0 1 0 182 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (#!/usr/bin/env python) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# -*- coding: utf-8 -*-) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# modbus_thread) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# start a thread for polling a set of registers, display result on console) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# exit with ctrl+c) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (time) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (threading) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (Thread) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (Lock) Tj 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (from) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf .054902 .517647 .709804 rg (pyModbusTCP.client) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg  T*  T* 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("localhost") Tj 0 0 0 rg  T* 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 .815686 rg (502) Tj /F4 10 Tf 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# set global) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (regs) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ([]) Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (10) Tj T* ET
Q
Q
 
endstream
endobj
164 0 obj
<< /Length 10579 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 360.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 426 re B*
Q
q
.933333 1 .8 rg
n 0 396.75 120 12 re f*
.933333 1 .8 rg
n 0 384.75 54 12 re f*
.933333 1 .8 rg
n 60 384.75 6 12 re f*
.933333 1 .8 rg
n 72 384.75 24 12 re f*
.933333 1 .8 rg
n 96 384.75 12 12 re f*
.933333 1 .8 rg
n 0 360.75 138 12 re f*
.933333 1 .8 rg
n 0 348.75 18 12 re f*
.933333 1 .8 rg
n 24 348.75 84 12 re f*
.933333 1 .8 rg
n 108 348.75 18 12 re f*
.933333 1 .8 rg
n 24 336.75 36 12 re f*
.933333 1 .8 rg
n 66 336.75 24 12 re f*
.933333 1 .8 rg
n 24 324.75 6 12 re f*
.933333 1 .8 rg
n 36 324.75 6 12 re f*
.933333 1 .8 rg
n 48 324.75 72 12 re f*
.933333 1 .8 rg
n 120 324.75 6 12 re f*
.933333 1 .8 rg
n 126 324.75 24 12 re f*
.933333 1 .8 rg
n 150 324.75 6 12 re f*
.933333 1 .8 rg
n 156 324.75 66 12 re f*
.933333 1 .8 rg
n 222 324.75 6 12 re f*
.933333 1 .8 rg
n 234 324.75 24 12 re f*
.933333 1 .8 rg
n 258 324.75 6 12 re f*
.933333 1 .8 rg
n 264 324.75 66 12 re f*
.933333 1 .8 rg
n 330 324.75 6 12 re f*
.933333 1 .8 rg
n 24 312.75 84 12 re f*
.933333 1 .8 rg
n 24 300.75 30 12 re f*
.933333 1 .8 rg
n 60 300.75 24 12 re f*
.933333 1 .8 rg
n 84 300.75 6 12 re f*
.933333 1 .8 rg
n 48 288.75 90 12 re f*
.933333 1 .8 rg
n 48 276.75 12 12 re f*
.933333 1 .8 rg
n 66 276.75 18 12 re f*
.933333 1 .8 rg
n 90 276.75 6 12 re f*
.933333 1 .8 rg
n 96 276.75 6 12 re f*
.933333 1 .8 rg
n 102 276.75 42 12 re f*
.933333 1 .8 rg
n 144 276.75 18 12 re f*
.933333 1 .8 rg
n 72 264.75 6 12 re f*
.933333 1 .8 rg
n 78 264.75 6 12 re f*
.933333 1 .8 rg
n 84 264.75 24 12 re f*
.933333 1 .8 rg
n 108 264.75 12 12 re f*
.933333 1 .8 rg
n 48 252.75 174 12 re f*
.933333 1 .8 rg
n 48 240.75 48 12 re f*
.933333 1 .8 rg
n 102 240.75 6 12 re f*
.933333 1 .8 rg
n 114 240.75 6 12 re f*
.933333 1 .8 rg
n 120 240.75 6 12 re f*
.933333 1 .8 rg
n 126 240.75 132 12 re f*
.933333 1 .8 rg
n 258 240.75 6 12 re f*
.933333 1 .8 rg
n 264 240.75 6 12 re f*
.933333 1 .8 rg
n 270 240.75 6 12 re f*
.933333 1 .8 rg
n 276 240.75 12 12 re f*
.933333 1 .8 rg
n 288 240.75 6 12 re f*
.933333 1 .8 rg
n 48 228.75 432 12 re f*
.933333 1 .8 rg
n 48 216.75 12 12 re f*
.933333 1 .8 rg
n 66 216.75 48 12 re f*
.933333 1 .8 rg
n 114 216.75 6 12 re f*
.933333 1 .8 rg
n 72 204.75 24 12 re f*
.933333 1 .8 rg
n 102 204.75 54 12 re f*
.933333 1 .8 rg
n 156 204.75 6 12 re f*
.933333 1 .8 rg
n 96 192.75 24 12 re f*
.933333 1 .8 rg
n 126 192.75 6 12 re f*
.933333 1 .8 rg
n 138 192.75 48 12 re f*
.933333 1 .8 rg
n 48 180.75 144 12 re f*
.933333 1 .8 rg
n 48 168.75 24 12 re f*
.933333 1 .8 rg
n 72 168.75 6 12 re f*
.933333 1 .8 rg
n 78 168.75 30 12 re f*
.933333 1 .8 rg
n 108 168.75 6 12 re f*
.933333 1 .8 rg
n 114 168.75 6 12 re f*
.933333 1 .8 rg
n 120 168.75 6 12 re f*
.933333 1 .8 rg
n 0 144.75 132 12 re f*
.933333 1 .8 rg
n 0 132.75 12 12 re f*
.933333 1 .8 rg
n 18 132.75 6 12 re f*
.933333 1 .8 rg
n 30 132.75 36 12 re f*
.933333 1 .8 rg
n 66 132.75 6 12 re f*
.933333 1 .8 rg
n 72 132.75 36 12 re f*
.933333 1 .8 rg
n 108 132.75 6 12 re f*
.933333 1 .8 rg
n 114 132.75 84 12 re f*
.933333 1 .8 rg
n 198 132.75 6 12 re f*
.933333 1 .8 rg
n 0 120.75 348 12 re f*
.933333 1 .8 rg
n 0 108.75 12 12 re f*
.933333 1 .8 rg
n 12 108.75 6 12 re f*
.933333 1 .8 rg
n 18 108.75 36 12 re f*
.933333 1 .8 rg
n 60 108.75 6 12 re f*
.933333 1 .8 rg
n 72 108.75 24 12 re f*
.933333 1 .8 rg
n 0 96.75 12 12 re f*
.933333 1 .8 rg
n 12 96.75 6 12 re f*
.933333 1 .8 rg
n 18 96.75 30 12 re f*
.933333 1 .8 rg
n 48 96.75 12 12 re f*
.933333 1 .8 rg
n 0 72.75 186 12 re f*
.933333 1 .8 rg
n 0 60.75 30 12 re f*
.933333 1 .8 rg
n 36 60.75 24 12 re f*
.933333 1 .8 rg
n 60 60.75 6 12 re f*
.933333 1 .8 rg
n 24 48.75 312 12 re f*
.933333 1 .8 rg
n 24 36.75 24 12 re f*
.933333 1 .8 rg
n 54 36.75 54 12 re f*
.933333 1 .8 rg
n 108 36.75 6 12 re f*
.933333 1 .8 rg
n 48 24.75 30 12 re f*
.933333 1 .8 rg
n 78 24.75 6 12 re f*
.933333 1 .8 rg
n 84 24.75 24 12 re f*
.933333 1 .8 rg
n 108 24.75 6 12 re f*
.933333 1 .8 rg
n 24 12.75 132 12 re f*
.933333 1 .8 rg
n 24 .75 24 12 re f*
.933333 1 .8 rg
n 48 .75 6 12 re f*
.933333 1 .8 rg
n 54 .75 30 12 re f*
.933333 1 .8 rg
n 84 .75 6 12 re f*
.933333 1 .8 rg
n 90 .75 6 12 re f*
.933333 1 .8 rg
n 96 .75 6 12 re f*
BT 1 0 0 1 0 410 Tm 12 TL /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# init a thread lock) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (regs_lock) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (Lock) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# modbus polling thread) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (def) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .376471 .690196 rg (polling_thread) Tj /F4 10 Tf 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (global) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (ModbusClient) Tj 0 0 0 rg (\() Tj 0 0 0 rg (host) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (SERVER_HOST) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (port) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (SERVER_PORT) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# polling loop) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# keep TCP open) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 0 rg (not) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (is_open) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (            ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (open) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# do modbus reading on socket) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (reg_list) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_holding_registers) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (0) Tj /F4 10 Tf 0 0 0 rg (,) Tj /F5 10 Tf 0 0 .815686 rg (10) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# if read is ok, store result in regs \(with thread lock synchronization\)) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (if) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (reg_list) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (            ) Tj /F5 10 Tf 0 .501961 0 rg (with) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs_lock) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (                ) Tj 0 0 0 rg (regs) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (reg_list) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# 1s before next polling) Tj /F4 10 Tf 0 0 0 rg  T* (        ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# start polling thread) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (tp) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (Thread) Tj 0 0 0 rg (\() Tj 0 0 0 rg (target) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (polling_thread) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# set daemon: polling thread will exit if main thread exit) Tj /F4 10 Tf 0 0 0 rg  T* 0 0 0 rg (tp) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (daemon) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg  T* 0 0 0 rg (tp) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (start) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (# display loop \(in main thread\)) Tj /F4 10 Tf 0 0 0 rg  T* /F5 10 Tf 0 .501961 0 rg (while) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# print regs list \(with thread lock synchronization\)) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (with) Tj /F4 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (regs_lock) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf 0 .501961 0 rg (print) Tj /F4 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (regs) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj /F6 10 Tf .501961 .501961 .501961 rg (# 1s before next print) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sleep) Tj 0 0 0 rg (\() Tj /F5 10 Tf 0 0 .815686 rg (1) Tj /F4 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 320.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 308.2394 cm
Q
q
1 0 0 1 40.01575 308.2394 cm
Q
q
1 0 0 1 40.01575 296.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 290.2394 cm
Q
q
1 0 0 1 40.01575 278.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 272.2394 cm
Q
q
1 0 0 1 40.01575 260.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F7 10 Tf 12 TL (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 260.2394 cm
Q
q
1 0 0 1 40.01575 260.2394 cm
Q
q
1 0 0 1 40.01575 260.2394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
 
endstream
endobj
165 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
166 0 obj
<< /Length 8835 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Index) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 744.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (_) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 726.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (__init__\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 696.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (A) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 666.2394 cm
q
BT 1 0 0 1 0 14 Tm 29.05961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (auto_close\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 636.2394 cm
q
BT 1 0 0 1 0 14 Tm 30.15961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (auto_open\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 605.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (C) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 587.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (close\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 557.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (D) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 539.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (debug\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 521.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (decode_ieee\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 491.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (E) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 473.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (encode_ieee\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 442.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (G) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 424.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (get_2comp\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 406.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (get_bits_from_int\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 388.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (get_list_2comp\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 358.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (H) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 340.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (host\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 309.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (I) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 291.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (is_open\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 261.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (L) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 231.4394 cm
q
BT 1 0 0 1 0 14 Tm 35.18961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (last_error\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 201.4394 cm
q
BT 1 0 0 1 0 14 Tm 26.83961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (last_except\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 171.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (M) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 153.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient \(class in pyModbusTCP.client\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 135.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (mode\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 104.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (O) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 86.63937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (open\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 56.23937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (P) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 787.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (port\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 769.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.client \(module\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 751.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.utils \(module\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 720.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (R) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 690.6394 cm
q
BT 1 0 0 1 0 14 Tm 31.84961 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (read_coils\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 660.6394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (read_discrete_inputs\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 630.6394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (read_holding_registers\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 600.6394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (read_input_registers\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 570.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (T) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 552.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (timeout\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 521.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (U) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 503.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (unit_id\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 473.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (V) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 455.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (version\(\) \(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 425.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (W) Tj T* ET
Q
Q
q
1 0 0 1 308.9102 407.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (word_list_to_long\(\) \(in module pyModbusTCP.utils\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 377.0394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (write_multiple_registers\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 347.0394 cm
q
BT 1 0 0 1 0 14 Tm 4.069606 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (write_single_coil\(\) \(pyModbusTCP.client.ModbusClient) Tj T* 0 Tw (method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 317.0394 cm
q
BT 1 0 0 1 0 14 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (write_single_register\(\)) Tj T* (\(pyModbusTCP.client.ModbusClient method\)) Tj  T* ET
Q
Q
q
1 0 0 1 308.9102 317.0394 cm
Q
q
1 0 0 1 308.9102 317.0394 cm
Q
 
endstream
endobj
167 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
168 0 obj
<< /Length 846 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 744.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (p) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 726.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (pyModbusTCP) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 708.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.client) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 690.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.utils) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 690.6394 cm
Q
 
endstream
endobj
169 0 obj
<< /Nums [ 0 170 0 R 1 171 0 R 2 172 0 R 3 173 0 R 4 174 0 R 
  5 175 0 R 6 176 0 R 7 177 0 R 8 178 0 R 9 179 0 R 
  10 180 0 R 11 181 0 R 12 182 0 R 13 183 0 R 14 184 0 R 
  15 185 0 R 16 186 0 R 17 187 0 R 18 188 0 R ] >>
endobj
170 0 obj
<< /S /D /St 1 >>
endobj
171 0 obj
<< /S /D /St 2 >>
endobj
172 0 obj
<< /S /r /St 1 >>
endobj
173 0 obj
<< /S /r /St 2 >>
endobj
174 0 obj
<< /S /D /St 1 >>
endobj
175 0 obj
<< /S /D /St 2 >>
endobj
176 0 obj
<< /S /D /St 3 >>
endobj
177 0 obj
<< /S /D /St 4 >>
endobj
178 0 obj
<< /S /D /St 5 >>
endobj
179 0 obj
<< /S /D /St 6 >>
endobj
180 0 obj
<< /S /D /St 7 >>
endobj
181 0 obj
<< /S /D /St 8 >>
endobj
182 0 obj
<< /S /D /St 9 >>
endobj
183 0 obj
<< /S /D /St 10 >>
endobj
184 0 obj
<< /S /D /St 11 >>
endobj
185 0 obj
<< /S /D /St 12 >>
endobj
186 0 obj
<< /S /D /St 13 >>
endobj
187 0 obj
<< /S /D /St 14 >>
endobj
188 0 obj
<< /S /D /St 15 >>
endobj
xref
0 189
0000000000 65535 f
0000000075 00000 n
0000000189 00000 n
0000000299 00000 n
0000000414 00000 n
0000000625 00000 n
0000000836 00000 n
0000001007 00000 n
0000001178 00000 n
0000001349 00000 n
0000001520 00000 n
0000001692 00000 n
0000001864 00000 n
0000002036 00000 n
0000002208 00000 n
0000002380 00000 n
0000002552 00000 n
0000002724 00000 n
0000002896 00000 n
0000003068 00000 n
0000003240 00000 n
0000003412 00000 n
0000003584 00000 n
0000003756 00000 n
0000003928 00000 n
0000004100 00000 n
0000004272 00000 n
0000004444 00000 n
0000004616 00000 n
0000004788 00000 n
0000004960 00000 n
0000005132 00000 n
0000005304 00000 n
0000005476 00000 n
0000005648 00000 n
0000005820 00000 n
0000005992 00000 n
0000006164 00000 n
0000006336 00000 n
0000006508 00000 n
0000006680 00000 n
0000006852 00000 n
0000007024 00000 n
0000007196 00000 n
0000007368 00000 n
0000007541 00000 n
0000007714 00000 n
0000007887 00000 n
0000008060 00000 n
0000008590 00000 n
0000008802 00000 n
0000008925 00000 n
0000047247 00000 n
0000047356 00000 n
0000047470 00000 n
0000047729 00000 n
0000047920 00000 n
0000048092 00000 n
0000048264 00000 n
0000048436 00000 n
0000048608 00000 n
0000048780 00000 n
0000048952 00000 n
0000049124 00000 n
0000049404 00000 n
0000049521 00000 n
0000049724 00000 n
0000049955 00000 n
0000050074 00000 n
0000050195 00000 n
0000050407 00000 n
0000050619 00000 n
0000050831 00000 n
0000051043 00000 n
0000051255 00000 n
0000051467 00000 n
0000051679 00000 n
0000051891 00000 n
0000052103 00000 n
0000052275 00000 n
0000052447 00000 n
0000052619 00000 n
0000052791 00000 n
0000052963 00000 n
0000053135 00000 n
0000053307 00000 n
0000053479 00000 n
0000053651 00000 n
0000053823 00000 n
0000053995 00000 n
0000054167 00000 n
0000054339 00000 n
0000054511 00000 n
0000054683 00000 n
0000054855 00000 n
0000055027 00000 n
0000055199 00000 n
0000055371 00000 n
0000055543 00000 n
0000055715 00000 n
0000055887 00000 n
0000056060 00000 n
0000056233 00000 n
0000056406 00000 n
0000056579 00000 n
0000056752 00000 n
0000056925 00000 n
0000057098 00000 n
0000057271 00000 n
0000057444 00000 n
0000057617 00000 n
0000057790 00000 n
0000057963 00000 n
0000058136 00000 n
0000058309 00000 n
0000058482 00000 n
0000058655 00000 n
0000058828 00000 n
0000059001 00000 n
0000059174 00000 n
0000059347 00000 n
0000059902 00000 n
0000060115 00000 n
0000060288 00000 n
0000060461 00000 n
0000060702 00000 n
0000060815 00000 n
0000061056 00000 n
0000061137 00000 n
0000061326 00000 n
0000061493 00000 n
0000061624 00000 n
0000061759 00000 n
0000061899 00000 n
0000062050 00000 n
0000062221 00000 n
0000062367 00000 n
0000062509 00000 n
0000062706 00000 n
0000062881 00000 n
0000063012 00000 n
0000063144 00000 n
0000063314 00000 n
0000063451 00000 n
0000063597 00000 n
0000063744 00000 n
0000063891 00000 n
0000064031 00000 n
0000064159 00000 n
0000064287 00000 n
0000064484 00000 n
0000065490 00000 n
0000065626 00000 n
0000071497 00000 n
0000071633 00000 n
0000080648 00000 n
0000098600 00000 n
0000115621 00000 n
0000127886 00000 n
0000139913 00000 n
0000153352 00000 n
0000166956 00000 n
0000179208 00000 n
0000191496 00000 n
0000209392 00000 n
0000220030 00000 n
0000220166 00000 n
0000229059 00000 n
0000229195 00000 n
0000230098 00000 n
0000230345 00000 n
0000230383 00000 n
0000230421 00000 n
0000230459 00000 n
0000230497 00000 n
0000230535 00000 n
0000230573 00000 n
0000230611 00000 n
0000230649 00000 n
0000230687 00000 n
0000230725 00000 n
0000230763 00000 n
0000230801 00000 n
0000230839 00000 n
0000230878 00000 n
0000230917 00000 n
0000230956 00000 n
0000230995 00000 n
0000231034 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(-\270/\215\023\374\232\255\017j\310\301DYu\363) (-\270/\215\023\374\232\255\017j\310\301DYu\363)]
 /Info 126 0 R /Root 125 0 R /Size 189 >>
startxref
231073
%%EOF
