%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 54 0 R /F4 57 0 R /F5 60 0 R /F6 72 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /Contents 116 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
5 0 obj
<< /Contents 117 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
6 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.0394 251.3057 766.0394 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot >>
endobj
8 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.0394 135.0457 748.0394 ] /Subtype /Link /Type /Annot >>
endobj
9 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 80.01575 718.0394 190.0657 730.0394 ] /Subtype /Link /Type /Annot >>
endobj
11 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot >>
endobj
12 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 519.8594 0 ] /Rect [ 80.01575 700.0394 146.1657 712.0394 ] /Subtype /Link /Type /Annot >>
endobj
13 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 519.8594 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot >>
endobj
14 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 315.4594 0 ] /Rect [ 80.01575 682.0394 159.4857 694.0394 ] /Subtype /Link /Type /Annot >>
endobj
15 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 315.4594 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot >>
endobj
16 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 99.05937 0 ] /Rect [ 80.01575 664.0394 223.3957 676.0394 ] /Subtype /Link /Type /Annot >>
endobj
17 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 99.05937 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot >>
endobj
18 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 515.8394 0 ] /Rect [ 80.01575 646.0394 308.4457 658.0394 ] /Subtype /Link /Type /Annot >>
endobj
19 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 515.8394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot >>
endobj
20 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 628.0394 202.2957 640.0394 ] /Subtype /Link /Type /Annot >>
endobj
21 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot >>
endobj
22 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 541.0394 0 ] /Rect [ 80.01575 610.0394 240.0857 622.0394 ] /Subtype /Link /Type /Annot >>
endobj
23 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 541.0394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot >>
endobj
24 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 716.2394 0 ] /Rect [ 60.01575 592.0394 235.0857 604.0394 ] /Subtype /Link /Type /Annot >>
endobj
25 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 716.2394 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot >>
endobj
26 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 663.0394 0 ] /Rect [ 80.01575 574.0394 207.8357 586.0394 ] /Subtype /Link /Type /Annot >>
endobj
27 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 663.0394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot >>
endobj
28 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 612.2394 0 ] /Rect [ 100.0157 556.0394 281.7357 568.0394 ] /Subtype /Link /Type /Annot >>
endobj
29 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 612.2394 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot >>
endobj
30 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 450.0394 0 ] /Rect [ 80.01575 538.0394 212.2757 550.0394 ] /Subtype /Link /Type /Annot >>
endobj
31 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 450.0394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot >>
endobj
32 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 399.2394 0 ] /Rect [ 100.0157 520.0394 285.6257 532.0394 ] /Subtype /Link /Type /Annot >>
endobj
33 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 399.2394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot >>
endobj
34 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 149.8394 0 ] /Rect [ 80.01575 502.0394 202.2757 514.0394 ] /Subtype /Link /Type /Annot >>
endobj
35 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 149.8394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot >>
endobj
36 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 414.0394 0 ] /Rect [ 60.01575 484.0394 171.7157 496.0394 ] /Subtype /Link /Type /Annot >>
endobj
37 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 414.0394 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot >>
endobj
38 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 466.0394 215.0557 478.0394 ] /Subtype /Link /Type /Annot >>
endobj
39 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 544.1398 466.7894 555.2598 478.7894 ] /Subtype /Link /Type /Annot >>
endobj
40 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 448.0394 192.2757 460.0394 ] /Subtype /Link /Type /Annot >>
endobj
41 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 544.1398 448.7894 555.2598 460.7894 ] /Subtype /Link /Type /Annot >>
endobj
42 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 430.0394 193.3757 442.0394 ] /Subtype /Link /Type /Annot >>
endobj
43 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 544.1398 430.7894 555.2598 442.7894 ] /Subtype /Link /Type /Annot >>
endobj
44 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 80.01575 412.0394 262.8757 424.0394 ] /Subtype /Link /Type /Annot >>
endobj
45 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 544.1398 412.7894 555.2598 424.7894 ] /Subtype /Link /Type /Annot >>
endobj
46 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 394.0394 221.1657 406.0394 ] /Subtype /Link /Type /Annot >>
endobj
47 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 544.1398 394.7894 555.2598 406.7894 ] /Subtype /Link /Type /Annot >>
endobj
48 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 537.4394 0 ] /Rect [ 40.01575 376.0394 126.7157 388.0394 ] /Subtype /Link /Type /Annot >>
endobj
49 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 537.4394 0 ] /Rect [ 544.1398 376.7894 555.2598 388.7894 ] /Subtype /Link /Type /Annot >>
endobj
50 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 40.01575 358.0394 140.5857 370.0394 ] /Subtype /Link /Type /Annot >>
endobj
51 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 544.1398 358.7894 555.2598 370.7894 ] /Subtype /Link /Type /Annot >>
endobj
52 0 obj
<< /Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 
  46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R ] /Contents 118 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
53 0 obj
<< /Contents 119 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
54 0 obj
<< /BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
55 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 251 /Length 42965 /SMask 56 0 R 
  /Subtype /Image /Type /XObject /Width 1007 >>
stream
Gb"-VG?e'JfEZBh7KcQk'L]n@DT%6BXl@8r8#t4S-X%2h%b/'[h6S`h@U6M<^oa`5\3Wu^LaX_Y144STpMJb$E07q-_XI@,T-P[@:N"I&cHWo_If)`)6psF26psF26psF26psF26psF26psF2Uh$Z9^OGnC=[YZrPq,og?+P.Ce>YfUG449.oNqh6*gD/kKaS^dWZ*m7?jj6EYmC^CU-B2$&J5V;)N0N36[!nEfJ2ID99q,s4F-METgQG7ldhe!Md!N'PpoYOaiVZQdaHe#==\`#=BH7c:nVLLU6R3.W`QC\0>IG5[r:/$UINLs2/CaB<BGEm4FR'JA7T4[@\W'l779O36mTS&[r4W$6[.nL0miW\+[_"^qWk=Ue4Z)YBjtNqT3#6"=VWSr]LnG=%3%3AhnK&>!<^?%*BS,l[&$E^"pP8UgHTZ8_"$I*03u/2ldi1oLkl9H*lQ4;\3U$f;c6NSru2Ub'Cj2pX&gr\]QiYeTj>9R@@McGq<*>5$`6[i3b$$`SiqG/C=T=ZSN>lUQS2URYc4V$I!GJYk:^&JCu`Np]6<R&B$;)[KoKJmaiVZ!Ft=4;&J:-<`Q-"Dfj;@<or(`_g9k]t[;+4n"U`?A@66P4jQb!Y2=&kthh2:L<ioQ5GOJjKf?^'R:J4=o*IB+G',..8U<]8hZ[M`EH1U1oqtkU*gpqn4qQ@!(k2tgSLXOZ#F)l<$>IQ6)!`Psi_3j?Ph7KYcWM3lM+sJ3TqNBq#jNu9#FmIV<(bl(@HI8HUF`__eh\mCOQ75`:Nsm'l(ch)g?+[7H^]+62HdV@5=`ecX\T?plDVR3cd\Q<e]@X#\a3i:3>?`%n^t@;L;Pcu+4*I,TFmADN],s1^,W]$O+sJ5*O,kAI%LrsY#RIA1YF[Q_78H\iBtUpap[I.Z!s8WY?+Q8iB:(%m-&%&,"U,'<(L`qDcUd<6XfX2Ci^)ooMulD&8OPs77(GWV8db.\R58J"(U^WW6scmsY@"8,V;An4042Hkb*=J!5(!n^UIon3qXosq8#B"Mf"-!>7n6'`EfRK4F8,+Yf</E&KD%]$6q!hm@:<TNB?tJHXBFDmH)8tSgU(ZNJ,]@ekK[euKUJ>E*?Dh+c^qCOa*N&X)B'MdM1*^A4Z@30&/,^%3]\H/+sKod.4H\h+X+aY%kgq_'Tu.2F7X_Nl:mg1p!T[04JO\o,U=XCLLUj)59mGbe^\e`Esi6Z\:4Cfkg5-ALknSb,UXu.g9mte]6;UgGZRtuOX!Af4aWJ$Hqo"Zk092D><6roQnMf1Hj_5nQ5hVg"LECu+sJ6-S1@[Dr:\l`2E!JIg=irLeXAXJG!n`Okb)t.Pa%CG-Vb'j3n2!^!Em+J]DMO%o/Qo.LkpkC,`.A7.oraM:n[r2`F?fDN?:CahS"91K;/!9;cA_s3RXm*-SmP7!s=06D;(LAG><6V6psF2,YW#jm$&qtCi+$O*$S#a#mjJRX#6$P[r:0,?G5(Kh&V,$:J]<-4*P]L'G1oh;6GM(d,3a<bfhVVhRpa\%=A$JZ07#-],a+bgtURf>?e^]l-_Y:ljt0I&J5TeA\5=V[+23YgY(7_>$B4=1#pNJ2khN@Kj;BA]j86n8EoHjX*<sb2::@o&J5UPG.DniAsFiGFEMa'o]bu,`=()POOBX_IG3N5>u+77d%E[0q4EJ!Le.-=?bbIAbcGR0WhH,[U15A.92/,d[;(t\Kghh1Q,:GV7>F5u6psGcn_qB@hS"8OCMOG%4?+c=8TZrFld`%;ZJ2Qi^D7ZC&4kiDbTitI/:&Ka+sIJHm(I]9k%84;gU:r4*QuL:HhV^JdREJcUIUAWI);j]Vkj@dkgAG_l-nP(jnJ6$:RjDL>.&*+3]bC)aj[.`p[n+-e^[Y^B#H-(!4QdtZ;mo(_/2P,6elX'Fi=gFIIcI@a%m)[03PTVDV_mK]MYFn/R#Lu0OV\\.8tVBIIZ3VO:XO1-VKZX&K=((gq!#@s88X:K]sa/-MH`T$_Mk'\ogX&3"Z`7&`og+h7D^iPNU/X1SP!I57%W&;S(_lC"&%@D;2M$Z*?%_RtZ^VfWq?M-!pK=;f6MbAL6/5d-f`%J,%uXGOOB[GGXW19"/;>@YtsT*YB!(s8Mt;jiSb$7rg46n!TW5\p!IE`.7e>4W.J>C[lf:m^$QPIf/_+I=;&--Vc'2A4FIk%F`eT4*9[_G&3\)Lkpk-5[[umNfFUt;:0sm#BJN:2/6f?CYu[D8,i$+:S-(>?QZ7fQBQ:`f.+'HH!@^nft2I3m&k^k%tFNIa5;CHNCRf%D;W'US*m])NZJ#YQX;rNg2#<CiK5H]ROB4f7Mo(2Dr9F*gA:X:kLm+g+sJ3Tb#WH;]ZHKnT9#%okWmQ`"re6jKYRK_pQpAWgph@Y[r5?UA3N1@4ukW+FuN\nrr2lnq=Ee0_'Ma?AGYl3rqbr%YJh;'NGB4=1/li>K7egCVZ@tc+sKo0F6:\$2`I'f+]MUmdaHF23TKGklfdR-i5(&cN>l)(=LbuT9/B&gXBB%DA:ud^o&Rnj)SCOtH@:5?eZ2bE0?:is3:]`V'9h)$=R!YtUnm;+X/DbhA5'jI^OA=fkg8;+L]@)&DdHaVpacBEdA'5+ldsJ?h]L/n<2`X)AH)Gulh0Sq7sHn,ei\H]4<@#D/^<n'mC9[9R58KumXG)@CcgK?g7#IYG/e\"dj=)%ZtWH$pap9oVgIgi_h[af51_a[ngmtPC6a@$JMaF"LkpkCe4?,kFZO[1PT<stb.VTB/h(:#dYf)O>5(oj:[dGjRs4uI<;\6t/51Bh]mKKWZtLV0\Wf,#Qn\\%VG3O,4h,Ll7Qg5r_\%$ee'?7a!<E5Lh<3+Vj0"T0'*]nbWMt%+f'V8'ZSYB>4?QkM=#XD?5A\uVK*Mo2J]GP,C$k<B\+-Yr7>o='L&>3m(DeSP.qsX\RlAYQ7jVY#?bUo54=H[urrmWcK#c`+M2Bp"I630>QBmih3F@2CQG%eJ*Zoe*o&\R!(.:PY7$J^nXfWBl>aTro7p_)><4:B>m+J^b[qF$Y+$Z=PM,_6:p[6JE-;9eWjBqUI.<@s:DJEoiW)0/u+$SVcQ^=%\]KKOUn*f]u>;8S[(`8'!r;?InX]gDto#p/g+\B/>m3F#*8pBIBR=i+L8Enttr[r@4DWA'2Ui?"le[W-!FItU(1B56&5N'A6Lkr8&0s,q6k9,u/^A=-s.B#^q)M85'b3jHs+sJ3TjYAYL>dJ$:p2*$"8rUCsGH4`E-J][r@">u*rhDuEdaHS/e>\XLg:?Q1\@lnB`de!`Vg%UdR;THVmFo'#Ir=NLqtKW:LPJC#<ip<c5!D0ZOO@tn1,9Jdh;-mCr_*7YQ7Z;p`5#Y;2n-,+cY!+))3ak[IJVkfq3,>R-f\u`5f8<c]6<S1_f&.86psEMEc>ub11a)OD*M;ur;QYAh"C7/P3tMYn3BcFDoe"`kKfbB3HCqn$Y?NQF6ARl[W[oc<P!DCIf9-99K.l\5e7itdc-RP)`Op!WD^<[p0UAQV=9p4Dk?K+l0]aq\om>u&RA\u'e<=\qpZJsnuZ-*i^&'Ds0(cB6-4MB11eo$Ij-'\,#WjVg9j9pS:0-fQNKHuoE]Xg:7N_ZUe@%,AnGWq4*J8`pTEl!P`ukE%=b4ddb1B))`EpDTgX_Mns^'o#f,8q;l@bZ\UF@`1_]$7T7=k?<NB/3)H+Qh?+/lhWD]SRQa1gUEl)*rT"HWR%3%4`5s%.iq2^KtA5()7@'sb"o&e2dEV;KN6?_($VQ\6^;,L1-0(%>u-R[f9LkpkC'SdA4M-P4/@oOX`bHeJp=Y#ZrKS0K]'5lU8JLAsM?!I;.:S'\25Fa?3?Ssf&=S;lEH[@k!gJ3-D]W8(`*gF@Va2c6<_]q0%q8.gn]"5KKoB/>_n0"<PjN%pSF*"uP4?WQ%^DZplQS1RP8u2@XmH`lqQ("/!].I6qP`DRb_k0/C^3"Y"IJ``sZfK;r002/jj/8qA+[</:]t/U\Dr8:J1E@GTdd7C#08^GmJfm!jhCP3!J?TV]]mB>_V">YkU/;e8S#qDR).IAs.m%a$LkpkCe:i"_\8'Qoo(1Cs84r$2/6VQ'P:9G-]RKf?h/hl4XXcVSJ&dQihVR,;Q')V!4tHm5dn`2",D,75Y=ke*8nY/q5(-U\eXJL9r;?JSMYm8Hil:H%s";Ji:RjE'l04$E*_Gqtn`+W$GOOD@1,aC@d%P'rRf3$AO4Y.%q&(u#aS*OMqtKF+WFKCH;Pd!NbEjm6XBDksLCP7]CqsZQek!uhW<!)*1iM7K_1Muui:l]thk`s^.D4WWLWdPu"Z^S^`!R5/?jKT;CtZsr.q9g0F[=?G5Ms2'Hg.p_7Z=j%nY-Z2LsHA:%5fgn^h>#!hM[2GLkq9J/1_2YlbJ&RZX`$&]dcrY;Ne)]X8E:(P[cD[.TWWQX]i-.+!ZStLknSBD:u3`7n4pg:4`=X1-^9fI%GX57!*Nmq=<X<S=D@;P>=S76q$<Oc'gN$]"1-+r,]mDR4?)!c;&hZH'r0_Nk)a4(+WFe5_/ti?G'+o44:UJGk!!+pnC387Rfk)NeN:FLkq;Rq!mCQ[^OK,c<%/R;1*.thnJdTo93d:GOF6Hh<aZYp[4:p;$-3OmW$AMJUrBl`l</de9Uo_WT[H?LkpjXBq@G4;S.*hA9qb*N-Y0cS`k#`a_onDdBI%H?!Z7m'..[i4:r/;Olf51:7aIeVM0^mTgFIaY$EQ[XA8'Kji`uS5!Ji>q@tM]$jd4P*=`Yn&J8TLkKfdpm+G<==4b^AD=co7ZA%:0mGP#b4*I]jQ'I>gc(BLbaTM*%6psGR`0DiS>.8C/PhsO(C#6LJS9Uf8mbGA%Vb\CE@q0:il[XM9\@=NG&J5Te&Q):2%hJ-\YFgZ.M5@%[s8MuCT0Fti,5RIUKS0dR2Df0u84Q1J=Ku<C(G=c(r^9.B7(M*2(GDX\SQ`UHBe:ngr1,TS8lScSkb./>V5:#BKS9!ag!dgT6;LC\8WtK*[r1=*-mBiZ,*E`X(,gR8nGN+R,HH$.E<umV\9-sJc]](i3B7s;]T8+LiPL;FDZjQ&XuT'A6psFMOHbtD*$!b/7h6OX)s!)LM\[<iB[D;4#<8nNB1,0W/QoBTC"&sAk2tCOg6F-f)E2P=BP=@.\;5rsLe+)4VP]qJHZnJkO_)\"5ut1mYOCH/0l#4:6\c.kWjZq2If+HH\oeiT'e`l5]38!+%tC^`XkU='*u#F]o&WNl!>5tV&WmuYo&Rphp$956mr!&^04gV1C=F(_GVE%BgUD*B.aIc\84Y^]k02VkF$"R3kj7Yp?#!bT:pXcY0k83C5(*/$oB3`/mIKrCX]Vj&NfK.&Y&<@DQ%oef[Vt';[r:/]Nh(u^LksPPChtYcp7Hj63DZ5/83>"Z.FY%^O1p&>,/_p^f>f+]oB*/Z\*f%a,;sDmFR@eiUnf9`+fcUL_iTtAV+[0Km+J^3KaQ85G:P2E"q;InJcETJ*H0fI_1.4N+7A:RVQHsP>p',kn_j<=mrS8&&.oKdOh-@-N(!7$mHnau@"96F_o$!Le>[Z[gl[(]@Ue?moB-o@=O=U"B,;@#.7Zg]?b1@Deu`-]"9\i2"bh\ck-k*Z:S0g6Fm@J^A]k8g*pi"MAS5YRong5i\Yl@'YHRE7N>odQ_nUE%c_!GBrq,aN5s?t#4sEYdnO7!/#9b98+sQ[m()DWM>WN@2C2/W:4tn\[eZ2d/o%Kn8UaoNL+B':<C=H$DrT*>3N)>+ia4f1u<3KX,f3a"J1M4k2<NAlb3.Ym(+X&#@5>JY5q=5hTf:G-Pk0K\"gMahaDr/-#R5-*9-IPCB1Ga)rGONtVbOk&Jp[6jq_3#Af)WLuHp:YeF.T3&Jh@"7*Y?jAN[R*;I5(*-u`&Aka+sJ3G-X-bZ:n^4s$lp?/OX12:#:huH-8@4ekq4kOB?hK5^IaV9V+[.51,@;SQ_gOTX/i:fQWL([SOSVZ3H*cep$:5uhnT3.KaYuq^MsgI*KUmuHhQgGN>ncjS_CVq-O(^7aTi7no^gBnf;r,]B[NRFT-@XVI)t&lq;iEBJ,eWRQQJA:'WHG>SOsG*&V0s!^+sC79+3#?`;\2]9<"ni3>2K,&J5W:Ya7"M"pG0Qm+>1(%.E38148k9AG+WHKjsq?+$Vr=r]HA)KaS]W*BU]6[r.0E2_J17S;iMf1fm1:7n4qVrqn'8Q?71hX&Gok_hJWTZt\!c9:+MKHR%6pJ:OVk?kfhEcGkh_KDpQm=8lP_B?l`JK!Bs3Y:jqSp?gVDC=NXtY_S!(V+R#1'IdL/DQ`Y>-71&L%Lt@2e7dO@jhQEL-V^&:HM-P*#7b.?o(r%FCu&CS"c5B+,Ba[=(C1tlcJ.)X9'ghp1(b*1OTr=Fs1U<-?=.&HRLDDncCBY#+,Z*Es2Dsrq>:&)CMStL2%"%X')pd<ruJ(chnFN$p*3L)k5XJ&59de]!2Sg+aBC1qPrEVfq)fW=do)4>]tO'$$5G$iX]cH"I#AalIei(AAG(QZ%2ps1`:W<CQS2^[D;-t]4(=R2@=jr>C+;mCV&b/=&oQ_A4>&ZO+sJ3TqED4,nC$A5jE6$)JLYeA=_>X1(!*+^ba9P7OH6_\cUK/s9o'9I+XnihQS)R43cuoAE71pD[^NVB@^"RTr'Wq@7&36>hnMBtk`CjdO0h*`&gtS0*t0lGFEAj(RNsqUs"e`Y9]YfdHUS16*6H=E;IX":?9N#VJ'juZ;(Ag)+$Foq3]\H/+sP0?142>PJ6L0chR[j1St=f;;56ManfOVsO2gs(mFntB"&Z@WKS5GK&1OkC0JJS7p:T`C&J5UPcF\;hhOHTIOI5:ulPg`\iWeg?77E&nlW`c6^E6kp*&pc:+IO',Ehok@m`(5*70eu]hS"7`]/l4!fid,"naSnSYF9O;LkpkC1dGejlD7.?A<YuSXK85>n8WGfU-nfALCYIb1,A.K[B%ILI,O2NLJcK[*BQXoP3mMI=X#%6U22-F$nkmlZq-<'dU[S[]jT3T1M=qUbW9k0TZZSpA!GBE?U"VpK3c*4M2inFn?TAg6psGc&ebol(`:o&9cIdiFP12Ld;^Vro&\&\QBj++Zq*qe(*1S"+J6]IajACRn(taP@hF6XSL#I(,0GLnL^7]M]Uk^dOcbb_).#,M*k?UiC;,)klIW5C/r+^N;c>c"k^YehfWeq\@hFQaSL#I(,5MAoA9\n,(F2YpGh$mkr"n/!F/NE^Jj980@mWM6kZGPd8kM_1[V\`59i%?C.6860^rt"9&J5UHOOd$fiGEFKOV^#<3T2k;dCa0%%j!iPFEFTbXkK7'Da_Y:h=,PDDr09d_W&Fd$_h-./\LF$&J5W:68)ZXO=%l7R@3='kd\16Bu"9S06m-Q;:2+,.o`GY)]L:gQ7PX#9(M]L7`qaI?]u\JE7nBQj$ZC-6psG="IW#>J,K)Hkd[p"FEDWhd\Y-O.2*@.,<?To+J3T%W0+KqosJSe7)u%MGhH4D+sPGPZH;T,BVii?*BSEQ$49\Ofd9kklIDqm'e:%Q?Mqp/-_b*JK)#-9++F!Y5_0!gY?r(dMgF;mB8MG#80&k/#n@G7dSd;W5q.AI-Gun`HAkH1(Dl9&mU!DBiVWB<MiL5?hS"8;X&^g!Hi*=%E7(qh).%KPLkpjd>]b(p1`>0"e5S=D5'J'eNK9,jdVE?&F6hC/dBP*fCli]+hEB8kW%21tQAC?Q</3:JhS[55$,!OJZ+%4:d\TSo@q&$\,UF`oCtLFkrqr3GOEpNa'p;?_8&r]l8C=]@4^N;tLkpk-?:mg^84X"aN`)]G+To!X[[&8X^O>u[FD-8Sq!\=%)%-h1^]4:;F=c,/`JYODb*6mhG1QFeQu`mp^qB"b&J5UdTD82+Bem>\ND6RH%0$L:9.V7`&fjWRHiErRMi16MOsQ_aI4@8n%E-H8&eP_<Z:L2<]tM)g%1T00]`A-72f@C^*LCM492"U-]t:PSnZcTE7)tHX*^+gKXB;`JjiXS"_OE$8Q^oEH,,-Uo$O]>=i8NXgXfX1E%*uhqR6j[![r5UU"+ra`p5"_T7m27pd)jD/6A5bOCGBJkZElqe7.^Ygam^TLQB[C18sA5k]mD+f1mKt8fJ$T:?0iueJI(c'_#m1ta(j/)jc[dlW!H^QQAC?QA7Un_$PY!3Rgb@ZT!NLQ`TY^EOi_OoYX*@R_VD\Ca3Mu57ZA<K"'Pt:G*[r?.!L":r42`9GRk;qj9%>Zh@pus3r.fs5I@i+QRuDg3Y9,Fh7?Uj?pRRa:]?.p(,%aB6q!j@j<qj7R$^F.iL`8[-9<dP1OoCO,YPIUbn;%Q8dGk8c'L)UQ^8MlI&%s2fi]LC,)mb8%.EQL/=R%i*$!01dq%.seZ4fT9pmb*F<E'oo&\%q<`TYK2Is?r28&9,&J:-dHM?hJ13VaGdb5Ki/hZA%Ok"MA3sBKSZ3BJh5X9k`5ZH%^ZY.P-c!.Vmaf>rN/7*LcLknU@4a?I(l-cEbhVJG@#-uA?[r:.>*LDN5Z"&R'^AackK1#s=U/%=ED.[D2\ohfNo;[k<SL#I(;B6W&_ZpAM`l?#UN_?,e4F#5oaJ`=PDZ"Y;$Vm9UBkhD:\T;C9LnmLbfi]LCU7<T*LA16.Oo!r:"U]3(I.fRCl4e9g:7XF#\+qM6HINid4%ht0Pc\D)@tTAbOLJFr=E$$Cc8^%9*+snRQ[Sc))&aD'*&pc:+J]QTG*[r?86I,],;W)L^N8RukdWHVBP=?0PuWG@%JZ.-GM0EAS"?5.i5(%7#=;%ubK^_4&S4[==BIgRJ@)2DWMujR)?/0e=/+`t/T0I[D.@'S[r,J(ig0gQ[VS5n5BQ*cd=IB7nZoJh6ptC:^/CC.?`6dEFHd7F%d5<nK7fANP!k(k]7brpgY(7[Y?q1pgUEne;-227r4i:2]BDL.>O\r)6psEukkh0tnC"MmS.%&O<)f*GP>d/B't>ZRJl\sTTrkHACM[]I??VWjLiTEjp[:b=iUum:V9/4Jk0/,Gn=f'UEjb)VT9h$-Wbg@o0ekDWA'kGNk0:g=FSbXoU'%)/_TU4;&Wt(s9nl0$@qfZ1VG3Pq^d&sUb'?i];<`Q,Gk'dIX/i;-Zh)YD:IR^KH"PBoNMLIN_M+]dTq'-Gc4U_O`d%O_4o-gRCA.ApkgURm*B>!DXF'^0+gpO`WDcD]MY%1o;jAk7G&VDVN/SGiS*$,!F!gJRV+[/4%YTMoAS6jU80)93$m-#l^alXfJq4"/,+7'5eSWj:'lo0+pioS1:COY@N-7)s4aOJqNm?@dCZQWX5CS"/VG0L57&'1VZU@3WipPX72eUDUFAMc0qM'`Z\:M7h;,O(JUAoj3QF*lfo[CRAQWNS.[I`S-J)eNXd@k9[OX!A*oX&Vu7d7(JT:`R#2SOd<7urN:N!/-OB8MF87AQfXUA'dEL:=IoOs\)e`PmZDNRI_&pYV+NC]+XM9he@.SNA2[0$T.S*[BJ-gU@\74BTbeZ1B^('ce*i"C?8;Lkp)CCbiYoSK3$K,"7A[PMnM0<+R@&-<aVXC],&Ib%fJ,ETED@daHS?o]];Q:a$i"*Vo[6cThGc%ZOEn00;fp7+j.=-71E#&=n`i\[hWKGgUNYf.C48/6sSObNI'6/,/&B$deui1*gS)4*OH/s7Q'XgU:rL3]'`3ns>n)1c49)B8MF8&J5TedU[SJIRZdrdU[TG-u("Z/Zj9figD.bJB(r$?$Qc`2F/\ITgOT/G<R&V%hBHs+K;sIpip+gQAC@2QY\FiMi.rj_lLCT]67bS`_/haF`hg3$lC*J7a70fSD:D]9C1V2GJ:f*55.0f(LD9NLkrbr+X'.?$u]osMe'`IaU,HH#UdNj[2Lo;aIi;Yb9XL'[9L+XIJ</8d/e!`B@!0;S""'Gq(d\ZL7I9l=i8G.&eU67dKsVC]U>1UNfFTq"AX^'(`+f08=)R[(`8q3Dq1l<mG#*=8#Q/h^3kdkKURVB;l0f_nR'ZuP1nr-B8MFTd.?,(ET>ibF,)s4Z=ODIaIPD:iqAKZ8!)Wb^OJHk+[L4;b)tq!prAF;MiK;hHhZqKar!b)Z"(gNlLsSt'D0E']mF`8&)prYOcanB2f90u].Ar+NlJPEg%*^r>M8j%.%RlX\>`E)At%02ackoTgUH(M*Aft=iSitGT1<<LE8Z7G2K/bB0l"V@1o>Di/E:;S5CPZ@!.EPnldsNlU@4C/o\eZcTRZ@d^L)9u]*6NkHhZrd(GCr8P=5^O7,R1a]mEtmDOiOo9"/]o4?PammHp`kMnT?UjUrk31i1f`d%E[_(+hjWTe>pOAWu(GQS+7.OtU1VNZC3UAUF%2NTe`0(OQh9W;l_[09j9?h7M:A?/*cSdFd+H)bZjR8#*EiiJ/M$o]Ujt)MS"\mG$m.3.paiFQt0lCJl&m()A7^,?(Hg]rnO+]Qs*(IK%]n:Nu0X0ko(3[Vacb.p($EddgTL#+el0I/.sQg.e/$H0<JDc_!GJiK$R16\@$RqsN:PJ,]7VqtBEU4sNRX6q?t2O$Ap[<N8<8!oMk"B7sQDI9!O]7;m,5hS"8s+$Y59b*<es@o&ttUko#s7.e7Ye+rUud5*[tg(a3#eJ@BY1+4e/Y5n_0baptEh7@`a%j/N/m93Ig<9tu1F8,\4Hea)Gng1:l[]jQ!0%B:q'..hde>[35W_s@cPf^n`V/+\cbEjl3q!b!@c^J0,6:,X10UhWc"Uf'n=q!]c%*o"f3=-oojCWjiIWar*Ok,XaYsC^:m^5i_53QEVY?nnhpMQ3MPdHgF(mI)70jEGK>s*pmSND$*:Kt5A'a=a'DX,fTMde4`m1pHQkg>+o)htO8"13U]#>4(tANhq-<:%XQ8]Hu9[8M1h'OS4h=;>P,o\DMf3T99C0k/(a,tma8+q8nghuO2&X&lL#Qf&)97RfjR]Qb#a=M/nKnDV9S1hhQ9-!d8Q,BjhUN#^m<j2HFa&koD\4,_Veo]ag4(+e\$Y9+ZV#6tL5C]f"T$5G&KZ_5klpRXU!rn=bqd7oCLKV19EVoEs^lHnXBd#@o>\pHP03e4tfldce$<m7!i$T/3b"#SN+L*e5odMj&B)S3Mk[VXV0@u'aCfAF5d;r%[H6tukt(\Oq:]6;UkF6r8[>.8B4F660GFCfT3NupUC^3r(hgE1n>6)s^YnjA-?6/s2uOc5<\c8Z^@qXs.U6ct+E@Z;9`W`lfF]"5KJ(<Vmmf<&79A6a@aM:5T^jMWHSiPL9c;3iY0#&g<8Vha'AGk'c42Jc4@]9'>2I/.gTkg?9)VG^0@U"PklCRR+rAn5G*E`/Z%%3uAZp?bfJ-Sl/Np?^IbbbTRXlI`2CZ11USrIjaWH.9Bp;D($M()DXFFo;%)m"c3uo&\&]kKK?HUtWf,79U>HdaGF5c'mJ#GFpd1g5[18DV_mh1F3o!5?_.<:pf<9;/!kDOgqs4\Yl@gi5(%)DVY$Zl-gW.KIF;q;fL[1!OMsW&[8ihlctkP"69%?IUD/8Gi.D-qlODNP,R`dMA7'lG-'[2L*S#io]ju-7>hr=nmlGi]SD7I1-0O7hVR+&V4TkqU0nE%>s^nG0to/A[&DQj(Wd*n$HfWM9/)C\ZtWIbSin)7*>*h.ZST09cEU5(8Ep$Gn#ubp-;Bp[?bSXl$42U.T7?jn\8c#kOgVU)T:b"bAT"<+'Y3Ss`/,/85=$1dp9T"X$uOML\T?0I=]nm!fmE\ooeE],Z=V4mHhWcq(.s^RP_B!i^!sZ<Dg-DL.CUs9\ociDI5c*$*"ru13^=msp\*uY<&&*<F>l-;Up\O?4VJG7g80=M!$lSUWpA39(E=Eb[0-*S%Yb0cZh_/%*,T^e8BC;Z_kg`'d90,+iP5?H3`6;Ao%<@)](%?d/mR&L`s:L[fH4e&Een_3<$P4$GabEX5VA$>St;MpdO1hX3As%hl-lP$hP><$BcGBQ-HZ!gG.(GR>12k3.)YcPp.(,_akHWhlb(Hdc.-]@IscYATgOU^bXr]Fdacn@nF44`\9[\Ckg5.8cb"DiIfKB@]Qs+;R$_9oI,i3Ud1Q=1ZrC8=DFM0mAu]=ZML5'`q6$'Z+Z2#1P*W+;'<uB,1AUsE%?W!TgXt.t1;$^+2bfl+3Ih&+qYL'0OcCJGW_tWM&I]#d:I"f2Z@pX]IJS%s*DE6s'ce=NX]maK7%4W)2@.E,cn;G'Z_h9TOsgiS5^4kXP5!MMc6akbb+E=(^'TXEc^m;7lgW<4F6EDlkp%4%03u0]L_1lWSis,,$2iu)`Pl7=rVGi`deS"HbEnhYCR1nDMF?_5*Rj#eM[L:OQmY\$n`.Zjk)Wbss8@/"(+i@pCY,_;rquSq4s+W.gU:t\:UEWEfs"o&O8ht0p\+;=1c1H"'bV&hTH]#T>UUa=@G8)&f%/D#I\TAl;XkW!;,L3.LCZ="1Fl:p!.#Mh?R@./8;6RnZ57k7qt9:,$dW&(EhXkb[C&Hf?*Rjm8e"!V7A)$^[;2,4YA]+%'r9$u]">R!=j=GjN-'mTnDV8lhB;Zul-lP'^RjI=L(&:ogrYu1P*;&mPE-\Dd^s_l]Qs*XcSTLmFPF6@>S;hUF$`5]dC'l/(^q<>#d&dDE5(>UR5;6ceO#HZE8\Mb*5o@/l&qg:A&_NJd3_ho=A`:,gXO`[A]pC?=0La$,fN)/=0uX<jMiE7N`=8#A>W1>L(,)V;H1;Rnbr@ZM[h+95jQpq8J>'3j@(Q+(bDsM1nI7dRQ#/f7V.s-*fA"hX]t\smpEM>fh>ItPT?LE["O3iL\plAR$a7C=BK\3f^[=^6b-Y'R$a6X'GTWqm>\\aUdu(+?IWO<CSI>M6127&j,if^W)5pq(24'`%*Y%k+4Bh@9*(]*Rkn];hBs219!jfTldt%#B+GNO$MWo?1F,3[;VJQrX/6]fMMd:+h7>I-6CTlM3%E-QVbWegZa3#a5CNC8kZBTao&Rp0KaS\H<9W,JF/!.f<EH"hQ&OPJ(CniJL5*-Md6^>nVg.ak$Pk;7SZAPq/CUe05E'0TXK9F%*NN'_H6Q3m^3nV,5m&>VUUbI/$NILp$]k]f':Agpit'gq8>mFbCacD'rjbM(F6Cj.U8Is3jN%p;>MGl@Mgk=XA_"8.h`_8M#@qgFk=!@bRC6teL6`065M>&cWX4Z"j2R(@D!]l`96;_\\r_e^HE8RE6hIj+hsT@7]/1OMldi3'fNB_+9MEZ`#nnjA/IN7@Y\;E.T&<)Kfr\JfS=H+2JR#j4;04?lQ^3pqD;$hREZI2_q!d7[Z"(gjChtk%X\$RM_Lg<FXN?YRj'-<T]!]QU>)Fj@WFi`8,q6fj'e<*aqY0H^(=QjB[NGT<8Q`TJXlrkX7IB!Is/VR#ZlY6LgX4DgrVH2t@7JMN6^'TVn6c>#K2SO<KnP,8%YmT*Yct?`"UeA3<_`7"aFB,##7m8kRCTo?Ic5g)3]r!D8nr,+J,oc!4jBBN7s$:SL9>^>N#=$sIXZb4G*QXn[V[EEA&aH>*Q[sm2Ja6$q;&Z,M[kD>dHJuQ[C*Ek*LoW+C1CaP[VXV$%2s?VgppXuDUN6+86Ir%oQ.me_](OPN)k/dd%T5fPcNTPH.1L$\p!JpRP`pgo]ah<$-g`>$PtF3CMSj`51=S2A-)f67#.9O+iWiqTnB&4iKc'"7)tHreu`/3rjQOdT$6@4GNR*e,9ru_rVMK_jLaC*n'RncM2B?N9:&&e67V0X`JYBW:0b5Dfo@(7d!=HXF!k7;]Q3++@q4QAPq/oe\SRuk?bSWuSij0YY)6RnP"71;HM+:+M%\@>=4b+6B?m&0LXpCbO<O0*U4nPcNK&aM\97*QHI\3,:EDQ=B^=6O>dROf&L0bQOEL'N6.(6oYMe>H4[$Juj2Qoc7(p9_rOPO^,#+L_;:A+R.4H_=lIBs!G34MAkhBM_kjRuDXfXa,j@E#NrH=<cOm_Z*f%/EBE^L`UX[M3hNU?-#<I>hU/6fl<4k`1!'cdQk@eK$:pic..F<ESPac[tFYT#K:&06QFld2>XXf\^/:Ba-ZRm2E%DV_m\%YW=6#(Z*q[l5upa<g5LElH)>[qsaGd*QateubZV+j*8f+*;XJc^[!?3fn/7E8\NZq=:M-!hbZ",9tIXc2IS<6jJlr:_`N`c(!s/h!(k7T0A7^:iLBXkWfjTf3a$dK;eH("-d<lp[<$:Cjb<b&^c0.X45WulpKk*-Vg0C*=G`QLl$tn[^JYWU"mmVHhM:)VG.^O:/pXnZg>r+2h_VUk2MT)VI$r^/hSc5M2@r/aZ0Y6$-piAhVR+`"&V_AX&o>k`ufBt9s^fVoC28EiJ/M>]1p^9d`QC\[VZZuLjDEPhkj*e91qoad[`3m5X7U6r;#C4ifprI<0i"3qIsYXPq6'9p0a.8<JCu(Wl0,W?KdDlFEBA1o%%R@i5($o,b"[q:o96n43"+\ZJa63;qQ$Oc_&O7pQDpcRC6^"ET4nCCmJ_NdMH0!EeOnU.a._`n#KHhk3hZ?(5piYICmG9`.A.#B#jI[W&<hN^SX_p:7aRNO_m:0pe[*>@piWE=>?ZP#!lBm[r1$up$7Nr64?XccR)ATLlOgHFR.M[>e+n.[./7_MgTl:Yr,Gq(DdmH'U6=7dL>?GW`QB1[;&]a3S.KO5$BC>pp+,5DAa?2/m,>#>Mk,_LMbkY'r1cKNur#T`g,<Wh7Im7B$HbODIh>"=aBT!q=*?q;F2QrgpqJ2-02jm"/5l0,<.Yb>?a0E1/`3:C*P#N"dM$9/jo-Yjs?L[q<?A+>?P+.9<(HAm'"2'dacm]HM+<%5e`*7IC)muq6(\sEhoP.,o<1$:"#q8T5)oVA^eYaf_n6-7Cfq<.)*+$GOH`Ue#,tl,q;g2gpqLtk09B2f2t[<8hr1Y>InpUkWmY;hgbZcb*sEpCO]"KP"j'2oV'.=_N_cGdK!"11hkaTZ03UMM;irjZ?l>MHN*iQ^:sU/c'u':NJMT`.ZV9Y^EQm<O,onnF(Uak>m:`V<2E3P.9!+bN\\_f^Qars<1H^S3dH$t9)j57p?h=`s,L0k\[g7m>PIF5X(c9^4*KuSfs@TISK7!!M\[ngc->)#h5,`:GVZ^>@:@QqGAkGanOH)>7r1o9NKE.g2Jq0J<@^MHJ@s1Nb6nJukg6$Wg=k!*<AG=A'Ye.uNhLj[X+1'BENNEP$5Y>-B$D5e91ou!dA'3)>?eIJOcGH^P[/e!7UEfVWCZsDhVPA=[oR#I\]TL-$S_G#nj2Ug99r*bL;WDg\2^j!ZFf@iQ]1=^a8[LXR23H:_-e$g\n0'NAU+ZZWM6/_p%7l7D;(eMXaR@MIf9+#MXg2p_ghRN2jA(TNK&qrEd.F9ZRV'AO1p&>2I8@P`/%cMr=oe(Pq,qM\!L0*78(\u'4l$?81`7AN)(0knesY'l<8rQ*Md9J>nSV3C9-u6q<ec-O6eLU[q!I=2fIQ;re2p<-r9n<$3oYVfC6-R'.-+:7des9#IeKuW0)(8MJ1eT0cDmf[mLM>[tubAOY+)Q\6)m:8Jb?ChRkjpLJ3UAqS^j\:E(/hTa7>"4*9[_p[6k"Y0WRr&!-)2[7bg$MHmc:m65urI"#rXMSq_oe>Vs"b:BlP>fG%8&,j3d>:<[^W0Fu.]UQ'LO`.EY4s=FP;^AA`jiX8B.'a$)8B6c58#]FkF@e[J;^4GKG'90WpDiXU]1u*raQL=n*G8OZdT%0$$<7Kn5(*-U'YSVQdWkb8p%$8-B_%rD"2#I0Ba1QS3dg^AQFAP`egtXreu`0)?.@Pm.p&GcORC7m9[k!6h2m^0XUM"qW^M[VZL/G\Z*CPg0JLSX2+8XODq(_JinGU[=^"u]=gCGX/Qc4]UK#I/4W?Q6eZ2d3io7[K[*Z/;[f!E&Unjg'KaZ)L6:F66cThGWr*oKG\.M/;1k?:BPYL6Dh7@`EfW_%n><i97T?PL9:"R&![oXH>OKm^m'%N%-rn+,E+%<V')C[?od+HuQ.1,2#H>7qZIlo?5Yt2MV*g&)QnV-BjdjgH^b+O$HIWE;HOO`[]kt-qcHS;SXMC*9Arr(L?ldr>*[6Z!f*^4tMi51"8KWp/Sn(qXPhp:tMJ,JgA7bjEGjP,%9//p9NJGcV6,`9=Mrjm7<'\U?h/R(nC9i3V"gt^2H4o=brMO%f8baI2=g3<#B7:Ip>naa@4ag+pI<gf>B-u3T:YAN%&5Q15<,$XiFk2cumI)^c9Lo*n9G3I:=_2XQ=R58K9Xf\^'2YFVP\p!JpG[14a`r#N!it2e4O,mYL0:>jlN0O\%1-W[eET?EQm:EL"p1gP]MC.fQackBDe#-!,\4n/E&eYi<V\s#2[;+6rL!,f9BDUN3onF,,9JA@_:=l^@lb;LH167ZmA]pBsDhf$[IS0-q8abBE;n$XMPRUo(h%_G@I!a8(TW^(+1E//ad&'O,AEQ=.mmaU!g9bQh:/8scR`=[J\$(CM=Ai0Ts"QmW;^<h<:+1[NCk4F+[$6PJemA5Y:L0kn*B\f<g,7P.;H=p2Fo-mhnhII#OKOTd@7CaAB@!/kYPkV=W5OQ?Du97qg=k7cd"XB3\[hP,jib".nc8gsTU*!'h-+u&)TMG95s`rdch3$+UMsFdEVo(RY=j/sQ`GD:@`>VmWXSG!rhuq+.TWW1I/%YL[NN1+kCsEb:d"+2m(U/HaUB4Q3)?,.(uNFrbq*ZVC[fnTX&`6OeheG^&Q`%87CH$m<%33CZ5su1.GU2c0k>*,^6$QO/9m%?<MDkf"]$0_NHF^M7?fF$>ikHr4`s"T!$7anFfOer[r:/iB"!*b@X">V'hDD_E4\r?6IP8\`J_q)g:-hIb,o@J`f1qX""C$;4?YiSo]VG!QTocd6s:3+"8i<1(5s:t\j:rQdNQm1pinphkiaEXo?Ea`\;PA'a%pcAV7FY&\oh5dDV_6gUV+7PV!2iC^9#HZ.PL5Lq&_gAa>Gk6^2i=m,+geS3>pinXp:m4;"18&F0dE)^3n>Ud2tTtaip55DtWDG^JM:p'IeXS1TlCVn(p2J*?FqZNj>mOXDr<&lefIl;DsdZCtc6f:JXcKPE%A._q4)?muITcrquRm<`Z`BDr89nPa$:7MgTmE0gf`BZ/B1R,a9fb?/9AP[Uj^lUoD]P=^,+RBA-M^\Xj]C)ZsW8F4mpG+!2R]b>K#JL$gqL.ZgeGi>p=QSiV#ZcThHRT0GPHHg]\"LCYJUHS;S@MO%#jZ=V__OsX%RI#;/7j8FQ5$_h;#gpsb5^3N+7`5$p+[6FEHO$BA5U.1(Y+l1,!+8m!jFS"Y>;;#f&CjPgA.90J,1=C6`O!"DuokQZg\iY#td"I(*<NB0Zq$JbO+C,KVmbPL4CkS#s-n#A3frJ2XZFg?gQ,p+*=p>BPJE$4Z_1Rf@c3-^?[*WG[QnUfU9B`COZWuT$)Diih-:[us/8XBo]m0&K4l+DS3u-OGmNJ.]F8Yh'/8sMHrVK,t9MA-[<2jp6o&Z;tCNepg@Ddg/M2@)[bmV7$q=Y0AP]+fU@q.;HGZf+G^]Da:V9_HDP88^HHrHI,e/po7>Q+Kt]Y(n)I=6+qpYUHjFnka>mPrZFOKOXNZ!mn)Q7lVEjN3UD(+mDjqXs/!jnSOU?ATCkhLu=RYiYK>cRWRB7&iNK+V-$)kWj/ZT0@[Di0kAP/WdssXdV1eT'/GXQn`)?Sih94>hh*DEHZLH4F"*o.$U]LhnBHC*?kq.)B,WVWuDlm-oqp!;QjE?8sLl_Ne0gDW`H7UVG/#W;<3D_fN;'NdtJ/GM@P==cbP)6$PtFsPV]u%94DA)SXl=YrYp9tM%_9!bEl!cEi9!O&eZ`I/SEA!.68#<?"bK\k$PcG+Z^/DZ"D6!*??.h(@`VI:!u^7"m;V\L#Kq)>?P,!=K(MpJ,d6s^AcouF%$=se##p5DId;Mkg:X&JZ,!8W$jK'8mKk4XG%#u)B'MDnPV?BH/diCm-X0Z2/8qg;g!,eldr=MprqF^UlePR;a!6*gtgemI%>Ae&/H%9]Q)>n7A9mXrtmh@XGMd*Xu_L"p?gVS`l:rS9G&;$>3akOYFV6?kH8Zq7c(k->HhL$?XI0fJWQnDFQnsVR9B:Ph*hRChOZiTiooUil06;).7mHD]m:EMm^-]W6jJl\:jK*@WD^-=<QuShW2$/aUiPS>eYl=iQSbr:naVkp=*AY+j)MN/H1pTm\[f8c^VAtt'K(!rd(FYqVE=C<-rYKdm*X;2)_bZMFMS@]?BLA4/hScQ8sN<*ot-&[e#Z]YFEMa#mbKBSODN=D;^_4,[r:.>*=-69`f1q'QBo;`nr$B]D,=g-Lmp>ADJa6mPdR9-Xi627lfdOP3H@N0+B`pTfJ.c,Pq,pn%YW?O?[r#cCi&J*mEM&nhs:49o*#L;/6AuZ<)f+G=GX8RPjr(mGYrQ*8iCkZ=H$2Pn)#cZ&Gds=2?j?irVQ?@i1Ec+a`m(%c,duio]ai!@o7S;rUa$^6A<q]Uk?b08>I#<gU7h;#cX55kK_c5fT[g`-9%ITVA*`YBo<`Y_B>dKP9t5)]Fc.o;,2B9rdBD'%4j%]2!IEsOX!B]kiaF8Q!;BK>ISK-1c.UT,@*H#_k;#ns$WKbHhVF*Z"SaAfN;3V=(F1u+ZbqX'-/*!Z=M)Jji^;`+X?h9(^YM7H5[V;9Un));t[lkiPUFW?=%r(HD<ukk4BqA<>#rYRl+tnAnJK"qf^Al-jlTCB@!/SUfWNq4aJq\SijDrf9T^&:btL.7<s-&=B\njSdRU?!:3\j#DXd/Wi4=FIF"KJX&Q&rd@s&eXFsMI8ki$N3HM'[O\s)T("$WN%S%8IJ,auoo][,,(8XWgil.T>GP^gf6a'h0['d=?rVb8j0T1t*C=T?*%!V'j+Z^D8%\]Si,taCM:nW?Y9T'5f%aLCo?g6"8Y@#$s3YkG2kKY(q-RTUqHhZrbNofR<D6[QhMAIoe&J60I(/fK<DVSpXYb@AKQFF=^gD63a[']Mlf/l#SR[BJ$*^)P-+[L3<6m=3i^)R7TRPem;\ogYf/Dk=3g9jJD>[1O`0mJ$9k0:*ErefZFNugI6HEE7lkig<_46(s8l-`!&Q;U[V:S0hQ<2idpr;$*RfcrPD0A3mW-Q8g2<N;]kLlR0Ga5Opk.oraMUSEI+5*qn#PE_:G(`;K%lAE:&VG3QWp[=$#Le&gs\T5[6bmc-#Ue-d"jcYP#^J1.R6!YNc?iX!u=)49`D6gLSZaR=Ao?TYOmMDVYjQ+:<(L($F'e30rldi24_pNG%koDj/`1Y6(f2i+l3))q7nF?$7GhorRMiWo8*=cePeC7I)QB`t%f$`";o^pqID-LniVY9WEc_jI)@V]ap?sq?\;l=E_Y)/0p8@9QfR6H&1M2@(aUZ:XiX&XGAOm)#m6%]@Z)B+nk<@T7>7!(Da"EAF$K*Mq<e'iA]G$_LeNEW.MW%tDSXX[AQR(g<6d%NfeU<G?CJUutGk1K8T[D$NtE3POi;k?*seurF63Yp._a,V1(Nb&qR:uJh?IL?So'cg0F8kM^maJE%GAnZ!4/1g_sr7#h6/#&Pb$IZ7n:ZPKXY-'9VY#Mg(oFE!*5V5GiNe.##7>l3@5m`Me*Zj179,A;W&g^/oRlBg/ldqjUb$8b!llU`T+f4_b]6@>7=kjo"/_/03s/`&ne[0&>J,]76CbQYX>\MWc&V=`S^-,89V&U-d)**0DpnC38U?n-u?QQ[6C`U^nn)*Tf[AufY*r5Bg_oTg?bA5qFFdsCHoSmbE]%*cY-NaGQ)]P8sJ,nOAdSa"BNugHA^)LdX]tOBOC"#$n=bGPDHad([?=me]VP^6#ETYI_'tM0qb$dh3#dSXf',-<Qqt99q1g[7NLCUl,]5)1t2fIPXa=Q<a-VcL4dKHOK[;+6P*BTSY!>(rM6ojVi]=4?%*K"<g,"2\F)RO_W?M.T>*@]%OPq-(ICl'bE[2X79b*4=c+$LAZ(QhmIo&RpVdA%'`."L%4iSh%Td@t:"T&jJ_BVYS+qsU4GLDD@=#]3P+.TP''?dGM;\]!gcYNO0"kMkKQYMR+3_:R9T=hTp]2p'1`aPkN2@N^M8b*FWkE8a.Vm3jj<mbPLU<imj"2=p"Wc[flAa2Gp?SNBn&SCOZAhm[N2G/#9L=/![IE8cD`^HX1L8uA2O*pU_K@Dhg*fq[QM$R#"%GODP=]t/:JcAmpF#i=4d\5B"j99q,Sr:mP\k_M%r1)VnPmG#*/0ekspn)iajC=FZm2VE<J)28Qh2fJ-<[B$F3X`U'6n&Y13Eim^8:_\Em,taga=B\n:CtTH]ar<9WAF!qMfJncDJcuNcZtNlV@=bm??+T[\Z"(\g_QrW)8J+L'\p*U\C2/VGVI$r^M\e$IqOtP,%j#*u=1<'Q]S2cA=g)/Frr2e5jh:n\;FoVWhnFNdE+s`PT!VLu<g+n,5&fFF<)f+7n</rtd"ZJo\8g`ZTloYMOkNn_n@1W1r:gpQ:8lk\?QtL"mbPM5i*\AO:/4Q_GP_14mdBNAqtFI&@`=`kB<lnA$sD&mHh[7&h`ko-XC$GP"Utr"Y,eVhiScM2il"KV/uco+$PEr/s4k/+Rl5+uDJkJ$K"n^/fCnn1%1EY5#upD76IF3.Vb`pk[;+61^]!<Zl%r@KDilDCT'":ec_!Fo$_OGW2fIPhfW_&DRl8@QnI;4tlJ/rAZ=V5)T0Js%+&hZlZY.T:?+RCAVbU.=KMmS;$>C.!G:%J&r;#rtHh[O=qsQ+?Zm]1hYa!n;M5sUT;VSWsa,V0u-M6fd_e<GaUJsI+q@mFG,S(^tUNLG/\8h&u`A&?uZA8i&.UW\!B[J$R:aY["3U,tf]-\jOX]r:.naWS^[44Yp;WD/%D-`u1($&PsS"iK7SiV#ZdSJGt?QTsrKJX"EOV^`[1'KPH6\c.X?=%3cPVFpKP$W$9A(.5F'9((rfW4A,O/*,GPER`D>I%d2c^m9M<iftJBIFUh]Qs+CCM;A)@E4BKOlT<04;l7*9&6+hrYb>7DW!,g`4o+SnMEA=I/3?]E?RS]FE;NheZ0M75BK0'KY%"P84Y^doOpKT5b0rYUr6SD>8t+9#(XJfqWj4d6dS)l#ba@srWG.q04'SBnLm"u<ioP'p+@@>`2h6A*BSF<"kUX;qCXF-]Jsoj"<'Wl5JQ@*S!P[/;Uu4K7ke1Q>Wb,2clJl*o^C[ee>Q6C(UI_uOud\fF,Ei$oEa^oSq':QfW\dt4>E'ikO.d+mc`kJ?sk,3Z?5U?FT!%WTZ19OI$qC!8/.jYeZ)V:#*kF;,X%<ZRX5#5r<!97+AkW5K`nA@K*LG[Pq-%FW0NX5V5:"F#"SZRgB@s#/68hh[a;*Y1Lss)`f(34$p8b%>\n5Xf[!"O9.GM6`6`]:*&t0<f<3uehC)k^Bm+ZC.!=aFUtu5G47;+Eil-i9#oIpHaWj96^hXH&4rbFXWQH`s;O69WNJNDCZ""%0NP9i<U@COHJHcJ7"j2I^kMld7i^)WEGXB/orUAn+i8CiD0XP='-;5!L+c*E91An1SYO:8\HeG]9(]sU0piPfN#o*K9>,aHIg/=#][?T2[#tDXBDr'4(lIDqj)jMpT*]eE,Zt\"?Y$HDPq!gFimViIN,*h0VmuOjRk09Bi"!RN%*^+h6/mXp0Z:O6"N#@71TCZfR^;\0U,Ah:7\Pr`pauXh=Uoplgd\TT*#=A&)Y?nmt2)UphJ%k,38-?iL`0cs\c(-ptF<Etdi5($Na:j/WJj]i17%$<SjQPg[U.#I;JInY:HhM9O><LGfZAFX':SC+/A9/-8kR3h:CK@?.*RR^q;'t#*D/3csVr4!e6qWf3Q<(;%ahE3#M@P:r<`E%_JUtY;<NALm6DOhZmG"P8V021Z2:6sdd=86&\PbpfkKoniU&uQ2&&f/%7qcS7kWh\&Fme%q<2ibX7@NG@daHQ9PUJ7o^];c5&CLN9Lkm`D2]k)&W9?L&1@`gh5C%R$MN39Fgs)<IF`_`6D;-Bu&0`tcA&\qQ%<6B-U&uR5s-7RU8g;gUq!hjBIJjTo2M_ir1`qI3mdBM;UEEG:Z*CP\-74We0,>Q6&cFAc77jLqba:-\oB5;5""=I[\8X`,9C'Z],GG8`;?L49FE)GG'cdGiE@jd\BcfNdYd:YT2/8B>5Ua,:n])a;eZ1&Y$6h?Hrqq$MIR?Fg6jH&CX%@)(2K.GWF<Eu>gU(Z.#+PAUh\R:=jVA(3*^kHtp?Yr0JInf3b*=KdDr4lC'L]JMf:jN*=1`Wm%Q5bk<NB0&<NB/pUEEG:.or`*0JIbFm$['&LiOrI77eus`f1qkg=lGumhZuMjXu&]obZ?%ldr=u%YRC',pXa<=]nIf1eDd37(Eo]U*S:@^OQ8m`JSZkDouK:E\8ssh7@_B*=.cGnFcHsE,\?>8J)sK;=;</-qX*FIJYouSiefAc4h9)j[Lb$XO,SNJ+2BIkWjr'?$LV(NfME1SNB7F6Bo*$/P8ohM\[m"2E$SPM%La6j[L=UHuO%D(d*&IkWjsR5lLQP)`DL\3XVTd6s>Lhac[sE"!RN(EokGdmFkQ^'U3shSitiH`.[FY&:N)h*BUX9[;Xs:/NOH;>_-ZfP$5Y_;bKdL_M&Al"/4L#5!IiWg,^?!5]e,:W\,SDV+?^m6\Z!]*=,NF^pPR^/[T<FY%#A-U8+C:DVVaA<`W7>hRjF@#a)-V3,rEa]Ql47(**[CL>uI%U_]]"UC@YA;-ZNp6FkpqQS6V.c"G:i,ruS]<QB9P-jN..7-)IRLMKbMlJiHt;B<Kc^@q9o>kj6@X8%T&;7>IfPb]okpQALuUIU@R$k/FT?S4AN,#u[)SVXQdf:jO5_,V(<eTC9:]i_OK]I"-9=)es1U27]S-qTCTpdB3<7/no&4<.)ZQ7Z</#=>6OG^U-tm(g"W8WE43Ju"i=[r,KF6A;eR1spjcWAIqlRj^A*D;3X]`obs\B;,JOqRRh;L,_.PE'=B'R`h$NCMR]-3,h-)+@N64J,fMeMA8cY9beZSObQuGC)&e&]mKL2%YX'3&eYiJji]SsdNm4k&7qSbrVC[%e.E])OfH$5is$-WrVQ>I%YR@dE%O[[0.U))0JG3=Y=PIXNZL?`V58>2oP)^(&?37p[;0i(09P7i[4'4a/c5PGHdT)0I?Vg=/%9HS???lLT2hXUN>=*LLlR'XeSX0U=]\]!rr)_g"!LQ\rr2md7Rl"4>n\4ad5O(8rk+P_<_,c;kWjqfC]!hmg=k7s=,FXB3B>dLhB$rukWjsR(tYK-[F:sF(KX[>d8:I'8Qo;$R5/>7Fm:55&0b+5G3mlZq=>s\-Ai:d81dDK;)W=IR&d0J\ql?*2)-gg]Qg^F5`!,u0JH=1?_?opLq`6Gj2\)Ildr<V*=.d2C=fU/f:jP`11S<4F*$r_\2_le&:MNQ%j)c3*=!&o-oqn`<S+NfbF1;(MN39Ze]#JFUcUi[[4"Tu1i(ZYo]X\";,JE"9jK/EU;VQ_"%3A_oM+JmRqH2>o)/<)fcuh9?&FZ&()R[H$9E:mOHu3`5QCZQn^GXu.p&mT>IX%nldnSG7AO,@[;0D_@'F%T!bk+5f:jOunF#*o[.$,K+KM+kBbKk)Ud@rqnaZ,Q$5==7C(tRSgUGMH_ZL'eaH.R>j!%AQa@o3l/;Zd6f@Lh\#o\2.D=+`Hf8>TH8;3k8UmRX@UD#r\B[EEgj2[4]<NB/t9Gt!%8Lj/MP:'Q6daQ[_?YaHCWDf_7`5IHANTcj*QnZA+eC;IV74Q2gKRa!sB@0!WWK>WZe3f!$H$Xc\LY(/0QPt8,=L;b(kg5,b84Z:-/0co(0YjpEb0'"hN>nVP,5R1$[r,pY(NL[)?!Tfb_ld:W?G1YbFFZcOQ'@LI(`;Jtj<PID=W+AG[ArH;LfD77QS0^]S7l\RM`N%Tj!AC"VbEL&3^=l(132GHjRDa)&H;CifeYfU??BjK?Qq'NT.(K7@`=4]%Zi(P.4H^PB$JJj5<j15*?C\m7G$DQ??C]c.Ugu6@@q>oOj#%m&KN!V$7T8lFN0cDVl/_Em!Rp;("(D@I?ntU<2Q(r^:sTOA&gtB8<eseLkq!M]SqDm!ET@MqY9<rI#/I^dN+O<<Khn1qM>]D86&&H77i9o1QnUc8EZ$IWM%$*qWi4EHr*Y$kidgdC\-]5?c_DUdKboqdA'28$Pnt%M3<YZe$3CQdErQ*MPWt4b"pV_='9:iY)T-[kST.3[rUTQN27>Yr9W+C7>FA)'rtE>rnN'hd*PV:d1N@8Ycog&F7Y?C?Z0k$d@h/OMC)&dA5%dN5++HSC2.L`kQ$H'$V@u.koS7YeBcH:FBh5k"Ja@<o6F[#K1Okhj2^icp!ZnV%hB2uE=o1'`5G&RA)iN9]X+s9ji`uZ7n<1dj2[3>1c1FM]"e16$V-kc7[>]7Sh<IZe^_WkU>mFq/Xn\;:01A!>[0Z%7ALP+*&s&JW2:?^Yp&cpAB5>8Oa1L.St;MjT8F,9kkco8[S/kX_>"_><7*uDWLQD8(<L2?KaJP-*>+E+nF?%2j[-J>042FVHhN7*MWe8Qi$k36V6@(0\od2gY@!3JLaXe9cCHIY;,EX,p[0Uo+sL%JkN=4^4J+QN?I@^CW<<G2#H:U7CMPkIhOI4eOF$`ukFYUnOj=gn<9WSqVkV'Pb.?94B?TlA7ZA=C%YmRiV5:#2m+>/rL4d78_]]Z]p?gU4)K0G.]Q3++dGYXb[sI`4TaY.-=J.@+NeL#$;l<CPA72,b91hgV;l>XT;r59=001)IYB]a*<GZL<]mKJt+sJXfEoFlh6Q'^p[Oin[K*MpaHeR`5VkoC.\oeB"I/a'>jN3T_(Ymj&EEDdFV;),h01tota,a*__SX0c1)U];P-2;93,g!MWCB`\pU$)09,\WaXBrRY)nC%Q%^m5g'8,]D**?*eDr/,m=ag/=.EZLPGdp]hqXs00B%btp4C(fSPFf$KI'0j^e>Z+@MYQ8cZY+Np[r:/]rnKp!8*Vt-RXtYH7Jc)ePJrCo6VTlBQS8%oGOE[W61A:%$?GRi3VeV)WZ<&tckdrQ,WpJLnF+-lQ<N>1bEr8!`uj?]NUui9mEq\!Rl5,r]Y(7FX]i;Xl(UV)>$G38>$?C6@NsJK:S'[n;b'?uil-hf\[g7m>PG%fId5_!o>#nZ7u\EED;)@n9:'PO\8fid4_N'16-9lX(FOO,P$gjQ8Pbp?\U*r6dA'3o@j@P92fIQkM%bXT+5X&"YI8<&2K%=&e'kXNq=5raG'8$W?l@Qjb&.t1(3n^\7>f/&lqX*4%2^e7hqrqKe>Z*,/D779_sZ?m:RsP#-CpK&TPoUepq_Rf=0>do'gT3X()$#qN#=FkNupT&fJ(g,?[r"hjfMk&HLC4hY-+q5ML]0(_\F=nH1U/e0_Y56#RoZlWDWnn,%-(`i),X,6"\E4.5h,"JB*Zj_hUZf`o-o/%C5*M[r3LLfXl@rk09BlqD*6\f\_/T:!/1Tf<8PpH?H3mf\"iLI*+*CQ=Gl4N:>C(!+D*@;[+Bg0SG3(&LmiOfE`P_gqJ46Unm5)X&l%i/h-)A]6?2PhE5i>aI4u%OS95&1'D<1P9s#N2Bn&52)S*0:=,.?/mK74'd]YAK*E_IBK:hX*BIWG"=^rJ+[J,T*H/K5nKJ0uiSibDd?PM$?GugZ"q0Z^8kDU2c/AU"qpH8,+Cg%;R:Sn]=0,MT2at>AA]b^oiI1RpC#?Y<\$pR`>.#hZW.=GtJt6d2H346OFA1f=PsbH+Y$F+2+!8G9CtUT)7A6EKdF$?.^'di)q"T*@]#TjR?b:J5$AP1F?e;GdRl5,@6L4")S1ts;0ek+ZY[E;#-'0pX8@33dZ:gN:-l!R-U/]I03u8&/'a04B3&k#`f^RV&CJpQgL6/[YAj!XW*M8ILoK2&>(b]BgW/91+?[r$.p\OL-5Ge?go&Ro\(2PKOX)o-n`*Kb/W1LD4f5BEUFh`D(cu`cfZ@2WDF6Ch3HLrUG3EaE^69,7(lGef&-Vg2aZtU2fqLF(rPiRiF4/,`Y;56U[;Pd2V11"</,tC!A;S$saW>7=+edS<W2"0WB`f(dfMD/hsXJMO[/Nd30PZ?3gkm3uaOiJ:^@lk3hQ9@?tnX4oe86`]QpTClOWQiJQiiT%V$4mgO6[/l7)MTJQ%"%LVn4=W?*&9GO;YuNGJ5;%CJdR4&K3^<Ogc4XQC`0hp4-2hi>Qou2X]r:(eZW>prf9;CnFu\Gfs<'GL7Y!./hSb)/a5li[^NVD?]Zj@X&dKgb6tjWp[6iB%j!9%(9,nf]m;Pnl])uIA2OMsN3(8o),"&t&Osdm0`:i8a)UqGAQeE9)r^2RVKhDeF64U(dA'2V,QoG7G=AIo*Me"DYm$6c%eMFLi2BB&$+"9jhQUG+ace+"T5p&Z<Ib8e?TPK.,hr*7Ofm_[71me.-]dVp`"3P-'0/2/HoqFH,BE[H.p!pA_:T2KWk+8I:ed[YUAjuO+,i[Oj.V\]<C;IWd@u>MLI]IL--a]Zji=f#Q>5!PM,`Baf,%4P2*pfQnuOm8P*/Wm%idR5Gk#6jPpj$4ldnY+cC6brI'8O7-[PK@%3'KSciMDF`/,-^C.!$"KH.m3A0's,hkEdg91L(T`Z,F@&eZJZ8E5iV,Gdoj>bF=_facEWdD7Nfh;')3:]LFmYr>Jq:7j_pdr3c*8kKH)DR@OL[?5S?)`A*N^N&;RPq#e>\$q^="rY-joZjBIBZDfi`R@Z_-VTm]J,Xh+/:7-Z`V9pk1oc)G08PJr(`aWV%t"$:=a]^]ldfJlN#t8*4/>fQ:=qSj!i2>\rb#g/9^G[D=R9A\4Ue::&T$.+"WMabpbCsKWL_YE?_a/[j,`X@)%LtG++EtcK0K+6+#tpeo^_+e9*b:t$lFNR0M2_A<b,%JS<66Rb`=i(hRn./n0't05+9uFi5;9r^n;Mh@dF5>(@oM(O>12M>c1=;m(/lXLLRoH]I5Tn'\a5u;)Ahf/UTEhE0,tOmbJfc&kT(hlTh%?[VT)'9c0kg>Eb(9UNf"Qr`jR'.KPh,`f1p-NZ8?6%%KG*o"]eYOm6#M=qsJ0<h9[7/6JZ:NK,#@@L(n,8;&Zp(*0o>6X+Qh_M*sg2boeu#t5Yi#mR!,6RA%aQL^kul-cE?G4!/F%1-cQ>+4[-<<AVCqtKQO3d#3/k07Rjd163Ql`[^2eT,hVQMhA2@U`649Go*6K*DdR4*N=NiLN&Se:"-f^/3t>P4.2:'0Rm%G2sCZaW2?@A-^Y]ELAB.`,h$p@q^TOh:8Q-;>?PrAc]nDfQGht88k^gYtP&nr31Me2/6*q@R]X&=gjAE!j*$JPkOM!A*5)o_j?)&<+@[Hon>'hmbPJl[4PXn&8b^R<it04goRTYA=^64XXtS[>DF24gph>pKOe?mCJ?kB+]"[lq>9WqZ&?u<@X%M1e]Z_%)_DS@+k\KmQS2_-b*C_gBnQ8fB[NQ&qt>`!LZ=:(*PU5u8kKEu$O[:K64SY(ki1SGTAcHQikaTkLZ9mM$dTJT'nKYM*JiO-SV^X0*K/`(RtcU0mG[#T6B4_GcU$M+*NpB.p$1)(9:%>/_L=tLJ^LFGJRV<1gDHPl5>Rh2'u_4ij%)d^fSA+CfUpfsfXK9@!9l7(aB3C#hZCNMs(UrFj(_cPpR="?-lJdZLgt0hKoij,+k32HM%EQ/3Fs[sA13<BOU@MIOp3[bbibA9PfiM7?:&`BVsj<Cq7Z+'cee&#e"5!/rR%OVp=di;h=l?RCH^!IQk>iXDb^TZ/E9NR$QM7%4ip]\1]R7?USJjc&:n7C0/"^E"`I1G!LuC7VJ,H61TIITL^Jb0\@K.YjAf2[H#8<C)>#\i&:q[\eO@QER"Ue4+#oseTR[M9"6c8=-Vo>[(c4TI6fL6C'bu5pl)4(3a!5:">s[g!rjJej!(lLO7urab7RfjnH?rb!>;PTMF`hgI*#o_G>-reZI[hYIQ:a"U5(&/`$47+Y4ErQDm&R1f>?G#*r:A6Bqk6B4MMmDW<FTqL?5J02kK]V+(G6[bC6Z!.0tC,2Pc@Z[:6R#!>-hg8?="\$dFG_cn`.ZXR@3O]mdBLN39)aO`]J;+0QcO*fs>=p?bcU(dA(pRgnBe,W(4X6h7e=7aH7_5eubE!CY"Rj6XVdqSJ3Y-/PA`0KSd*Pf4JT*Q'IV+]"RbOL_gpH),$8HJP'J02$<H$DKg8I7N@!2.P*-HY"=4q;S@>Fif5$@+G!"C*fZ7I$pdop[U$LgNfK,C+X%(#*,&0skl(DQq>'ie=0J2L@=jW(&`IT-<in%o9:%9e[r3A$#8K6sL!nCIq!+fV-oX(D\/1<Il0.?H[kD(#(^-]TCnEh8!pW)u,2^f!f#IJM-t98_?!S',+E\TeNRntG<E3>>IQ]87/N>_7fW\f/Rl;_?)2cDP`<GN@Sr._VHNQc,70QR1M">?0VY0B5S(Z/>UikV2JTKttft;TOG'<S3#7p#MkoUP^L:,[d=C5Fm!<WN;_]eU-`l?$QgO$hm%Bpk!d?5T/Mi2fHg,4BZI!^3eZ?$[V[:@7;E'*,Y%p]_prV60Xj5%=kTmsqs_oIf[O/P@?;:DC:@2/_?rk!CC^3B%;UmifD]R0A_mN%]']Y1VV1:)i?XrokjSM&m"?[2JAD*^HRFEB@;[Vt';4[-m)`BAVD:sode'?\MA_-TYN$j%+c;=EPbN<@K;+$NA"bLB$i:,-s[_%@n]OB\am$4:BWB#IV*bVq:%AmMuiM9Fa!gFt0<6C-TXmD]STbXt3($DKY(3tb!cQO&`sA2NB?Cf'8Q&WpktE%J4?`e*E\L40+f)DP7mI7pq";I)[(jCg5uHFgrrm*3_s$O@"l2`E,]<BG<di9BK_Si.S%f+@HJp$8ACO"OP=TNA='jMhjd]t:n'>$BX@G?YW8kI,6^OG4FFVkTp6[r:.M99s+"A^S[t59:k/HBaqiN-rmg`!#lSFDU^>h;P:g1GaOIjW\Zk8P)LXiiZS!P/TuGg=h/a%jlM[8kVf'h*;<]a5b4$1GU_;Jq=s^*6;/Ta8hUR0>IDd%8]r#,3];h*1oHF5',ipU4]#-*I4W>Y-+pkP>c"&jOpkPl`%%^&0.'H&0N/@_U6b.7n8=sPG)?uIN]jXkKfcerYq1W?G&PuRkS7P\c(6eA&h`YAjP%r9/d:\n(t`>H1L%"^]%t`CC:ROD/X?2^Lk`Z]6E^9\nU&_042Fu\8WTN37ua1'T*B<H0EVK8@2g'J,fJVUg$>4-9QYK$p&Rg]Qk&6n8)iSC2hR)[VUM.O`]'*"!Z[$9UX>3>s"ICLY3kK7?X76T)RZa"%ft^U42/%rVMZW!<E3t[cD^4"pP91VbZ'^IJXP`"L5&0CtlC8j2R''lY"R=:JXbg<kSup'QqI`gU@h/'&;=!M1\6O$_7]88DDQ,B_[s^(`OD582s%,`IS*rY$8B<\@>Yhm@o[Z?G:fTP*.S7dNij9`n8p'-n+<1X]ps+Q_8k`ccs^g+)]Z2);;9tYOCN3F6qO6\qlfL['VYB0$_S\M*1_Cnp\Q8(%q*O,KP8na:U'Y0+qWRW:o];5;Y2R5<o1g^@a`76%E-aH$LPV+ikG@;?V6rC"&rq]@L??h77S3L=<8/2e#9EL(&p!NlF@V[u3Qk!?i-l($4B3!<10ab4b&HA,5]WOql2@<E8qim6a^&J4EjcF`kYn]&%sh';%L=5(39L5X9jkSfSlB\[a`5S2@tdi;3-4BPj4sD9uHB1UDmnLd1q;;ppZ"O@I"dAn>PuRPd`><u4'R`l;W^k0;>hr:SaLB8MJ%UIUAG<E5<JPI%X'>e5%AWDf_YXa^[4K*_?]J,L+%!>YeQ0kSXsmG#*7J,W^$9bRdY,pfTnYO:)M-eTUrHhQgMbY3?!LI+7*<`UE"p$qPq]?"CaCY,^(o/al]NulQ:4.!T`HI/<N4*U+gYEkhh#J&DKFm;p8%1NIE"lt1Fq3#XFrs-D5I!e&eZsmEN&0)ZpO7"5h8/@g]I=b7d1hdT`Z(duPfWer4SNA4`7WAM_3[#Yt/:g`#<ZXGP3!_0S2gHhj/BZ,XO:)R>3`J[B#o)d][r5/Bd^s_l,i,V,!..L99h"W5"Jfb\VI!S83B9+J^C$DrC'!mq3,ugQ_ZQW::/7s!^OH(Rm1V@PY$JXtH1GL%Z*nN(+t"rq0,J>F'L*Yq^OMl=OoeDbfkbMB]mp'2ahFV>`JYPUQS1jDN$&1;3cjElIF0O`pAokkkK]W+27VJSGAi=ZS)EYdZ_!b[lK[Z]n.R0EbfIke:5qY-;-d[":bq(OO,$*Rd*R;B^2W%_U`9",nFG\a<NB0bl00AIE-?CgHLrV6fboJT;,pV=kg1J#-RVH2I=;(8aN.Gd?4"<2)`MXC));=\W`urMaiVYh_\@73\T?q'NuebY)B0WnVP]6c!AK_JF6BR'W]"_J1ajc.DUYHo(((BU7ZA;iDAsH2mFns@,3^8Vk*VMQ',)%bY^aQF%J5LV'_M_b?G))SNpbW/.gZ(%:Hr^LZ:0?q_4El@5(!!>2)R6c:!NM*kL[a;1)0Bep[6k,1M72\=`nl[H1U/)C\;:.70Q:^:f+C%ZHCD8Ut71IKS[6amnTE7'sbm:hHk"K>J>L\P)tcu>D)V7f@(+m'V[ii;3@cS-b+#/CO>I&26k[>)'9G&dCaaG'bqI%Dsp>c/r?]F$4<K%YcuKtb=bDuWFa8=;,L2"QLl7`IU'@"?'?U0:cgFA\grk/Ck23`pYa0$[C%r1g/Q*oM5@,JK>T`23a9(2(%X$;Vb`q^VP^LuYsOtG$5&g&8&Y5Mp%gXc(G8rH1G`grW)6r1TW!;3p$:3]/M3*TqYL&GiZ8jClJpB56;j&Nf790q[^MKgQ_-Ef[M[H4?+Y:El051JX"RY`#^d;.F^,Ka6&>X8h.D-R4F-KC+<WpL<E3C55:nH]4I'MkB6W^p;-@$>eg16SJR$tD)\nLM'GM7;\eYVR!D*ga,FRrIV+Z8drcaTW$(X(tVQ?lcZt\"-s+lD6[r2$:plL9]Mk^.0a,a#e3gI@V/iP_UpOk>8cB)soq;msLB?poknqR_t?u?8-EcQ3AUfO[*9fAOKX6#s<J)7JBbCBTq0XF-%%NREAe>ufZ_Sa:ir;<SjN#T.)^V@Of)B^5s?a6l@)B'Mp<`YsLd%-PkW1p"q@q0T?`XNM[_%2dYr30\ONh/C\R[T\RC=S3K0IJ5<=G9BMrqY_!&5QM7)`B4X#M,0*Q,+VONkE$;`4WFAP9Jqe=4@eZ4,o;^?bCW'hnFLnN2"$V=YCscXT6K!h;'5I*$$%g\hFce-nm=d'oa(e7O!b*\@<pOn3I&N(DIRZY-*eB6rsc8GG)IUGiZr.#eM6'+l@BI]rJ(>`e$3F:JVd4o@STo+]@U>J,c)g#7M45[k99cjMbunnaKbI9\pXa?.02PXE>\n\E;U"h7@apg9p73.p'f<-VS;rE\aZanF.R`n;\GK(`!lfQ[6XEEZ@Uj#bH5,g54goX".8SKQCJ,BT]*^4?t@?$`I;E[;XqdnhD@6!t!f/SNDO'\5]/tU]_l67n;b5ji]tD*1:"%k061Dr$1jN"T]u<fMTE?Zm?''b)=p)=>_rnABM)^]c'%[oYl_)Kj-amR#@[Hi^A6E^7h5DEdn\gNQ%]WB=B35,`&1B_4/9_4]-tF!pC!^`_qrM+t;$tq+0(b_,2U0.8?0`6,7\F@Q#T/S>`Ed.IdYEM42$:Tb@u^77BY8a.GJ>io&aFWkY%OSA21!3Li?hKq_bZCrq%=0/"sho?2Lqm^PE)nA*&`7TcL8'e`q.['6cbSq$J#R1P;4\8e:6SD<8ORtXu,GCWS[$[-]:.#N(k7VZ[Q]iH%&W3!'?4F"*=[eB[spOu^cG'5chg8&924pf(50fp&B5R\"B`5JH=LCPLX]KVAO=7PFtRo,qMWMla<p'J4h042GdA1]Ab8`dp]i8U=FW)tWNpF]IE]-0^t.HT^SC1q9Gmg6:JFj$(&$47+G&7T;i42de>daQ\8GNR,;SB!ua6Ot.r+Do7K/hRXq@!6;`QFXG,/_"bj/M6AF\[*+m#Uc3.Ir8Y%!-'3a!e:7KG>MH],U0'A(]*jmMkXh0T$?%Cq=NoM7Ri,/$C=)lJ,eBLbcGI'T#/'%FS"Wh<E3$X2`HRX#4nmsOGG]l42deb0S:RLU7RCU+FjV]dPPjs=Lbh[=0,MtUnf7^MoM``(Dc:R#h!3Td.<-PMJLeE@6a/HgUB4)3WT6^ib;D8c.+;NC?j<JF6:]O['U5P%qhUL-["n7]o.8`iPL;4-Vq1WZX]R:JQOgDd%I&)+Felj=]nn5ft>mg]Kl9h%W0t/KeI#/g\1C!J+r6Y$]]h*d][#m7Y-,AJb/$K6i$N#q5`H3?lpI4;CQmF./AabK-iT<3,!&A,-rM<;'F-)U58*'4Ur;3k$tN!(ccU^^A[)Q5JB1Sbda>_Bk_9Gs894*XY'>Uo=KDGEf;mj`IIskDVVaQr9iLZK3hkjX]i./c[YqH6&'`nYco7Nb&K1/6aOJ>]t[aS&<WTWO*XTl3$FO7ltRZO#;K(J<sqK3*(5ZMcKWfU%rY;,V(6kSQ^<JYD:bprH$MEi9i"Q'kK]W/N<^@qIMa"C.jl^"r)`AS`3qJ#W2L!)3'KN4.&C'L=]ns594[-$$U\[j2QnpqB*+TJp[2=-EjCU]$TPeCn(s?^>J`JX^4#nDeZ5@,L5(Gn\N-V-SBkCd]8N_m\J`)(m93J?L1+h-rWi"2XmWQVAMQ5cj9SLgL'?MB)GVORC5oX4*Nh-[N<lq<J?RNMTK<cD5(<ECC2/W/(05utAS!>@.M37)_CA@nYZQH!@NL_UmbBfe5<jD!P*1u:_hMU20j1DLSRO7E?_$*a'9SE>N>a[C4*N<&aWnQp=P1pbIVTr,IZ4pT56Z$jhl;AUBEcSF/Q5_PB7Ik9mbPK0(GB+-&5SK44>7\VY-)<p&E#6I(f0]S-ZtE.NSCp\?X70V(f(eY'65)';U_L;M,&,4El&O[43.dr2UE3=0_W+kcQ4(*k/gCR;eSNh8-o$I1@`c-^u3bD=(j]u3b?GJ;WGH;pZ1Gt\WkEl"UcGITm"Lm,!dK%KcY57_>05&$f/F=a1$X_&;,&Z+AnMe.*^#]%<7JWKot!;eV17NjWo1Z^lV'I*Z[=cN3(Ug/PVc!f<69d6f#q:G![!?Sig0MU'(Ln[,@/qa.Y-,.SXJcAMB3KdU+M1T07OEp?YqPM=]]qZa6u$4ZsB12Jh#r,EPCUAC,S\`/3ATLd2V)$m9.JK\*mWZDmZohg_hV;;V_(L@F4]QS[TE)HTAGKXJ1oZEgbW5CSRk%1NbJX]bncKb03(81Icb6jq[R>]b'E;Ekfe@U`g9'f6"k@'/k(Nb*6^CKP=/,5)pXg^[EES.U=E#Cp,in"#!s8.6Uf:fpgJPg\J!RPek-i.>KJJ].s!&bAQ?i:i$dK;sTZLPj").4?SU^K54H/;.HK"K2BqHi<g6Y;VXfgM:rH85Zq/^ooK0jl]^9cW?*pWrr`4_>Euqi=D&9Z(0k?lcZY?$p\;V50OZ]0WKtdM9N@ncCol&+P3nQh3\6TPoM/,@,8D:30"-!n>+Wf]HE/eFAYt8CX]-iGnUra72it<I#rj:,NiP\G3mk4,67fG8P)MKLPtb/b(k9%,&!$u&.cERE.6m8!lQ[N#dW0MF54Pfk$p\CJIE'Froqe'"&h(+d_'jHa>;]$`!L*SI=;(*Q]mr0$qD\R70o.+JlA*u%1OX;ZbQm\HM&IJJVC8&0q?kD&V'KGoU)IXM\e%\EokHQ(*YXZIt@6oqlBHlY$=QXOncc<&:WEsE[L]ZirZ+l"#t3"!,tt5RPahTR4Kt.nDM-gZEcm8+X5+Z]UYE>OInV:9:9&C)AX)5i`@@_gYjWPZO8<*JA$..\g-_FHls4Ul4-<Sa%;IA$)K&d_.!S"Lj9&2I7tQ2WPM(X0/%e9ZOhl\%8+OU_h2af)S`0?@loVGjTN?<#a_.b3Zl2GOCYJ$C^jKAQni61&D&C]'rXc[s4(_aTmQb72.T'fBP?__XdRSn]6>oM$U1#IR@QQlT&j@^jcb1+c'j@dp[$Q8!PmJXiUWpXEA-M:]8$n=b1%sQE-?EE5F%M!bZ?>'N03PeUP4C*moQ#$H+PbYqK.*IIf)1?mdM/Sk$q@i'QV<!J&9VH8Vq^0)Y3"$Qa:\l7bD5,b7P;MdXkDd$TE"\1b^W!$#XWue_`\pJi.>p+J9Db(F,e2?LD#*&J%X.4=QLW_U$P(-s-2Y"7-Gqk/2%BB2\&0]\r]2$ccAlAGOd(V+^>Cfr5!@JcD&f=]0%cK"$EH9U=P?(X)7t(:V1Ck0+DQ&&@$1!Srl_?tsEp(`4ZcU24[`iAlTie2MrN'aQGS\L%\^S25ZU/Y@_NUo7%Z3n:gbZIYoD@loVGjTN?<#a_.b3Zl2GOCYHn@GTesT&g*N6K1s^+<-'plIDrCI`j`nVb`r)J0-jrXI<e/Mi*Ar$lFL>o()@qZ_V>!aBLiL11Yp3V5:)f-aW`6X-Wb`qoenaaZ=\[i36Y-i(UZO7i(hl*\c^:jM^p1Hb]:ChiIdl6+-E?hmdZT>deI:MM_b-acP&];CLZD/6L9,CY-.aF7A*R3B9+)^!;@1>&[*skN?n<&L"lW,]SFbPlRCY?!Vm(S2mRJWQ]-h^9nOB+>u+n9s+:>%OA&KRl2#QWW3*DL@F4]QSW&)!A4X1k4t:angdDPeu`/G1hkt<mltR:W:9:qc92Hj-g'+*AEb+]Z2D=FEB>^\T#Cf92ksP1G9dC.q.OGTOPMX6a.u:j"qMb+PbJ9cM\UWKQmY(Cd%E]&b%Dk+3ToVRUG=^-&-Zbt5IRo.?V^*+N,\SAT_%t+/L3V4kh!#1]=U/J$08ONf\QU'XriZE4-j"QJS<=kgn&TN$k3[#ZtVo,2_m.OWEDSj?*j9q*)&pq_800S>4F\q"Y^9j0t\^b98<on_OSDe[fm$D$,OY^X&^rFmbYW-;fe.6r:ogW-RgL$q20kFAGmm$-k2>H)33m/PKT-eqM!tf]U"l7K*MpsqLT?gDr8ifjQ?R;mFs#[mgDOFH,r[))p(NV$pO+[MA4DbqYL'8o5u^dU7stW=W-e0mR7E`8nl*jIJNHqhS"8WXYsnM]K',P.6(TNbagg3OaYH@0he"m;2?(9Vb\CnE8A\d.k=Op:e48RXF!h%$?h0nj#35[iHH1n";g\-b%1=uVb`qH"-QA#lr=GM')"*6X'dY+IPnF@*F8ur<6*u!fR#!%3t`&^Dr.RoW$nb/b32Tq7ZC#48q^*2J7,X6mhYNa%/<AjWRgWC#f@>k'GMfC.neqUHW0aFS]1PJJmW#@b>//0O5O24JlY/1..,p,TB.&7a3)QIcH]0ICQ+lJGsWQ>JJ;qLVG4nC_8qO+*`lKIM<"!W[3K>D1c[S,1M=uU!Gp>g)8<\$iPOWqO0uC'ag*NU(db]5Y?q"=eq:V8bA^]hb0A2Ma2<ZC1FJ8G0?=:<8$o0eQS(8=r5@4=(I8oq/hAQl^nOgV:7T,q3B9*Z)`PcT1#UU^o??9]3ehjuN#B^'am_W>aOFI2LE%KSg$nO@hgU2!X0i=C1*eL+OHu2%j9f(El37_<aQrod)RhYDhV]W-;I-&ZaiZXT&!(#.FtI%5(bHm=]l605%jCE$,ZjnI[VUf]]%.*\L^pXr<%=tNn'.Fe)\Q"1gU\i1"fF2eLMn=DR6:^a_\(!a=m-2COK!MC&(_(0cc(tu?bW$jnf<F?)LM2E6&66+qecrM1!%!6^8Sln&:WEsE[L]Zj/T/[WX<)f:LY[j6CF>3A0.-YQ=$%2/oKq%V'pE>[V[/Pfs>>[gpt>XlsOh2eZ<YPV+`N"3.AiWpOU;>psmIFG.>P^ZO8<*JA$/Y\0E^.!>3Gc&Dq(-VSQOt3B;r`d:_#-)9]u^Y)cg1RZjuX\57Eaip(;2s5M"Ur!5ZQ8'EMtJ8[;&29GhBQDX4_4,a!t"@)SeQ_+=?+2P@HUoXRH%37L:F6ChUh0!l9nmuBDAYE?C'a+e0aN.PlBE=GWA]b^M@c+qM*s,-5##S5pM"M&\#oNU.h7K:CI6'8E(B6HU3';]i*%/OiK1cJbYX+FNf6WMl#7hjq0k(8\)a8X/H-Q`YDY3/?`"nFsP+<CE2;@sm:@]pF_17%9YgLeC&-"mN0REdqSN:=tCQ!/_[V]6uMuUK(]hpNlbg+LWFEFn![ms;W4ctkhN.-:Z"aa6L<@odSY?nnW@q4QalA@-R"Ku"@J2SMlm*VR5aO@P4=*&G(SAVEOi>T2RdaEgW(QshMAmn*c.S@VB6/6d3GnDOCI)n;rlLjJpAFGINc.7,aK;>:gS.@Ci,n'\UW6e"n)KFp"FThIA$cPpuo-I:28deC.N"V-q,3)a<L6\#=k8P(Zkm@s9CtUSl&NFq\atT2=B+A"op)SjC%bImka,k>T"e[J5]JDE&73m<Rk`N*l'G)f(iQ#dfB>X*oc<?f'I6)lWI*@hLU*>D[R@-VfRtHR86pp:'H&RQ8+?us8bg=^5()MaR6s!GkL'.2cZj43)%1<R@N\\/bnFl8(O=p;Dq;$c7)p!mrIRZa!$1b.%<ju"5ZW3D2F"j4:,4P1(lp9U2mRRaOg'H\@>?cTt/$2s9T:_2._m7*EkbscO&DN`1]6*9M=8:]'KS]FU>IHYt6$RW6o*RL,<lRe"QS2^K>e-$I!gs)+P7=FoENgH=K3qJ,Cp-iZn:Da/Kud%US.E6,i$q#j<WI-BUnf9o93maFPEE0oqMR-oV4[hH(=^j`>[1Neb<9Cb8:P$Lid:eN"U-7\$OaAM[?1UBrAcd+5VPWMhlKs:AALS`[c%5VNnh.JY.<g$%C:-=:<\s0PtAe7.k;"-ceR<G=4YqCOEo2;OH's'&Y%^?i1e&&b'%d`oB4H@l/^sf1#RZ`$5o7`JqC>8ZXf[h7F?'>?9A8>\[f8-@e%@tbEjAs3d:">lddY](J[94NqiBoAS'u^_hU%kS:l]Bn(s$C2\$/tY+DMkhZWKm%PCJ#n(p3#91u66PCh`cldt"MhQjGmP:'-AKddUq([_\M1l2+D4OO<<ML!?fnXutbXDd"1#U5ctY6Dl/e#-F$!5`%VD53b3E9GN;JHH-$jU;G%&`*DYdaHS#]mIXiqtg.ebsNWq'GV>l*BFo*"0<1#')hIpFIa=<7n8Je00hZ("Ii*0*^-f4"4!gKYRm4bJ9tA:<[Pf+O!!EAilGm=K_>*Y(0nFmaiMOo91s'NW`A%]T32tL0'sE1.,.0"0HVoQ;c=>Y)nuX>I20i3&:bn.qXs1KkF[52[tPM1eMS-X+lFNJ9he?9[4@=B&37Z]>.8BDZW%9oU9_';gf@<NlJB4$5s^&=C4-$Y3BT4$ajABGJk,Z+LrAiUku/ZG*s2TI844C9Rk\EmCtZ+jNhT&YAN"'a--!sElKdcRPl1IW`:foa@_XBB.`TKJbS/*o%<(.<%1!4^9=q)qRDS<G&fW7R7>gHuC_IHq<E7Sb^qdNgJNSG]4G4IOKY+iXQ1Pd-!dsQr'e>_3Dm$4E*?Q@Vc39)TrUlMHS"$L\D"$5o1GU`NdFq-KH3(nM(+i]4^hqf4M<,W8U;6a)pV"8RTmU6Q#kZ@,e0ug2(N/*B$2(I%X/i>'%)jWrkF6l5;!GK0j()o]<O?u=?@'qU64EYanRH<KWjT5l<6E.9'7$5?p"_ke8k_qFgpo45*^4srIX]#88u?9PJ:$q]oi5'pLXZV;$51ZP,C+:sgc7kp7l`Ri,9ru9fN?GN=]/(D+7@ss2fn+T2)R71Hf;hqr1;af#*bI@LPCPH-`o[i,U=Y^V.CA6!cQr.ft);VH'_A)p?e1u>P?ZUIn@(?B?m"b2/3hW"Uo/=lIDW]GY:='5RrL%KsbXD7UBEXg"BLrn!<q8T7;k@3FZW6#8?FVZY+B%FFDg`66Qg5nDV:A]mHHF'bhA?'%a6i-OoA#mbPM3hVK_3.b`V1OC82SnVMjL'?C<#n(p3LkYQqZaH-#[f1Q4TX(rb/ET4nC(Ddm!AS%[`j2[5<[;-SD+r!o\aI&M[GE*\*(:c-_3dL;WS=CRuHDKErqtK9uS#;sRJJOu*7un^flU`LXJuYiN6\c/f;+$4SBkdD?qhsWO_\Xq1nF5qoeC9.$)`DM78kP!)p6AS+GJG.6'GPe;H%D\\2?sa6]P#P3BtIODm+J`7nF4_o4!RT[1,91C#q7>RP'!HIU`H'lJ'Q3ZEcZ;S:2\R[d>/AZp?gT^k!_-/ioS@MZ*CPD%M"ARMX]Bop@cn]dGfZ1'EnXVMMmDEY$KekDdPm;,pai?Lb2i>0J?4a6G.U8-71(::S0hVZEd2o2FV<&c-<)#2(?6AjLm.,e)VfUG'8%KEH1(,?/bti4B1#'iPQ6G)E2PmKR3OhmD=1S1.?W3LCYJe+$]2Rj$R_VGOOB/*h.G?S(-H?Pq.<4IcTGfVP^6,_85<\T9i;u7Nj3[<)i5?],)NuH1U1V8ZuI62Jq0dosQ*E"WF#!Q8WI*,kBMT',-QI1M5PN^!0.m2BWR,Uni6^H]r(l65$oA\u)C'6RPO<C#=H(P*4@r=82(7'4$,=Qo]@>'To1lNDe7N+B\!e^"^fVNP')Ngt[;%RPgq<V35^t2$?$N)%p[qAS!,'<`W8EQS4+BP,]I3']K-!M:Bu$d8<nD<E<-9NXgC1`f1q#DV)@KjNGV4aNNRcFEA(0i2FWg+9`*$`6Fc1,9nH1p[@"<;'U@3GoI]lYct@kiaPKglT=Y$e#/_+SA;p*CMR\h"U-+:Vb`opSkFR]9i:@U?="*B1Mti&,2baIAAJWi0$MSbQ*qX>hhjL>m]9[(da$,JSUtL)6%t&J?FXs*?3R'2!&C'-HZmMo,o.73d)cP;rVH1k[;(tKXoWeIr]MNgYHMl62Jlu>hU4T,i'=ZXTV+Q[00Q+m._n]TVl+%]c-4BSi)N`U0^mE:d6cW?/OA1,Iij))Nt`<DabD@bUE)F>LhB9uKk,bf7rmnWk!j5BBkqLF)`J6s,ebL!\9Rc9*F*eZ8-jICUni[8[VXW;`/#!bEqo-4$#\e"W5#:0W'KR%o7Zq$'o^MNL_7]M6)rP??V@t]_?[=jKL4ZNeCE+Ho]\a>/'SHW-q"4-!@@dU$suWpKXPRA!p0Kr<+#FicThG7^3k4ng9ls$N_Q!$72Id<22;\aN_\^!kLZnABb\5To]ai4CY.S+iu*s]!FTDIZZu$"XK3uDnq\@uLcu%R*1/['T"2Bl\WUZCD!^->Od)+&`uff\pPVZY"Ag5=:7[8uLg]!kj1?5NJucA!ha3EXKnYL-4^(WWO$(;5aN2HA`<@mmjN3TM=<^*U/3J4K"O(#TB$Gu8'+><Z$$4h/D*)@RR.0V7S=CSh0*[^bDVi#D)]S,.l:Ps_P!fL8J'X]L77BXeNVs@o9^A62G>_=:B$[&cC2,4O02F2#67Kmm`Si==2m?%Bmr$pjZ#SgDET>%^.m_eJjQ&@El83eWjJ]"*`(d9!V&r+=-R9u4q"Rro=XbjO@ieWM<UK2@6UO64o(!^Q%VUq^1G^gH37uO%NZ!g_]m@qn3AWBE&S"8;I=2-:[+sHlaN2GZ'.7tifFctsXFM<QG3o(ul`XX.g(4BL$_BP1HK</0OH:#a1h;XI\O-D[:S0g6-7/rZ?XNL7:^@ZZSiq_bCtc6&1pFBq-!0KT[7;LZL^Q_6*i45I#g1<4daHRbc"h>CW,^k;2E!J"B$EYA]lN3AI4@uT"X`ZcV+Y%%DFNdXh7L/-\iNF</1`@7baGe]n(o.2a^Rh58Oc1hil-h2$lRKp=YiP%,BWq]l`VEnPWpJ&AF[u1s#b](nCY!UX&lKJGBX9D<E)pO;tpa6$NH<SP_<bFHBmFKa,c=0,h'$,[O,JfKl:jH5%Vm$<NB.@5(*.^]mKBLN&735Z4al13B;B4U.(hHNA<=IPa.L[$=qen@7un;3H3mVI$CFr.D:8?ccO;^Y[N0n[s+H.IE9Y@5Z_$rDr88M*Ze`u@;t7n044]%f24@u]R'5X<g/u@\oQn)6j2Rj,^'84!0fUeY]8\m&;..,qC4[VpeY'p(`+!D,fn-N8l\k+_q:nbUE2RE\@B%"?+La4F7%\h+8#h^]uKsDmh+ko#U(?7'.-E:eu]l<%b%>QV?U`kA&aK&q"W`rs1Mjd*M`#BN#C*<6O/d]i\0B+Za4^lE%o/sfs>>UNEsr*U7q_egqS>g6pq0r-R:+-8K;lR<ilQ9*/F_R0enfjG6*7l_H:[4^4"kNGn(;oD;2KFK*cf6G<Ks*`"ae'm+J`.il-iJHDX5aM*OfCJ['@`<e#UKBQXCZ"!ZP9'c"?(m5f^oG_Ahf>%M8VP&>)!#"J("M%```;%P*o(Dp\'EuBMh6[J(`l5CQZ\mrbjbf/DMG8o7A]Qs]Sc(-q?:7aQSpBA)_H1GK>T8npAR8(W]p?gTF)Dh^5]l)Xe9R:u0\YP^"n+$5FkF4DKmbYX(_1DiNNfM-!`^Bum2cd_0c(@3Bb!.C,$aru6<@-o'2ABPt@1/KkR@?-Rp@Ikp11UYQ)nBmF$%c8"2/6)u?slT!b3drm)u/7D>4M@EIp]s>*Jr+*,tfBC9h\7%Y!]LRiMW;sEcQ2P7bY@lj0<+7rquB6qQbrC)LuY/\@=LO0/"Il!SJ,cV5:"7j/=,A+?L`10t\&^8>,2!$4Ce/]Rb0#8kO]I*\h+,>VpHPA<V94mbLBo*Y"/N',,Hbpi4IADZq+06q(Nm@=!7rW`?*s9q)@#@;'=FY*kAgBVqZ(:aR\oY0=u.5YRtfWCR%KN^3l;2f..)lg$W[q!_%L3g%s+"E6FnCe'L*3HO?,nF5r.jQ'7;:*Cr^k)09?rU55Sh7AlDT>,I1cEON,+!2Ra-$UR[(6G#i#ei8^GOA^(gY[JWXf/1S5/fiNJGC;pm+]!f`JPE">%VAY#STn!DV_n3NK&peRi=1^@U`eaDD!bYKA)8,>eGL^(7lm$-YM2BD8F')Y-+pUqXeLPWYN)2"))C_=]ed6^gSekp[<n):db"AI/3?0UniZBJm);[1&(I!aR@cdA,lQ,1"m!O/k#IoE8\P-oB.2XGT\:c@2'ZB99tj.?+Y7hR1>T%)B/Iq0>AWmG4"!`>?dR70f:gG*8sSL5\?JUM\GRap[@"ccH_H2NsBC>NunmV_)Y#=ec#@;K5X$_Y^ZOspi^1M#cS8Po`DMpe#,tRi8AXL5Tp)=c^p+)aP,>dToI0QjQ5Lrp%@8N4?Yh>#?+Mui!8JG?0T23B@!_c\T7K7@CVlD^d)knf%/Ef^jrt),?(q6?;FACdaAb#dbW_"4s/kCZY'fekD^E>i86"7.ja!^klh9h['UMLL#E+5USFS=J/C`a-9Otk2JpO1M?kp&mG#+ZZa7P;^^G#5ZjBZPp$,P'a&!-5o&\%fQS'Eg6q0Wi"\)V_gpo4DdRhfqEF\':n9uWn@-Z4ie'FOE"0%=fD6V=m8&s#*.%Gm@K!_mA$qiiN!/:ca[8WtuA;NA]F1ZPY!_\q=CY%4ICSBMAXQ[j5`IKmchB9=@AS!/6,qWE6eD&^sZd>I;&+U9\#0P*2n6e6Di8B,2GKu^=bEa`<NK&Xe4*pNIk4e`FlOP($`0<hFgX/rQ0][j&/mLAUiWLeH$?5\'ec,RI;l<AZY9@Tg%1QahS/hi-@G1eg%fH.cTAe++@Ue8o042Fe?O\7)W2QWpX"uOf_.jO(`f(c[7ufD`2/Ua8"`pA&VIkBjbEa`BOhl09QnSQT4X;9U!XV3fi5(&V\[c\V8/C.%Uj;hDLg==n%QAb)i^Moc+>u"%2/Cc.k';2r3''+ol-fkT%C<="&UTUh2E!JW33pr1W$j&W(c%7uHGQDK!l"ENP:(=g^]!jF3"-;lq>%S3\IBTB\6HF[+@!2MLZ&7.%l"0@^d-i;i7JVF2Jh$-R$\.'_,!D;+;Vj%O?qCFl]uJH^-sN//taFs3.`0^L(9rITqS1D1-,pFO$UQX@$EX)3lu4n8f5>e6\\u&kKfb2M1X]?HbiPYp"*PK)tGB[#6HsMETG1QVuj24g9bRe"@<<iSu`5A_#MZJ21p8[>F_4Ri*[`'OVbsT`IV!m44jp]5b`t.I!aK.c_&TU3.0'ibspa@"`smA#XTQ2.u>;1XH&;NBACEJ?s(Xsbht=N(bo9"[r-m06ip#bq+)m5WiAZ`8tZ`U*BU]>`t!?u7>hq,H?t1\6lp#WCGT&`2uu1t\ohdJ7SL:nXY#bk=>=^K\1(@R^ddJ3SI:j:OKn)#M#0,=:$M\tp?gVFc9Ys]Do9K1;&TiM-$so_Tb_9RB@LU5Di`VaGOM]<YMZ-I'2C#4d*g?Wf<1[@V<+pi_r/iQpqjnb+G:lu81"g@.-X<r&2GBO+$Y45F:>m!f</E,dF#eH_:,;X+#@MfSXj&Q/mXo)DpGnVJMWpP)b7IE?<LE6JRd%ti1#X_$b1s)^dAqE_ePF[79UN?(U68KY&bd2,08)3XB:#TTc?lgN"-SrKr>]2#9!SV_*VrI%1PH`]q.B6U4o,:p\t-goCMR9k"qE!0EKi5d;nR(Xg;Zd,5=KeY$\pbZ.R[[(GZ`jV0DCb-71&N[%*K:Ghlu4<iq=?NQl2l@))c^_bZd^EEWeo#/FQ0ba8JpFrV#*&e`W<J:kLI+u*M`6EqpY<KOdg.B5i>cjVac[*$J2#`V5Nq=Oe06oR[]K8u-`"smbEP*;(a3#Ehba;?P0eJgJ3IJQA"eE>oRUo($/`5FpS^guA,Ol)RrRmTUu)q_]oVPXQd&S$C?!(@nJ*'i-Gj2Vi,6Fq]k&0?MZ&CS5P8#;^[JrdS-0S'<p0o?5R=+`ek#,,cgJ=$OM*8*!h$ZlN6`PTIn?"7=K\t#(PQCF?OfjA&l:01NrW2Qf!I.H>)Ui0[M@<QhfhS"9pNRt::#Ju*mi&hk<lKS^G5r4-j]mB>QUQ>kjY<gpOD4CGB]Q$>:;3C/a,_k^d#F#FF6HNUdC7-ba!c"5[@g6\':*\<j.RLea5QC8o+377si"?ETDZVcqoB4HghnO[*d\XUh]L.Ga+iM9rOlXpIhnN3Oh4mINL6fE^\m2%B(8#ZZHEM>CZtVmVcKY?hZN_Kn++D.Wo]Qn#Rn4bk]R'5XZ+Hs5Lfa['0"H-A'c"-(q/T6T0PSr\7Ss7U;0V<TM(o6+RO1/TQSnB+am&:l/1I4@jlGKUWmLfAFbF!:0o0'f4a-0/)NQKb(Dii.eG3%!#Se'hOT!6$)(h)?R#(Br>a_!=D]\]<iShU@%4:g[\./Ja`I(BS9jSdT6%4B;>]+#VChIBn</4(C[@a'50b#rg.4Jug^3sZ?RYh<e0'KXd.4?Sm-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n(l)rs,XR?Fg~>endstream
endobj
56 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 251 /Length 942 
  /Subtype /Image /Type /XObject /Width 1007 >>
stream
Gb"0M0`_7s%)=RS84!=ML'ou0.-T+tT],eY!+)olACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]dP)i.T4'EB.^~>endstream
endobj
57 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font >>
endobj
58 0 obj
<< /Contents 120 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.rst2pdf_image_0 55 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
59 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Modbus) >> /Border [ 0 0 0 ] /Rect [ 60.58575 481.0394 215.6457 493.0394 ] /Subtype /Link /Type /Annot >>
endobj
60 0 obj
<< /BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font >>
endobj
61 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 747.0394 0 ] /Rect [ 279.1024 434.0394 411.1024 446.0394 ] /Subtype /Link /Type /Annot >>
endobj
62 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 50.01575 126.0394 0 ] /Rect [ 279.1024 416.0394 351.1024 428.0394 ] /Subtype /Link /Type /Annot >>
endobj
63 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 678.0394 0 ] /Rect [ 279.1024 398.0394 393.1024 410.0394 ] /Subtype /Link /Type /Annot >>
endobj
64 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 168.0394 0 ] /Rect [ 279.1024 380.0394 411.1024 392.0394 ] /Subtype /Link /Type /Annot >>
endobj
65 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 525.0394 0 ] /Rect [ 279.1024 362.0394 411.1024 374.0394 ] /Subtype /Link /Type /Annot >>
endobj
66 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 636.0394 0 ] /Rect [ 279.1024 344.0394 423.1024 356.0394 ] /Subtype /Link /Type /Annot >>
endobj
67 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 567.0394 0 ] /Rect [ 279.1024 326.0394 417.1024 338.0394 ] /Subtype /Link /Type /Annot >>
endobj
68 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 789.0394 0 ] /Rect [ 279.1024 308.0394 435.1024 320.0394 ] /Subtype /Link /Type /Annot >>
endobj
69 0 obj
<< /Annots [ 59 0 R 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R ] /Contents 121 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
70 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Two%27s_complement) >> /Border [ 0 0 0 ] /Rect [ 167.7357 316.4394 391.1457 328.4394 ] /Subtype /Link /Type /Annot >>
endobj
71 0 obj
<< /Annots [ 70 0 R ] /Contents 122 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
72 0 obj
<< /BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font >>
endobj
73 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 581.8394 0 ] /Rect [ 151.0551 310.5894 212.1851 322.5894 ] /Subtype /Link /Type /Annot >>
endobj
74 0 obj
<< /Annots [ 73 0 R ] /Contents 123 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
75 0 obj
<< /Contents 124 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
76 0 obj
<< /Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
77 0 obj
<< /Contents 126 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
78 0 obj
<< /Contents 127 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
79 0 obj
<< /Contents 128 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
80 0 obj
<< /Contents 129 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
81 0 obj
<< /Contents 130 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
82 0 obj
<< /Contents 131 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
83 0 obj
<< /Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
84 0 obj
<< /Contents 133 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
85 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 665.8394 0 ] /Rect [ 40.01575 708.6394 132.2657 720.6394 ] /Subtype /Link /Type /Annot >>
endobj
86 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 452.8394 0 ] /Rect [ 40.01575 690.6394 136.7057 702.6394 ] /Subtype /Link /Type /Annot >>
endobj
87 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 99.03937 0 ] /Rect [ 40.01575 672.6394 126.7057 684.6394 ] /Subtype /Link /Type /Annot >>
endobj
88 0 obj
<< /Annots [ 85 0 R 86 0 R 87 0 R ] /Contents 134 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
89 0 obj
<< /Outlines 91 0 R /PageLabels 135 0 R /PageMode /UseNone /Pages 115 0 R /Type /Catalog >>
endobj
90 0 obj
<< /Author () /CreationDate <rst2pdf.createpdf.PDFDate instance at 0x7f4f747e3170> /Creator (\(unspecified\)) /Keywords () /ModDate <rst2pdf.createpdf.PDFDate instance at 0x7f4f747e3170> /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False >>
endobj
91 0 obj
<< /Count 29 /First 92 0 R /Last 114 0 R /Type /Outlines >>
endobj
92 0 obj
<< /Count 20 /Dest [ 58 0 R /XYZ 40.01575 787.0394 0 ] /First 93 0 R /Last 107 0 R /Next 113 0 R /Parent 91 0 R 
  /Title (Welcome to pyModbusTCP's documentation) >>
endobj
93 0 obj
<< /Count 7 /Dest [ 58 0 R /XYZ 40.01575 747.0394 0 ] /First 94 0 R /Last 100 0 R /Next 101 0 R /Parent 92 0 R 
  /Title (Quick start guide) >>
endobj
94 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 711.8394 0 ] /Next 95 0 R /Parent 93 0 R /Title (Overview of the package) >>
endobj
95 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 519.8594 0 ] /Next 96 0 R /Parent 93 0 R /Prev 94 0 R /Title (Package setup) >>
endobj
96 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 315.4594 0 ] /Next 97 0 R /Parent 93 0 R /Prev 95 0 R /Title (ModbusClient: init) >>
endobj
97 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 99.05937 0 ] /Next 98 0 R /Parent 93 0 R /Prev 96 0 R /Title (ModbusClient: manage TCP link) >>
endobj
98 0 obj
<< /Dest [ 69 0 R /XYZ 40.01575 515.8394 0 ] /Next 99 0 R /Parent 93 0 R /Prev 97 0 R /Title (ModbusClient: available modbus requests functions) >>
endobj
99 0 obj
<< /Dest [ 71 0 R /XYZ 40.01575 787.0394 0 ] /Next 100 0 R /Parent 93 0 R /Prev 98 0 R /Title (ModbusClient: debug mode) >>
endobj
100 0 obj
<< /Dest [ 71 0 R /XYZ 40.01575 541.0394 0 ] /Parent 93 0 R /Prev 99 0 R /Title (utils module: Modbus data mangling) >>
endobj
101 0 obj
<< /Count 5 /Dest [ 74 0 R /XYZ 40.01575 716.2394 0 ] /First 102 0 R /Last 106 0 R /Next 107 0 R /Parent 92 0 R 
  /Prev 93 0 R /Title (pyModbusTCP modules documentation) >>
endobj
102 0 obj
<< /Count 1 /Dest [ 74 0 R /XYZ 40.01575 663.0394 0 ] /First 103 0 R /Last 103 0 R /Next 104 0 R /Parent 101 0 R 
  /Title (Module pyModbusTCP.client) >>
endobj
103 0 obj
<< /Dest [ 74 0 R /XYZ 40.01575 612.2394 0 ] /Parent 102 0 R /Title (class pyModbusTCP.client.ModbusClient) >>
endobj
104 0 obj
<< /Count 1 /Dest [ 77 0 R /XYZ 40.01575 450.0394 0 ] /First 105 0 R /Last 105 0 R /Next 106 0 R /Parent 101 0 R 
  /Prev 102 0 R /Title (Module pyModbusTCP.server) >>
endobj
105 0 obj
<< /Dest [ 77 0 R /XYZ 40.01575 399.2394 0 ] /Parent 104 0 R /Title (class pyModbusTCP.client.ModbusServer) >>
endobj
106 0 obj
<< /Dest [ 77 0 R /XYZ 40.01575 149.8394 0 ] /Parent 101 0 R /Prev 104 0 R /Title (Module pyModbusTCP.utils) >>
endobj
107 0 obj
<< /Count 5 /Dest [ 79 0 R /XYZ 40.01575 414.0394 0 ] /First 108 0 R /Last 112 0 R /Parent 92 0 R /Prev 101 0 R 
  /Title (pyModbusTCP examples) >>
endobj
108 0 obj
<< /Dest [ 80 0 R /XYZ 40.01575 787.0394 0 ] /Next 109 0 R /Parent 107 0 R /Title (Simple read registers example) >>
endobj
109 0 obj
<< /Dest [ 81 0 R /XYZ 40.01575 787.0394 0 ] /Next 110 0 R /Parent 107 0 R /Prev 108 0 R /Title (Simple read bits example) >>
endobj
110 0 obj
<< /Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Next 111 0 R /Parent 107 0 R /Prev 109 0 R /Title (Simple write bits example) >>
endobj
111 0 obj
<< /Dest [ 83 0 R /XYZ 40.01575 740.2394 0 ] /Next 112 0 R /Parent 107 0 R /Prev 110 0 R /Title (An example with a modbus polling thread) >>
endobj
112 0 obj
<< /Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Parent 107 0 R /Prev 111 0 R /Title (Simple blocking server example) >>
endobj
113 0 obj
<< /Dest [ 84 0 R /XYZ 40.01575 537.4394 0 ] /Next 114 0 R /Parent 91 0 R /Prev 92 0 R /Title (Indices and tables) >>
endobj
114 0 obj
<< /Dest [ 88 0 R /XYZ 40.01575 799.0394 0 ] /Parent 91 0 R /Prev 113 0 R /Title (Python Module Index) >>
endobj
115 0 obj
<< /Count 19 /Kids [ 4 0 R 5 0 R 52 0 R 53 0 R 58 0 R 69 0 R 71 0 R 74 0 R 75 0 R 76 0 R 
  77 0 R 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 88 0 R ] /Type /Pages >>
endobj
116 0 obj
<< /Length 949 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 113.172 0 Td (pyModbusTCP documentation) Tj T* -113.172 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 212.1795 0 Td (version 0.1.2) Tj T* -212.1795 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 218.61 0 Td (Loic Lefebvre) Tj T* -218.61 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F1 12 Tf 14.4 TL 203.256 0 Td (September 28, 2017) Tj T* -203.256 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
117 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
118 0 obj
<< /Length 6370 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 355.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 399 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 399 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 381 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 381 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 363 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 363 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 345 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 345 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 309 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 309 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 291 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 291 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.server) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (class pyModbusTCP.client.ModbusServer) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (10) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (11) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (12) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (13) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple blocking server example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (14) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (14) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (15) Tj T* -60.88 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 355.0394 cm
Q
q
1 0 0 1 40.01575 355.0394 cm
Q
 
endstream
endobj
119 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
120 0 obj
<< /Length 5004 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 695.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 665.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .072131 Tw (pyModbusTCP give access to modbus/TCP server through the ModbusClient object. This class is define in the client) Tj T* 0 Tw (module.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 635.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .324426 Tw (Since version 0.1.0, a server is available as ModbusServer class. This server is currently in test \(API can change at) Tj T* 0 Tw (any time\).) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 605.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .666705 Tw (To deal with frequent need of modbus data mangling \(for example convert 32 bits IEEE float to 2x16 bits words\) a) Tj T* 0 Tw (special module named utils provide some helpful functions.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 587.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Package map:) Tj T* ET
Q
Q
q
1 0 0 1 207.0078 535.8594 cm
q
181.26 0 0 45.18 0 0 cm
/FormXob.rst2pdf_image_0 Do
Q
Q
q
1 0 0 1 40.01575 503.0594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 485.0594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from PyPi:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 406.2594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (# for Python 2.7) Tj T* (sudo pip-2.7 install pyModbusTCP) Tj T* (# or for Python 3.2) Tj T* (sudo pip-3.2 install pyModbusTCP) Tj T* (# or upgrade from an older release) Tj T* (sudo pip-3.2 install pyModbusTCP --upgrade) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 386.2594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from Github:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 331.4594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (git clone https://github.com/sourceperl/pyModbusTCP.git) Tj T* (cd pyModbusTCP) Tj T* (# here change "python" by your python target\(s\) version\(s\) \(like python3.2\)) Tj T* (sudo python setup.py install) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 298.6594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 280.6594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (init module from constructor \(raise ValueError if host/port error\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 213.8594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (from pyModbusTCP.client import ModbusClient) Tj T* (try:) Tj T* (    c = ModbusClient\(host="localhost", port=502\)) Tj T* (except ValueError:) Tj T* (    print\("Error with host or port params"\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 193.8594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (you can also init module from functions host/port return None if error:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 115.0594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (from pyModbusTCP.client import ModbusClient) Tj T* (c = ModbusClient\(\)) Tj T* (if not c.host\("localhost"\):) Tj T* (    print\("host error"\)) Tj T* (if not c.port\(502\):) Tj T* (    print\("port error"\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 82.25937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 64.25937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now, it's possible to use auto mode to let module deal with TCP open/close.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
121 0 obj
<< /Length 12298 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For keep TCP open, add auto_open=True in init:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c = ModbusClient\(host="localhost", auto_open=True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 736.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For open/close socket before/after read or write, do this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 717.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c = ModbusClient\(host="localhost", auto_open=True, auto_close=True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 697.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can also open manually the TCP link. After this, you call a modbus request function \(see list in next section\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 642.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (if c.open\(\):) Tj T* (    regs_list_1 = c.read_holding_registers\(0, 10\)) Tj T* (    regs_list_2 = c.read_holding_registers\(55, 10\)) Tj T* (    c.close\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 622.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (With a forever polling loop, TCP always open \(auto-reconnect code\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 531.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 90 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F4 10 Tf 12 TL (while True:) Tj T* (    if c.is_open\(\):) Tj T* (        regs_list_1 = c.read_holding_registers\(0, 10\)) Tj T* (        regs_list_2 = c.read_holding_registers\(55, 10\)) Tj T* (    else:) Tj T* (        c.open\(\)) Tj T* (    time.sleep\(1\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 499.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 481.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (See ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Modbus ) Tj 0 0 0 rg (for full table.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 475.0394 cm
Q
q
1 0 0 1 40.01575 83.03937 cm
1 1 1 rg
n 0 392 515.2441 -26 re f*
.878431 .878431 .878431 rg
n 0 366 515.2441 -18 re f*
1 1 1 rg
n 0 348 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 330 515.2441 -18 re f*
1 1 1 rg
n 0 312 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 294 515.2441 -18 re f*
1 1 1 rg
n 0 276 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 258 515.2441 -18 re f*
1 1 1 rg
n 0 240 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 222 515.2441 -30 re f*
1 1 1 rg
n 0 192 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 174 515.2441 -18 re f*
1 1 1 rg
n 0 156 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 138 515.2441 -18 re f*
1 1 1 rg
n 0 120 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 102 515.2441 -18 re f*
1 1 1 rg
n 0 84 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 66 515.2441 -18 re f*
1 1 1 rg
n 0 48 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 30 515.2441 -30 re f*
.960784 .960784 .862745 rg
n 0 392 515.2441 -26 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 369 cm
q
.960784 .960784 .862745 rg
n 0 0 37.07087 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL .200433 0 Td (Domain) Tj T* -0.200433 0 Td ET
Q
Q
q
1 0 0 1 55.07087 369 cm
q
.960784 .960784 .862745 rg
n 0 0 110.6772 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 19.77858 0 Td (Function name) Tj T* -19.77858 0 Td ET
Q
Q
q
1 0 0 1 177.748 369 cm
q
.960784 .960784 .862745 rg
n 0 0 49.33858 20 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 10 Tm /F2 10 Tf 10 TL 3.559291 0 Td (Function) Tj T* 9.44 0 Td (code) Tj T* -12.99929 0 Td ET
Q
Q
q
1 0 0 1 239.0866 369 cm
q
.960784 .960784 .862745 rg
n 0 0 270.1575 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 80.91374 0 Td (ModbusClient function) Tj T* -80.91374 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Bit) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Discrete Inputs) Tj T* ET
Q
Q
q
1 0 0 1 177.748 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 351 cm
q
.933333 1 .8 rg
n 0 0 132 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_discrete_inputs\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 333 cm
q
.933333 1 .8 rg
n 0 0 72 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_coils\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Coil) Tj T* ET
Q
Q
q
1 0 0 1 177.748 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 315 cm
q
.933333 1 .8 rg
n 0 0 114 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_coil\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (15) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 297 cm
q
.933333 1 .8 rg
n 0 0 132 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_coils\(\)) Tj T* ET
Q
Q
q
1 0 0 1 6 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Registe) Tj T* (r) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Input Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 279 cm
q
.933333 1 .8 rg
n 0 0 132 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_input_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Holding Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 261 cm
q
.933333 1 .8 rg
n 0 0 144 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_holding_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 243 cm
q
.933333 1 .8 rg
n 0 0 138 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_register\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 225 cm
q
.933333 1 .8 rg
n 0 0 156 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read/Write Multiple) Tj T* (Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (23) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Mask Write Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (22) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (File) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read FIFO Queue) Tj T* ET
Q
Q
q
1 0 0 1 177.748 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (24) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (20) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (21) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Exception Status) Tj T* ET
Q
Q
q
1 0 0 1 177.748 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Diagnos) Tj T* (tic) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Diagnostic) Tj T* ET
Q
Q
q
1 0 0 1 177.748 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Counter) Tj T* ET
Q
Q
q
1 0 0 1 177.748 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Log) Tj T* ET
Q
Q
q
1 0 0 1 177.748 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Report Slave ID) Tj T* ET
Q
Q
q
1 0 0 1 177.748 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (17) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read Device) Tj T* (Identification) Tj T* ET
Q
Q
q
1 0 0 1 177.748 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (43) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 366 m 515.2441 366 l S
n 49.07087 348 m 515.2441 348 l S
n 49.07087 330 m 515.2441 330 l S
n 49.07087 312 m 515.2441 312 l S
n 0 294 m 515.2441 294 l S
n 49.07087 276 m 515.2441 276 l S
n 49.07087 258 m 515.2441 258 l S
n 49.07087 240 m 515.2441 240 l S
n 49.07087 222 m 515.2441 222 l S
n 49.07087 192 m 515.2441 192 l S
n 0 174 m 515.2441 174 l S
n 49.07087 156 m 515.2441 156 l S
n 49.07087 138 m 515.2441 138 l S
n 49.07087 120 m 515.2441 120 l S
n 0 102 m 515.2441 102 l S
n 49.07087 84 m 515.2441 84 l S
n 49.07087 66 m 515.2441 66 l S
n 49.07087 48 m 515.2441 48 l S
n 49.07087 30 m 515.2441 30 l S
n 49.07087 0 m 49.07087 392 l S
n 171.748 0 m 171.748 392 l S
n 233.0866 0 m 233.0866 392 l S
n 0 392 m 515.2441 392 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 392 l S
n 515.2441 0 m 515.2441 392 l S
Q
Q
q
1 0 0 1 40.01575 83.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
122 0 obj
<< /Length 6084 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 752.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If need, you can enable a debug mode for ModbusClient like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (from pyModbusTCP.client import ModbusClient) Tj T* (c = ModbusClient\(host="localhost", port=502, debug=True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 701.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 682.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c.debug\(True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 662.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (when debug is enable all debug message is print on console and you can see modbus frame:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 643.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c.read_holding_registers\(0, 4\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 623.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (print:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 557.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (Tx) Tj T* ([E7 53 00 00 00 06 01] 03 00 00 00 04) Tj T* (Rx) Tj T* ([E7 53 00 00 00 0B 01] 03 08 00 00 00 6F 00 00 00 00) Tj T* ([0, 111, 0, 0]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 524.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 506.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sample data mangling, usefull for interface PLC device.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 500.2394 cm
Q
q
1 0 0 1 40.01575 500.2394 cm
Q
q
1 0 0 1 40.01575 337.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16 bits to 32 bits integers:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 150 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 134 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T* (list_16_bits = [0x0123, 0x4567, 0x89ab, 0xcdef]) Tj T*  T* (# big endian sample \(default\)) Tj T* (list_32_bits = utils.word_list_to_long\(list_16_bits\)) Tj T* (# display "['0x1234567', '0x89abcdef']") Tj T* (print\([hex\(i\) for i in list_32_bits]\)) Tj T*  T* (# little endian sample) Tj T* (list_32_bits = utils.word_list_to_long\(list_16_bits, big_endian=False\)) Tj T* (# display "['0x45670123', '0xcdef89ab']") Tj T* (print\([hex\(i\) for i in list_32_bits]\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 331.4394 cm
Q
q
1 0 0 1 40.01575 216.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 99.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 99.8 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (two's complement \(see ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Two%27s_complement) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 102 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T* (list_16_bits = [0x0000, 0xFFFF, 0x00FF, 0x8001]) Tj T*  T* (# display "[0, -1, 255, -32767]") Tj T* (print\(utils.get_list_2comp\(list_16_bits, 16\)\)) Tj T*  T* (# display "-1") Tj T* (print\(utils.get_2comp\(list_16_bits[1], 16\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 210.6394 cm
Q
q
1 0 0 1 40.01575 155.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (an integer of val_size bits \(default is 16\) to an array of boolean:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 42 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T* (# display "[True, False, True, False, False, False, False, False]") Tj T* (print\(utils.get_bits_from_int\(0x05, val_size=8\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 149.8394 cm
Q
q
1 0 0 1 40.01575 54.85039 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 79.98898 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 79.98898 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (gateway between IEEE single precision float and python float:) Tj T* ET
Q
Q
q
1 0 0 1 23 13.18898 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 488.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T*  T* (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj T* (# display "0x3e99999a") Tj T* (print\(hex\(utils.encode_ieee\(0.3\)\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
123 0 obj
<< /Length 11360 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 732.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 41.8 Tm  T* ET
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 488.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL  T* (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj T* (# display "0.300000011921" \(it's not 0.3, precision leak with float...\)) Tj T* (print\(utils.decode_ieee\(0x3e99999a\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 732.2394 cm
Q
q
1 0 0 1 40.01575 697.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 679.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Contents:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 646.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 628.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (This module provide the ModbusClient class used to deal with modbus server.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 597.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 585.8394 cm
Q
q
1 0 0 1 40.01575 555.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.578819 Tw 12 TL /F6 10 Tf 0 0 0 rg (class ) Tj /F4 10 Tf 0 0 0 rg (pyModbusTCP.client.) Tj /F5 10 Tf 0 0 0 rg (ModbusClient ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (unit_id=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (timeout=None) Tj /F1 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (debug=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (auto_open=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (auto_close=None) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 543.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus TCP client) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 537.8394 cm
Q
q
1 0 0 1 50.01575 507.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.092349 Tw 12 TL /F5 10 Tf 0 0 0 rg (__init__ ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (debug=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (auto_open=None) Tj /F2 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (auto_close=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 495.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Constructor) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 483.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Modbus server params \(host, port\) can be set here or with host\(\), port\(\) functions. Same for debug option.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 471.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use functions avoid to launch ValueError except if params is incorrect.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 465.8394 cm
Q
q
1 0 0 1 60.01575 336.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 111 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (host ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address server address \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 105 cm
Q
q
1 0 0 1 91.03937 93 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- TCP port number \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 87 cm
Q
q
1 0 0 1 91.03937 75 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- unit ID \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 57 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (float) Tj /F1 10 Tf (\) -- socket timeout in seconds \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 51 cm
Q
q
1 0 0 1 91.03937 39 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (debug ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- debug state \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_open ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP connect \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_close ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP close \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 321.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Object ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 306.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 291.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 37.46937 0 Td (Raises:) Tj T* -37.46937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ValueError ) Tj /F1 10 Tf (-- if a set parameter value is incorrect) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 285.8394 cm
Q
q
1 0 0 1 50.01575 267.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_close ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 255.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP close mode \(after each request\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 249.8394 cm
Q
q
1 0 0 1 60.01575 234.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_close state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 219.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_close state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 204.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 198.8394 cm
Q
q
1 0 0 1 50.01575 180.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_open ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 168.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP connect mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 162.8394 cm
Q
q
1 0 0 1 60.01575 147.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_open state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 132.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_open state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 117.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 111.8394 cm
Q
q
1 0 0 1 50.01575 93.83937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (close ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 81.83937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Close TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 75.83937 cm
Q
q
1 0 0 1 60.01575 60.83937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (close status \(True for close/None if already close\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
 
endstream
endobj
124 0 obj
<< /Length 11560 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 60.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 766.0394 cm
Q
q
1 0 0 1 50.01575 748.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (debug ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 736.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set debug mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 730.0394 cm
Q
q
1 0 0 1 60.01575 715.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool or None) Tj /F1 10 Tf (\) -- debug state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 700.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (debug state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 685.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 679.0394 cm
Q
q
1 0 0 1 50.01575 661.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (host ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (hostname=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 649.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set host \(IPv4/IPv6 or hostname like 'plc.domain.net'\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 643.0394 cm
Q
q
1 0 0 1 60.01575 628.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hostname ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str or None) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 613.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (hostname or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 598.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 592.0394 cm
Q
q
1 0 0 1 50.01575 574.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (is_open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 562.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get status of TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 556.0394 cm
Q
q
1 0 0 1 60.01575 541.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (status \(True for open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 526.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 520.0394 cm
Q
q
1 0 0 1 50.01575 502.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_error ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 490.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last error code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 484.0394 cm
Q
q
1 0 0 1 60.01575 469.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last error code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 454.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 448.0394 cm
Q
q
1 0 0 1 50.01575 430.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_except ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 418.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last except code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 412.0394 cm
Q
q
1 0 0 1 60.01575 397.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last except code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 382.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 376.0394 cm
Q
q
1 0 0 1 50.01575 358.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (mode ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (mode=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 346.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set modbus mode \(TCP or RTU\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 340.0394 cm
Q
q
1 0 0 1 60.01575 325.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (mode ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- mode \(MODBUS_TCP/MODBUS_RTU\) to set or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 310.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (mode or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 295.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 289.0394 cm
Q
q
1 0 0 1 50.01575 271.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 259.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Connect to modbus server \(open TCP connection\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 253.0394 cm
Q
q
1 0 0 1 60.01575 238.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (connect status \(True if open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 223.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 217.0394 cm
Q
q
1 0 0 1 50.01575 199.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (port ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 187.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set TCP port) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 181.0394 cm
Q
q
1 0 0 1 60.01575 166.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int or None) Tj /F1 10 Tf (\) -- TCP port number or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 151.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TCP port or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 136.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 130.0394 cm
Q
q
1 0 0 1 50.01575 112.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_coils ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 100.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_COILS \(0x01\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 94.03937 cm
Q
q
1 0 0 1 60.01575 55.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
 
endstream
endobj
125 0 obj
<< /Length 13387 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 60.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 751.0394 cm
Q
q
1 0 0 1 50.01575 733.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_discrete_inputs ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 721.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_DISCRETE_INPUTS \(0x02\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 715.0394 cm
Q
q
1 0 0 1 60.01575 676.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 661.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 646.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 640.0394 cm
Q
q
1 0 0 1 50.01575 622.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_holding_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 610.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_HOLDING_REGISTERS \(0x03\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 604.0394 cm
Q
q
1 0 0 1 60.01575 565.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 550.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 535.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 529.0394 cm
Q
q
1 0 0 1 50.01575 511.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_input_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 499.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_INPUT_REGISTERS \(0x04\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 493.0394 cm
Q
q
1 0 0 1 60.01575 454.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 439.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 424.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 418.0394 cm
Q
q
1 0 0 1 50.01575 400.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (timeout ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 388.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set timeout field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 382.0394 cm
Q
q
1 0 0 1 60.01575 367.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (float or None) Tj /F1 10 Tf (\) -- socket timeout in seconds or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 352.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (timeout or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 337.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 331.0394 cm
Q
q
1 0 0 1 50.01575 313.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (unit_id ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 301.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set unit ID field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 295.0394 cm
Q
q
1 0 0 1 60.01575 280.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int or None) Tj /F1 10 Tf (\) -- unit ID \(0 to 255\) or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 265.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unit ID or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 250.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 244.0394 cm
Q
q
1 0 0 1 50.01575 226.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (version ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 214.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get package version) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 208.0394 cm
Q
q
1 0 0 1 60.01575 193.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (current version of the package \(like "0.0.1"\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 178.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 172.0394 cm
Q
q
1 0 0 1 50.01575 154.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_coils ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bits_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bits_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 142.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_MULTIPLE_COILS \(0x0F\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 136.0394 cm
Q
q
1 0 0 1 60.01575 97.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bits_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bits address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bits_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- bits values to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 82.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 67.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 61.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
 
endstream
endobj
126 0 obj
<< /Length 11988 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 775.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (regs_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (regs_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 763.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_MULTIPLE_REGISTERS \(0x10\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
Q
q
1 0 0 1 60.01575 718.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (regs_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- registers address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (regs_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- registers values to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 703.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 688.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 682.0394 cm
Q
q
1 0 0 1 50.01575 664.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_coil ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bit_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 652.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_COIL \(0x05\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 646.0394 cm
Q
q
1 0 0 1 60.01575 607.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- bit value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 592.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 577.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 571.0394 cm
Q
q
1 0 0 1 50.01575 553.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_register ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (reg_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 541.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_REGISTER \(0x06\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 535.0394 cm
Q
q
1 0 0 1 60.01575 496.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 481.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 466.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 433.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.server) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 415.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (This module provide the ModbusServer class.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 384.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (class pyModbusTCP.client.ModbusServer) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 372.8394 cm
Q
q
1 0 0 1 40.01575 342.8394 cm
q
BT 1 0 0 1 0 14 Tm 13.11352 Tw 12 TL /F6 10 Tf 0 0 0 rg (class ) Tj /F4 10 Tf 0 0 0 rg (pyModbusTCP.server.) Tj /F5 10 Tf 0 0 0 rg (ModbusServer ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host='localhost') Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=502) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (no_block=False) Tj /F1 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (ipv6=False) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 330.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus TCP server) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 324.8394 cm
Q
q
1 0 0 1 50.01575 306.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (__init__ ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host='localhost') Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=502) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (no_block=False) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (ipv6=False) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 294.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Constructor) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 282.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Modbus server constructor.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 276.8394 cm
Q
q
1 0 0 1 60.01575 201.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 57 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (host ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address server address \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 51 cm
Q
q
1 0 0 1 91.03937 39 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- TCP port number \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (no_block ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- set no block mode, in this mode start\(\) return \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ipv6 ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- use ipv6 stack) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 195.8394 cm
Q
q
1 0 0 1 50.01575 177.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (__weakref__) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 165.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (list of weak references to the object \(if defined\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 133.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 115.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (This module provide a set of functions for modbus data mangling.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 109.0394 cm
Q
q
1 0 0 1 40.01575 97.03937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (crc16 ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (frame) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 85.03937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Compute CRC16) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 79.03937 cm
Q
q
1 0 0 1 50.01575 64.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (frame ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str \(Python2\) or class bytes \(Python3\)) Tj /F1 10 Tf (\) -- frame) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
 
endstream
endobj
127 0 obj
<< /Length 14571 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CRC16) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 751.0394 cm
Q
q
1 0 0 1 40.01575 739.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (decode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 727.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Decode Python int \(32 bits integer\) as an IEEE single precision format) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 715.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 709.0394 cm
Q
q
1 0 0 1 50.01575 694.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- a 32 bit integer as an int Python value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 679.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 664.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 658.0394 cm
Q
q
1 0 0 1 40.01575 646.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (encode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_float) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 634.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Encode Python float to int \(32 bits integer\) as an IEEE single precision) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 622.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 616.0394 cm
Q
q
1 0 0 1 50.01575 601.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_float ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (float) Tj /F1 10 Tf (\) -- float value to convert) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 586.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IEEE 32 bits \(single precision\) as Python int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 571.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 565.0394 cm
Q
q
1 0 0 1 40.01575 553.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 541.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python int val_int) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 535.0394 cm
Q
q
1 0 0 1 50.01575 496.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 481.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 466.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 460.0394 cm
Q
q
1 0 0 1 40.01575 448.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_bits_from_int ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 436.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the list of bits of val_int integer \(default size is 16 bits\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 424.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Return bits list, least significant bit first. Use list.reverse\(\) if need.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 418.0394 cm
Q
q
1 0 0 1 50.01575 379.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- integer value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of integer \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 364.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of boolean "bits" \(least significant first\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 349.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 343.0394 cm
Q
q
1 0 0 1 40.01575 331.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_list_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 319.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python list val_list) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 313.0394 cm
Q
q
1 0 0 1 50.01575 274.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- list of int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 259.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 244.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 238.0394 cm
Q
q
1 0 0 1 40.01575 226.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (reset_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 214.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Reset a bit at offset position) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 208.0394 cm
Q
q
1 0 0 1 50.01575 169.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer where reset the bit) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 154.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of integer with bit reset) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 139.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 133.0394 cm
Q
q
1 0 0 1 40.01575 121.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (set_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 109.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Set a bit at offset position) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 103.0394 cm
Q
q
1 0 0 1 50.01575 64.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer where set the bit) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
 
endstream
endobj
128 0 obj
<< /Length 7985 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of integer with bit set) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 751.0394 cm
Q
q
1 0 0 1 40.01575 739.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (test_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 727.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Test a bit at offset position) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 721.0394 cm
Q
q
1 0 0 1 50.01575 682.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer to test) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 667.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of bit at offset position) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 652.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 646.0394 cm
Q
q
1 0 0 1 40.01575 634.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (toggle_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 622.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Return an integer with the bit at offset position inverted) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 616.0394 cm
Q
q
1 0 0 1 50.01575 577.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer where invert the bit) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 562.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of integer with bit inverted) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 547.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 541.0394 cm
Q
q
1 0 0 1 40.01575 529.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (word_list_to_long ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (big_endian=True) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 517.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Word list \(16 bits int\) to long list \(32 bits int\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 505.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (By default word_list2long\(\) use big endian order. For use little endian, set big_endian param to False.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 499.0394 cm
Q
q
1 0 0 1 50.01575 460.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- list of 16 bits int value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (big_endian ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- True for big endian/False for little \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 445.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 430.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 394.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 376.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (Here some examples to see pyModbusTCP in some usages cases) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
 
endstream
endobj
129 0 obj
<< /Length 2153 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 241.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 522 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 506 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# read_register) Tj T* (# read 10 registers and print result on stdout) Tj T*  T* (# you can use the tiny modbus server "mbserverd" to test this code) Tj T* (# mbserverd is here: https://github.com/sourceperl/mbserverd) Tj T*  T* (# the command line modbus client mbtget can also be useful) Tj T* (# mbtget is here: https://github.com/sourceperl/mbtget) Tj T*  T* (from pyModbusTCP.client import ModbusClient) Tj T* (import time) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (c = ModbusClient\(\)) Tj T*  T* (# uncomment this line to see debug message) Tj T* (#c.debug\(True\)) Tj T*  T* (# define modbus server host, port) Tj T* (c.host\(SERVER_HOST\)) Tj T* (c.port\(SERVER_PORT\)) Tj T*  T* (while True:) Tj T* (    # open or reconnect TCP to server) Tj T* (    if not c.is_open\(\):) Tj T* (        if not c.open\(\):) Tj T* (            print\("unable to connect to "+SERVER_HOST+":"+str\(SERVER_PORT\)\)) Tj T*  T* (    # if open\(\) is ok, read register \(modbus function 0x03\)) Tj T* (    if c.is_open\(\):) Tj T* (        # read 10 registers at address 0, store result in regs list) Tj T* (        regs = c.read_holding_registers\(0, 10\)) Tj T* (        # if success display registers) Tj T* (        if regs:) Tj T* (            print\("reg ad #0 to 9: "+str\(regs\)\)) Tj T*  T* (    # sleep 2s before next polling) Tj T* (    time.sleep\(2\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (10) Tj T* ET
Q
Q
 
endstream
endobj
130 0 obj
<< /Length 1836 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 313.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 450 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 434 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# read_bit) Tj T* (# read 10 bits and print result on stdout) Tj T*  T* (from pyModbusTCP.client import ModbusClient) Tj T* (import time) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (c = ModbusClient\(\)) Tj T*  T* (# uncomment this line to see debug message) Tj T* (#c.debug\(True\)) Tj T*  T* (# define modbus server host, port) Tj T* (c.host\(SERVER_HOST\)) Tj T* (c.port\(SERVER_PORT\)) Tj T*  T* (while True:) Tj T* (    # open or reconnect TCP to server) Tj T* (    if not c.is_open\(\):) Tj T* (        if not c.open\(\):) Tj T* (            print\("unable to connect to "+SERVER_HOST+":"+str\(SERVER_PORT\)\)) Tj T*  T* (    # if open\(\) is ok, read coils \(modbus function 0x01\)) Tj T* (    if c.is_open\(\):) Tj T* (        # read 10 bits at address 0, store result in regs list) Tj T* (        bits = c.read_coils\(0, 10\)) Tj T* (        # if success display registers) Tj T* (        if bits:) Tj T* (            print\("bit ad #0 to 9: "+str\(bits\)\)) Tj T*  T* (    # sleep 2s before next polling) Tj T* (    time.sleep\(2\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
 
endstream
endobj
131 0 obj
<< /Length 2525 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 73.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 690 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 674 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# write_bit) Tj T* (# write 4 bits to True, wait 2s, write False, restart...) Tj T*  T* (from pyModbusTCP.client import ModbusClient) Tj T* (import time) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (c = ModbusClient\(\)) Tj T*  T* (# uncomment this line to see debug message) Tj T* (#c.debug\(True\)) Tj T*  T* (# define modbus server host, port) Tj T* (c.host\(SERVER_HOST\)) Tj T* (c.port\(SERVER_PORT\)) Tj T*  T* (toggle = True) Tj T*  T* (while True:) Tj T* (    # open or reconnect TCP to server) Tj T* (    if not c.is_open\(\):) Tj T* (        if not c.open\(\):) Tj T* (            print\("unable to connect to "+SERVER_HOST+":"+str\(SERVER_PORT\)\)) Tj T*  T* (    # if open\(\) is ok, write coils \(modbus function 0x01\)) Tj T* (    if c.is_open\(\):) Tj T* (        # write 4 bits in modbus address 0 to 3) Tj T* (        print\(""\)) Tj T* (        print\("write bits"\)) Tj T* (        print\("----------"\)) Tj T* (        print\(""\)) Tj T* (        for addr in range\(4\):) Tj T* (            is_ok = c.write_single_coil\(addr, toggle\)) Tj T* (            if is_ok:) Tj T* (                print\("bit #" + str\(addr\) + ": write to " + str\(toggle\)\)) Tj T* (            else:) Tj T* (                print\("bit #" + str\(addr\) + ": unable to write " + str\(toggle\)\)) Tj T* (            time.sleep\(0.5\)) Tj T*  T* (        time.sleep\(1\)) Tj T*  T* (        print\(""\)) Tj T* (        print\("read bits"\)) Tj T* (        print\("---------"\)) Tj T* (        print\(""\)) Tj T* (        bits = c.read_coils\(0, 4\)) Tj T* (        if bits:) Tj T* (            print\("bits #0 to 3: "+str\(bits\)\)) Tj T* (        else:) Tj T* (            print\("unable to read"\)) Tj T*  T* (    toggle = not toggle) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
 
endstream
endobj
132 0 obj
<< /Length 2597 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (    # sleep 2s before next polling) Tj T* (    time.sleep\(2\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 723.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 98.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 618 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 602 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# modbus_thread) Tj T* (# start a thread for polling a set of registers, display result on console) Tj T* (# exit with ctrl+c) Tj T*  T* (import time) Tj T* (from threading import Thread, Lock) Tj T* (from pyModbusTCP.client import ModbusClient) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (# set global) Tj T* (regs = []) Tj T*  T* (# init a thread lock) Tj T* (regs_lock = Lock\(\)) Tj T*  T* (# modbus polling thread) Tj T* (def polling_thread\(\):) Tj T* (    global regs) Tj T* (    c = ModbusClient\(host=SERVER_HOST, port=SERVER_PORT\)) Tj T* (    # polling loop) Tj T* (    while True:) Tj T* (        # keep TCP open) Tj T* (        if not c.is_open\(\):) Tj T* (            c.open\(\)) Tj T* (        # do modbus reading on socket) Tj T* (        reg_list = c.read_holding_registers\(0,10\)) Tj T* (        # if read is ok, store result in regs \(with thread lock synchronization\)) Tj T* (        if reg_list:) Tj T* (            with regs_lock:) Tj T* (                regs = reg_list) Tj T* (        # 1s before next polling) Tj T* (        time.sleep\(1\)) Tj T*  T* (# start polling thread) Tj T* (tp = Thread\(target=polling_thread\)) Tj T* (# set daemon: polling thread will exit if main thread exit) Tj T* (tp.daemon = True) Tj T* (tp.start\(\)) Tj T*  T* (# display loop \(in main thread\)) Tj T* (while True:) Tj T* (    # print regs list \(with thread lock synchronization\)) Tj T* (    with regs_lock:) Tj T* (        print\(regs\)) Tj T* (    # 1s before next print) Tj T* (    time.sleep\(1\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (13) Tj T* ET
Q
Q
 
endstream
endobj
133 0 obj
<< /Length 2709 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple blocking server example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 553.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 210 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 194 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python3) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# Modbus/TCP server) Tj T*  T* (import argparse) Tj T* (from pyModbusTCP.server import ModbusServer) Tj T*  T* (if __name__ == '__main__':) Tj T* (    # parse args) Tj T* (    parser = argparse.ArgumentParser\(\)) Tj T* (    parser.add_argument\('-H', '--host', type=str, default='localhost', help='Host'\)) Tj T* (    parser.add_argument\('-p', '--port', type=int, default=502, help='TCP port'\)) Tj T* (    args = parser.parse_args\(\)) Tj T* (    # start modbus server) Tj T* (    server = ModbusServer\(host=args.host, port=args.port\)) Tj T* (    server.start\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 513.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 501.4394 cm
Q
q
1 0 0 1 40.01575 501.4394 cm
Q
q
1 0 0 1 40.01575 489.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 483.4394 cm
Q
q
1 0 0 1 40.01575 471.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 465.4394 cm
Q
q
1 0 0 1 40.01575 453.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 36 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 453.4394 cm
Q
q
1 0 0 1 40.01575 453.4394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (14) Tj T* ET
Q
Q
 
endstream
endobj
134 0 obj
<< /Length 969 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 744.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (p) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 726.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (pyModbusTCP) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 708.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.client) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 690.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.server) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 672.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.utils) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 672.6394 cm
Q
 
endstream
endobj
135 0 obj
<< /Nums [ 0 136 0 R 1 137 0 R 2 138 0 R 3 139 0 R 4 140 0 R 
  5 141 0 R 6 142 0 R 7 143 0 R 8 144 0 R 9 145 0 R 
  10 146 0 R 11 147 0 R 12 148 0 R 13 149 0 R 14 150 0 R 
  15 151 0 R 16 152 0 R 17 153 0 R 18 154 0 R ] >>
endobj
136 0 obj
<< /S /D /St 1 >>
endobj
137 0 obj
<< /S /D /St 2 >>
endobj
138 0 obj
<< /S /r /St 1 >>
endobj
139 0 obj
<< /S /r /St 2 >>
endobj
140 0 obj
<< /S /D /St 1 >>
endobj
141 0 obj
<< /S /D /St 2 >>
endobj
142 0 obj
<< /S /D /St 3 >>
endobj
143 0 obj
<< /S /D /St 4 >>
endobj
144 0 obj
<< /S /D /St 5 >>
endobj
145 0 obj
<< /S /D /St 6 >>
endobj
146 0 obj
<< /S /D /St 7 >>
endobj
147 0 obj
<< /S /D /St 8 >>
endobj
148 0 obj
<< /S /D /St 9 >>
endobj
149 0 obj
<< /S /D /St 10 >>
endobj
150 0 obj
<< /S /D /St 11 >>
endobj
151 0 obj
<< /S /D /St 12 >>
endobj
152 0 obj
<< /S /D /St 13 >>
endobj
153 0 obj
<< /S /D /St 14 >>
endobj
154 0 obj
<< /S /D /St 15 >>
endobj
xref
0 155
0000000000 65535 f
0000000075 00000 n
0000000163 00000 n
0000000273 00000 n
0000000388 00000 n
0000000599 00000 n
0000000810 00000 n
0000000981 00000 n
0000001152 00000 n
0000001323 00000 n
0000001494 00000 n
0000001666 00000 n
0000001838 00000 n
0000002010 00000 n
0000002182 00000 n
0000002354 00000 n
0000002526 00000 n
0000002698 00000 n
0000002870 00000 n
0000003042 00000 n
0000003214 00000 n
0000003386 00000 n
0000003558 00000 n
0000003730 00000 n
0000003902 00000 n
0000004074 00000 n
0000004246 00000 n
0000004418 00000 n
0000004590 00000 n
0000004762 00000 n
0000004934 00000 n
0000005106 00000 n
0000005278 00000 n
0000005450 00000 n
0000005622 00000 n
0000005794 00000 n
0000005966 00000 n
0000006138 00000 n
0000006310 00000 n
0000006482 00000 n
0000006654 00000 n
0000006826 00000 n
0000006998 00000 n
0000007170 00000 n
0000007342 00000 n
0000007514 00000 n
0000007686 00000 n
0000007858 00000 n
0000008030 00000 n
0000008202 00000 n
0000008374 00000 n
0000008546 00000 n
0000008718 00000 n
0000009276 00000 n
0000009488 00000 n
0000009611 00000 n
0000052790 00000 n
0000053947 00000 n
0000054056 00000 n
0000054315 00000 n
0000054506 00000 n
0000054620 00000 n
0000054792 00000 n
0000054964 00000 n
0000055136 00000 n
0000055308 00000 n
0000055480 00000 n
0000055652 00000 n
0000055824 00000 n
0000055996 00000 n
0000056283 00000 n
0000056486 00000 n
0000056717 00000 n
0000056836 00000 n
0000057008 00000 n
0000057239 00000 n
0000057451 00000 n
0000057663 00000 n
0000057875 00000 n
0000058087 00000 n
0000058299 00000 n
0000058511 00000 n
0000058723 00000 n
0000058935 00000 n
0000059147 00000 n
0000059359 00000 n
0000059531 00000 n
0000059703 00000 n
0000059875 00000 n
0000060120 00000 n
0000060231 00000 n
0000060551 00000 n
0000060630 00000 n
0000060816 00000 n
0000060980 00000 n
0000061108 00000 n
0000061239 00000 n
0000061375 00000 n
0000061522 00000 n
0000061689 00000 n
0000061832 00000 n
0000061972 00000 n
0000062167 00000 n
0000062342 00000 n
0000062473 00000 n
0000062662 00000 n
0000062793 00000 n
0000062925 00000 n
0000063094 00000 n
0000063231 00000 n
0000063377 00000 n
0000063524 00000 n
0000063685 00000 n
0000063823 00000 n
0000063961 00000 n
0000064087 00000 n
0000064281 00000 n
0000065287 00000 n
0000065423 00000 n
0000071851 00000 n
0000071987 00000 n
0000077049 00000 n
0000089406 00000 n
0000095548 00000 n
0000106967 00000 n
0000118586 00000 n
0000132032 00000 n
0000144079 00000 n
0000158709 00000 n
0000166752 00000 n
0000168963 00000 n
0000170857 00000 n
0000173440 00000 n
0000176095 00000 n
0000178862 00000 n
0000179888 00000 n
0000180135 00000 n
0000180173 00000 n
0000180211 00000 n
0000180249 00000 n
0000180287 00000 n
0000180325 00000 n
0000180363 00000 n
0000180401 00000 n
0000180439 00000 n
0000180477 00000 n
0000180515 00000 n
0000180553 00000 n
0000180591 00000 n
0000180629 00000 n
0000180668 00000 n
0000180707 00000 n
0000180746 00000 n
0000180785 00000 n
0000180824 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(-\270/\215\023\374\232\255\017j\310\301DYu\363) (-\270/\215\023\374\232\255\017j\310\301DYu\363)]
 /Info 90 0 R /Root 89 0 R /Size 155 >>
startxref
180863
%%EOF
%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 54 0 R /F4 57 0 R /F5 60 0 R /F6 72 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /Contents 116 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
5 0 obj
<< /Contents 117 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
6 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.0394 251.3057 766.0394 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot >>
endobj
8 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.0394 135.0457 748.0394 ] /Subtype /Link /Type /Annot >>
endobj
9 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 80.01575 718.0394 190.0657 730.0394 ] /Subtype /Link /Type /Annot >>
endobj
11 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 711.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot >>
endobj
12 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 519.8594 0 ] /Rect [ 80.01575 700.0394 146.1657 712.0394 ] /Subtype /Link /Type /Annot >>
endobj
13 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 519.8594 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot >>
endobj
14 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 315.4594 0 ] /Rect [ 80.01575 682.0394 159.4857 694.0394 ] /Subtype /Link /Type /Annot >>
endobj
15 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 315.4594 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot >>
endobj
16 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 99.05937 0 ] /Rect [ 80.01575 664.0394 223.3957 676.0394 ] /Subtype /Link /Type /Annot >>
endobj
17 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 58 0 R /XYZ 40.01575 99.05937 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot >>
endobj
18 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 515.8394 0 ] /Rect [ 80.01575 646.0394 308.4457 658.0394 ] /Subtype /Link /Type /Annot >>
endobj
19 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 69 0 R /XYZ 40.01575 515.8394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot >>
endobj
20 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 628.0394 202.2957 640.0394 ] /Subtype /Link /Type /Annot >>
endobj
21 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot >>
endobj
22 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 541.0394 0 ] /Rect [ 80.01575 610.0394 240.0857 622.0394 ] /Subtype /Link /Type /Annot >>
endobj
23 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 71 0 R /XYZ 40.01575 541.0394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot >>
endobj
24 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 716.2394 0 ] /Rect [ 60.01575 592.0394 235.0857 604.0394 ] /Subtype /Link /Type /Annot >>
endobj
25 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 716.2394 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot >>
endobj
26 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 663.0394 0 ] /Rect [ 80.01575 574.0394 207.8357 586.0394 ] /Subtype /Link /Type /Annot >>
endobj
27 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 663.0394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot >>
endobj
28 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 612.2394 0 ] /Rect [ 100.0157 556.0394 281.7357 568.0394 ] /Subtype /Link /Type /Annot >>
endobj
29 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 612.2394 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot >>
endobj
30 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 450.0394 0 ] /Rect [ 80.01575 538.0394 212.2757 550.0394 ] /Subtype /Link /Type /Annot >>
endobj
31 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 450.0394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot >>
endobj
32 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 399.2394 0 ] /Rect [ 100.0157 520.0394 285.6257 532.0394 ] /Subtype /Link /Type /Annot >>
endobj
33 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 399.2394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot >>
endobj
34 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 149.8394 0 ] /Rect [ 80.01575 502.0394 202.2757 514.0394 ] /Subtype /Link /Type /Annot >>
endobj
35 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 149.8394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot >>
endobj
36 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 414.0394 0 ] /Rect [ 60.01575 484.0394 171.7157 496.0394 ] /Subtype /Link /Type /Annot >>
endobj
37 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 414.0394 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot >>
endobj
38 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 360.8394 0 ] /Rect [ 80.01575 466.0394 215.0557 478.0394 ] /Subtype /Link /Type /Annot >>
endobj
39 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 360.8394 0 ] /Rect [ 549.6998 466.7894 555.2598 478.7894 ] /Subtype /Link /Type /Annot >>
endobj
40 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 40.01575 524.2394 0 ] /Rect [ 80.01575 448.0394 192.2757 460.0394 ] /Subtype /Link /Type /Annot >>
endobj
41 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 80 0 R /XYZ 40.01575 524.2394 0 ] /Rect [ 544.1398 448.7894 555.2598 460.7894 ] /Subtype /Link /Type /Annot >>
endobj
42 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 80.01575 430.0394 193.3757 442.0394 ] /Subtype /Link /Type /Annot >>
endobj
43 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 81 0 R /XYZ 40.01575 740.2394 0 ] /Rect [ 544.1398 430.7894 555.2598 442.7894 ] /Subtype /Link /Type /Annot >>
endobj
44 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 704.2394 0 ] /Rect [ 80.01575 412.0394 262.8757 424.0394 ] /Subtype /Link /Type /Annot >>
endobj
45 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 704.2394 0 ] /Rect [ 544.1398 412.7894 555.2598 424.7894 ] /Subtype /Link /Type /Annot >>
endobj
46 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 394.0394 221.1657 406.0394 ] /Subtype /Link /Type /Annot >>
endobj
47 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 544.1398 394.7894 555.2598 406.7894 ] /Subtype /Link /Type /Annot >>
endobj
48 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 40.01575 537.4394 0 ] /Rect [ 40.01575 376.0394 126.7157 388.0394 ] /Subtype /Link /Type /Annot >>
endobj
49 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 83 0 R /XYZ 40.01575 537.4394 0 ] /Rect [ 544.1398 376.7894 555.2598 388.7894 ] /Subtype /Link /Type /Annot >>
endobj
50 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 40.01575 358.0394 140.5857 370.0394 ] /Subtype /Link /Type /Annot >>
endobj
51 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 88 0 R /XYZ 40.01575 799.0394 0 ] /Rect [ 544.1398 358.7894 555.2598 370.7894 ] /Subtype /Link /Type /Annot >>
endobj
52 0 obj
<< /Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 
  46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R ] /Contents 118 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
53 0 obj
<< /Contents 119 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
54 0 obj
<< /BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
55 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 251 /Length 42965 /SMask 56 0 R 
  /Subtype /Image /Type /XObject /Width 1007 >>
stream
Gb"-VG?e'JfEZBh7KcQk'L]n@DT%6BXl@8r8#t4S-X%2h%b/'[h6S`h@U6M<^oa`5\3Wu^LaX_Y144STpMJb$E07q-_XI@,T-P[@:N"I&cHWo_If)`)6psF26psF26psF26psF26psF26psF2Uh$Z9^OGnC=[YZrPq,og?+P.Ce>YfUG449.oNqh6*gD/kKaS^dWZ*m7?jj6EYmC^CU-B2$&J5V;)N0N36[!nEfJ2ID99q,s4F-METgQG7ldhe!Md!N'PpoYOaiVZQdaHe#==\`#=BH7c:nVLLU6R3.W`QC\0>IG5[r:/$UINLs2/CaB<BGEm4FR'JA7T4[@\W'l779O36mTS&[r4W$6[.nL0miW\+[_"^qWk=Ue4Z)YBjtNqT3#6"=VWSr]LnG=%3%3AhnK&>!<^?%*BS,l[&$E^"pP8UgHTZ8_"$I*03u/2ldi1oLkl9H*lQ4;\3U$f;c6NSru2Ub'Cj2pX&gr\]QiYeTj>9R@@McGq<*>5$`6[i3b$$`SiqG/C=T=ZSN>lUQS2URYc4V$I!GJYk:^&JCu`Np]6<R&B$;)[KoKJmaiVZ!Ft=4;&J:-<`Q-"Dfj;@<or(`_g9k]t[;+4n"U`?A@66P4jQb!Y2=&kthh2:L<ioQ5GOJjKf?^'R:J4=o*IB+G',..8U<]8hZ[M`EH1U1oqtkU*gpqn4qQ@!(k2tgSLXOZ#F)l<$>IQ6)!`Psi_3j?Ph7KYcWM3lM+sJ3TqNBq#jNu9#FmIV<(bl(@HI8HUF`__eh\mCOQ75`:Nsm'l(ch)g?+[7H^]+62HdV@5=`ecX\T?plDVR3cd\Q<e]@X#\a3i:3>?`%n^t@;L;Pcu+4*I,TFmADN],s1^,W]$O+sJ5*O,kAI%LrsY#RIA1YF[Q_78H\iBtUpap[I.Z!s8WY?+Q8iB:(%m-&%&,"U,'<(L`qDcUd<6XfX2Ci^)ooMulD&8OPs77(GWV8db.\R58J"(U^WW6scmsY@"8,V;An4042Hkb*=J!5(!n^UIon3qXosq8#B"Mf"-!>7n6'`EfRK4F8,+Yf</E&KD%]$6q!hm@:<TNB?tJHXBFDmH)8tSgU(ZNJ,]@ekK[euKUJ>E*?Dh+c^qCOa*N&X)B'MdM1*^A4Z@30&/,^%3]\H/+sKod.4H\h+X+aY%kgq_'Tu.2F7X_Nl:mg1p!T[04JO\o,U=XCLLUj)59mGbe^\e`Esi6Z\:4Cfkg5-ALknSb,UXu.g9mte]6;UgGZRtuOX!Af4aWJ$Hqo"Zk092D><6roQnMf1Hj_5nQ5hVg"LECu+sJ6-S1@[Dr:\l`2E!JIg=irLeXAXJG!n`Okb)t.Pa%CG-Vb'j3n2!^!Em+J]DMO%o/Qo.LkpkC,`.A7.oraM:n[r2`F?fDN?:CahS"91K;/!9;cA_s3RXm*-SmP7!s=06D;(LAG><6V6psF2,YW#jm$&qtCi+$O*$S#a#mjJRX#6$P[r:0,?G5(Kh&V,$:J]<-4*P]L'G1oh;6GM(d,3a<bfhVVhRpa\%=A$JZ07#-],a+bgtURf>?e^]l-_Y:ljt0I&J5TeA\5=V[+23YgY(7_>$B4=1#pNJ2khN@Kj;BA]j86n8EoHjX*<sb2::@o&J5UPG.DniAsFiGFEMa'o]bu,`=()POOBX_IG3N5>u+77d%E[0q4EJ!Le.-=?bbIAbcGR0WhH,[U15A.92/,d[;(t\Kghh1Q,:GV7>F5u6psGcn_qB@hS"8OCMOG%4?+c=8TZrFld`%;ZJ2Qi^D7ZC&4kiDbTitI/:&Ka+sIJHm(I]9k%84;gU:r4*QuL:HhV^JdREJcUIUAWI);j]Vkj@dkgAG_l-nP(jnJ6$:RjDL>.&*+3]bC)aj[.`p[n+-e^[Y^B#H-(!4QdtZ;mo(_/2P,6elX'Fi=gFIIcI@a%m)[03PTVDV_mK]MYFn/R#Lu0OV\\.8tVBIIZ3VO:XO1-VKZX&K=((gq!#@s88X:K]sa/-MH`T$_Mk'\ogX&3"Z`7&`og+h7D^iPNU/X1SP!I57%W&;S(_lC"&%@D;2M$Z*?%_RtZ^VfWq?M-!pK=;f6MbAL6/5d-f`%J,%uXGOOB[GGXW19"/;>@YtsT*YB!(s8Mt;jiSb$7rg46n!TW5\p!IE`.7e>4W.J>C[lf:m^$QPIf/_+I=;&--Vc'2A4FIk%F`eT4*9[_G&3\)Lkpk-5[[umNfFUt;:0sm#BJN:2/6f?CYu[D8,i$+:S-(>?QZ7fQBQ:`f.+'HH!@^nft2I3m&k^k%tFNIa5;CHNCRf%D;W'US*m])NZJ#YQX;rNg2#<CiK5H]ROB4f7Mo(2Dr9F*gA:X:kLm+g+sJ3Tb#WH;]ZHKnT9#%okWmQ`"re6jKYRK_pQpAWgph@Y[r5?UA3N1@4ukW+FuN\nrr2lnq=Ee0_'Ma?AGYl3rqbr%YJh;'NGB4=1/li>K7egCVZ@tc+sKo0F6:\$2`I'f+]MUmdaHF23TKGklfdR-i5(&cN>l)(=LbuT9/B&gXBB%DA:ud^o&Rnj)SCOtH@:5?eZ2bE0?:is3:]`V'9h)$=R!YtUnm;+X/DbhA5'jI^OA=fkg8;+L]@)&DdHaVpacBEdA'5+ldsJ?h]L/n<2`X)AH)Gulh0Sq7sHn,ei\H]4<@#D/^<n'mC9[9R58KumXG)@CcgK?g7#IYG/e\"dj=)%ZtWH$pap9oVgIgi_h[af51_a[ngmtPC6a@$JMaF"LkpkCe4?,kFZO[1PT<stb.VTB/h(:#dYf)O>5(oj:[dGjRs4uI<;\6t/51Bh]mKKWZtLV0\Wf,#Qn\\%VG3O,4h,Ll7Qg5r_\%$ee'?7a!<E5Lh<3+Vj0"T0'*]nbWMt%+f'V8'ZSYB>4?QkM=#XD?5A\uVK*Mo2J]GP,C$k<B\+-Yr7>o='L&>3m(DeSP.qsX\RlAYQ7jVY#?bUo54=H[urrmWcK#c`+M2Bp"I630>QBmih3F@2CQG%eJ*Zoe*o&\R!(.:PY7$J^nXfWBl>aTro7p_)><4:B>m+J^b[qF$Y+$Z=PM,_6:p[6JE-;9eWjBqUI.<@s:DJEoiW)0/u+$SVcQ^=%\]KKOUn*f]u>;8S[(`8'!r;?InX]gDto#p/g+\B/>m3F#*8pBIBR=i+L8Enttr[r@4DWA'2Ui?"le[W-!FItU(1B56&5N'A6Lkr8&0s,q6k9,u/^A=-s.B#^q)M85'b3jHs+sJ3TjYAYL>dJ$:p2*$"8rUCsGH4`E-J][r@">u*rhDuEdaHS/e>\XLg:?Q1\@lnB`de!`Vg%UdR;THVmFo'#Ir=NLqtKW:LPJC#<ip<c5!D0ZOO@tn1,9Jdh;-mCr_*7YQ7Z;p`5#Y;2n-,+cY!+))3ak[IJVkfq3,>R-f\u`5f8<c]6<S1_f&.86psEMEc>ub11a)OD*M;ur;QYAh"C7/P3tMYn3BcFDoe"`kKfbB3HCqn$Y?NQF6ARl[W[oc<P!DCIf9-99K.l\5e7itdc-RP)`Op!WD^<[p0UAQV=9p4Dk?K+l0]aq\om>u&RA\u'e<=\qpZJsnuZ-*i^&'Ds0(cB6-4MB11eo$Ij-'\,#WjVg9j9pS:0-fQNKHuoE]Xg:7N_ZUe@%,AnGWq4*J8`pTEl!P`ukE%=b4ddb1B))`EpDTgX_Mns^'o#f,8q;l@bZ\UF@`1_]$7T7=k?<NB/3)H+Qh?+/lhWD]SRQa1gUEl)*rT"HWR%3%4`5s%.iq2^KtA5()7@'sb"o&e2dEV;KN6?_($VQ\6^;,L1-0(%>u-R[f9LkpkC'SdA4M-P4/@oOX`bHeJp=Y#ZrKS0K]'5lU8JLAsM?!I;.:S'\25Fa?3?Ssf&=S;lEH[@k!gJ3-D]W8(`*gF@Va2c6<_]q0%q8.gn]"5KKoB/>_n0"<PjN%pSF*"uP4?WQ%^DZplQS1RP8u2@XmH`lqQ("/!].I6qP`DRb_k0/C^3"Y"IJ``sZfK;r002/jj/8qA+[</:]t/U\Dr8:J1E@GTdd7C#08^GmJfm!jhCP3!J?TV]]mB>_V">YkU/;e8S#qDR).IAs.m%a$LkpkCe:i"_\8'Qoo(1Cs84r$2/6VQ'P:9G-]RKf?h/hl4XXcVSJ&dQihVR,;Q')V!4tHm5dn`2",D,75Y=ke*8nY/q5(-U\eXJL9r;?JSMYm8Hil:H%s";Ji:RjE'l04$E*_Gqtn`+W$GOOD@1,aC@d%P'rRf3$AO4Y.%q&(u#aS*OMqtKF+WFKCH;Pd!NbEjm6XBDksLCP7]CqsZQek!uhW<!)*1iM7K_1Muui:l]thk`s^.D4WWLWdPu"Z^S^`!R5/?jKT;CtZsr.q9g0F[=?G5Ms2'Hg.p_7Z=j%nY-Z2LsHA:%5fgn^h>#!hM[2GLkq9J/1_2YlbJ&RZX`$&]dcrY;Ne)]X8E:(P[cD[.TWWQX]i-.+!ZStLknSBD:u3`7n4pg:4`=X1-^9fI%GX57!*Nmq=<X<S=D@;P>=S76q$<Oc'gN$]"1-+r,]mDR4?)!c;&hZH'r0_Nk)a4(+WFe5_/ti?G'+o44:UJGk!!+pnC387Rfk)NeN:FLkq;Rq!mCQ[^OK,c<%/R;1*.thnJdTo93d:GOF6Hh<aZYp[4:p;$-3OmW$AMJUrBl`l</de9Uo_WT[H?LkpjXBq@G4;S.*hA9qb*N-Y0cS`k#`a_onDdBI%H?!Z7m'..[i4:r/;Olf51:7aIeVM0^mTgFIaY$EQ[XA8'Kji`uS5!Ji>q@tM]$jd4P*=`Yn&J8TLkKfdpm+G<==4b^AD=co7ZA%:0mGP#b4*I]jQ'I>gc(BLbaTM*%6psGR`0DiS>.8C/PhsO(C#6LJS9Uf8mbGA%Vb\CE@q0:il[XM9\@=NG&J5Te&Q):2%hJ-\YFgZ.M5@%[s8MuCT0Fti,5RIUKS0dR2Df0u84Q1J=Ku<C(G=c(r^9.B7(M*2(GDX\SQ`UHBe:ngr1,TS8lScSkb./>V5:#BKS9!ag!dgT6;LC\8WtK*[r1=*-mBiZ,*E`X(,gR8nGN+R,HH$.E<umV\9-sJc]](i3B7s;]T8+LiPL;FDZjQ&XuT'A6psFMOHbtD*$!b/7h6OX)s!)LM\[<iB[D;4#<8nNB1,0W/QoBTC"&sAk2tCOg6F-f)E2P=BP=@.\;5rsLe+)4VP]qJHZnJkO_)\"5ut1mYOCH/0l#4:6\c.kWjZq2If+HH\oeiT'e`l5]38!+%tC^`XkU='*u#F]o&WNl!>5tV&WmuYo&Rphp$956mr!&^04gV1C=F(_GVE%BgUD*B.aIc\84Y^]k02VkF$"R3kj7Yp?#!bT:pXcY0k83C5(*/$oB3`/mIKrCX]Vj&NfK.&Y&<@DQ%oef[Vt';[r:/]Nh(u^LksPPChtYcp7Hj63DZ5/83>"Z.FY%^O1p&>,/_p^f>f+]oB*/Z\*f%a,;sDmFR@eiUnf9`+fcUL_iTtAV+[0Km+J^3KaQ85G:P2E"q;InJcETJ*H0fI_1.4N+7A:RVQHsP>p',kn_j<=mrS8&&.oKdOh-@-N(!7$mHnau@"96F_o$!Le>[Z[gl[(]@Ue?moB-o@=O=U"B,;@#.7Zg]?b1@Deu`-]"9\i2"bh\ck-k*Z:S0g6Fm@J^A]k8g*pi"MAS5YRong5i\Yl@'YHRE7N>odQ_nUE%c_!GBrq,aN5s?t#4sEYdnO7!/#9b98+sQ[m()DWM>WN@2C2/W:4tn\[eZ2d/o%Kn8UaoNL+B':<C=H$DrT*>3N)>+ia4f1u<3KX,f3a"J1M4k2<NAlb3.Ym(+X&#@5>JY5q=5hTf:G-Pk0K\"gMahaDr/-#R5-*9-IPCB1Ga)rGONtVbOk&Jp[6jq_3#Af)WLuHp:YeF.T3&Jh@"7*Y?jAN[R*;I5(*-u`&Aka+sJ3G-X-bZ:n^4s$lp?/OX12:#:huH-8@4ekq4kOB?hK5^IaV9V+[.51,@;SQ_gOTX/i:fQWL([SOSVZ3H*cep$:5uhnT3.KaYuq^MsgI*KUmuHhQgGN>ncjS_CVq-O(^7aTi7no^gBnf;r,]B[NRFT-@XVI)t&lq;iEBJ,eWRQQJA:'WHG>SOsG*&V0s!^+sC79+3#?`;\2]9<"ni3>2K,&J5W:Ya7"M"pG0Qm+>1(%.E38148k9AG+WHKjsq?+$Vr=r]HA)KaS]W*BU]6[r.0E2_J17S;iMf1fm1:7n4qVrqn'8Q?71hX&Gok_hJWTZt\!c9:+MKHR%6pJ:OVk?kfhEcGkh_KDpQm=8lP_B?l`JK!Bs3Y:jqSp?gVDC=NXtY_S!(V+R#1'IdL/DQ`Y>-71&L%Lt@2e7dO@jhQEL-V^&:HM-P*#7b.?o(r%FCu&CS"c5B+,Ba[=(C1tlcJ.)X9'ghp1(b*1OTr=Fs1U<-?=.&HRLDDncCBY#+,Z*Es2Dsrq>:&)CMStL2%"%X')pd<ruJ(chnFN$p*3L)k5XJ&59de]!2Sg+aBC1qPrEVfq)fW=do)4>]tO'$$5G$iX]cH"I#AalIei(AAG(QZ%2ps1`:W<CQS2^[D;-t]4(=R2@=jr>C+;mCV&b/=&oQ_A4>&ZO+sJ3TqED4,nC$A5jE6$)JLYeA=_>X1(!*+^ba9P7OH6_\cUK/s9o'9I+XnihQS)R43cuoAE71pD[^NVB@^"RTr'Wq@7&36>hnMBtk`CjdO0h*`&gtS0*t0lGFEAj(RNsqUs"e`Y9]YfdHUS16*6H=E;IX":?9N#VJ'juZ;(Ag)+$Foq3]\H/+sP0?142>PJ6L0chR[j1St=f;;56ManfOVsO2gs(mFntB"&Z@WKS5GK&1OkC0JJS7p:T`C&J5UPcF\;hhOHTIOI5:ulPg`\iWeg?77E&nlW`c6^E6kp*&pc:+IO',Ehok@m`(5*70eu]hS"7`]/l4!fid,"naSnSYF9O;LkpkC1dGejlD7.?A<YuSXK85>n8WGfU-nfALCYIb1,A.K[B%ILI,O2NLJcK[*BQXoP3mMI=X#%6U22-F$nkmlZq-<'dU[S[]jT3T1M=qUbW9k0TZZSpA!GBE?U"VpK3c*4M2inFn?TAg6psGc&ebol(`:o&9cIdiFP12Ld;^Vro&\&\QBj++Zq*qe(*1S"+J6]IajACRn(taP@hF6XSL#I(,0GLnL^7]M]Uk^dOcbb_).#,M*k?UiC;,)klIW5C/r+^N;c>c"k^YehfWeq\@hFQaSL#I(,5MAoA9\n,(F2YpGh$mkr"n/!F/NE^Jj980@mWM6kZGPd8kM_1[V\`59i%?C.6860^rt"9&J5UHOOd$fiGEFKOV^#<3T2k;dCa0%%j!iPFEFTbXkK7'Da_Y:h=,PDDr09d_W&Fd$_h-./\LF$&J5W:68)ZXO=%l7R@3='kd\16Bu"9S06m-Q;:2+,.o`GY)]L:gQ7PX#9(M]L7`qaI?]u\JE7nBQj$ZC-6psG="IW#>J,K)Hkd[p"FEDWhd\Y-O.2*@.,<?To+J3T%W0+KqosJSe7)u%MGhH4D+sPGPZH;T,BVii?*BSEQ$49\Ofd9kklIDqm'e:%Q?Mqp/-_b*JK)#-9++F!Y5_0!gY?r(dMgF;mB8MG#80&k/#n@G7dSd;W5q.AI-Gun`HAkH1(Dl9&mU!DBiVWB<MiL5?hS"8;X&^g!Hi*=%E7(qh).%KPLkpjd>]b(p1`>0"e5S=D5'J'eNK9,jdVE?&F6hC/dBP*fCli]+hEB8kW%21tQAC?Q</3:JhS[55$,!OJZ+%4:d\TSo@q&$\,UF`oCtLFkrqr3GOEpNa'p;?_8&r]l8C=]@4^N;tLkpk-?:mg^84X"aN`)]G+To!X[[&8X^O>u[FD-8Sq!\=%)%-h1^]4:;F=c,/`JYODb*6mhG1QFeQu`mp^qB"b&J5UdTD82+Bem>\ND6RH%0$L:9.V7`&fjWRHiErRMi16MOsQ_aI4@8n%E-H8&eP_<Z:L2<]tM)g%1T00]`A-72f@C^*LCM492"U-]t:PSnZcTE7)tHX*^+gKXB;`JjiXS"_OE$8Q^oEH,,-Uo$O]>=i8NXgXfX1E%*uhqR6j[![r5UU"+ra`p5"_T7m27pd)jD/6A5bOCGBJkZElqe7.^Ygam^TLQB[C18sA5k]mD+f1mKt8fJ$T:?0iueJI(c'_#m1ta(j/)jc[dlW!H^QQAC?QA7Un_$PY!3Rgb@ZT!NLQ`TY^EOi_OoYX*@R_VD\Ca3Mu57ZA<K"'Pt:G*[r?.!L":r42`9GRk;qj9%>Zh@pus3r.fs5I@i+QRuDg3Y9,Fh7?Uj?pRRa:]?.p(,%aB6q!j@j<qj7R$^F.iL`8[-9<dP1OoCO,YPIUbn;%Q8dGk8c'L)UQ^8MlI&%s2fi]LC,)mb8%.EQL/=R%i*$!01dq%.seZ4fT9pmb*F<E'oo&\%q<`TYK2Is?r28&9,&J:-dHM?hJ13VaGdb5Ki/hZA%Ok"MA3sBKSZ3BJh5X9k`5ZH%^ZY.P-c!.Vmaf>rN/7*LcLknU@4a?I(l-cEbhVJG@#-uA?[r:.>*LDN5Z"&R'^AackK1#s=U/%=ED.[D2\ohfNo;[k<SL#I(;B6W&_ZpAM`l?#UN_?,e4F#5oaJ`=PDZ"Y;$Vm9UBkhD:\T;C9LnmLbfi]LCU7<T*LA16.Oo!r:"U]3(I.fRCl4e9g:7XF#\+qM6HINid4%ht0Pc\D)@tTAbOLJFr=E$$Cc8^%9*+snRQ[Sc))&aD'*&pc:+J]QTG*[r?86I,],;W)L^N8RukdWHVBP=?0PuWG@%JZ.-GM0EAS"?5.i5(%7#=;%ubK^_4&S4[==BIgRJ@)2DWMujR)?/0e=/+`t/T0I[D.@'S[r,J(ig0gQ[VS5n5BQ*cd=IB7nZoJh6ptC:^/CC.?`6dEFHd7F%d5<nK7fANP!k(k]7brpgY(7[Y?q1pgUEne;-227r4i:2]BDL.>O\r)6psEukkh0tnC"MmS.%&O<)f*GP>d/B't>ZRJl\sTTrkHACM[]I??VWjLiTEjp[:b=iUum:V9/4Jk0/,Gn=f'UEjb)VT9h$-Wbg@o0ekDWA'kGNk0:g=FSbXoU'%)/_TU4;&Wt(s9nl0$@qfZ1VG3Pq^d&sUb'?i];<`Q,Gk'dIX/i;-Zh)YD:IR^KH"PBoNMLIN_M+]dTq'-Gc4U_O`d%O_4o-gRCA.ApkgURm*B>!DXF'^0+gpO`WDcD]MY%1o;jAk7G&VDVN/SGiS*$,!F!gJRV+[/4%YTMoAS6jU80)93$m-#l^alXfJq4"/,+7'5eSWj:'lo0+pioS1:COY@N-7)s4aOJqNm?@dCZQWX5CS"/VG0L57&'1VZU@3WipPX72eUDUFAMc0qM'`Z\:M7h;,O(JUAoj3QF*lfo[CRAQWNS.[I`S-J)eNXd@k9[OX!A*oX&Vu7d7(JT:`R#2SOd<7urN:N!/-OB8MF87AQfXUA'dEL:=IoOs\)e`PmZDNRI_&pYV+NC]+XM9he@.SNA2[0$T.S*[BJ-gU@\74BTbeZ1B^('ce*i"C?8;Lkp)CCbiYoSK3$K,"7A[PMnM0<+R@&-<aVXC],&Ib%fJ,ETED@daHS?o]];Q:a$i"*Vo[6cThGc%ZOEn00;fp7+j.=-71E#&=n`i\[hWKGgUNYf.C48/6sSObNI'6/,/&B$deui1*gS)4*OH/s7Q'XgU:rL3]'`3ns>n)1c49)B8MF8&J5TedU[SJIRZdrdU[TG-u("Z/Zj9figD.bJB(r$?$Qc`2F/\ITgOT/G<R&V%hBHs+K;sIpip+gQAC@2QY\FiMi.rj_lLCT]67bS`_/haF`hg3$lC*J7a70fSD:D]9C1V2GJ:f*55.0f(LD9NLkrbr+X'.?$u]osMe'`IaU,HH#UdNj[2Lo;aIi;Yb9XL'[9L+XIJ</8d/e!`B@!0;S""'Gq(d\ZL7I9l=i8G.&eU67dKsVC]U>1UNfFTq"AX^'(`+f08=)R[(`8q3Dq1l<mG#*=8#Q/h^3kdkKURVB;l0f_nR'ZuP1nr-B8MFTd.?,(ET>ibF,)s4Z=ODIaIPD:iqAKZ8!)Wb^OJHk+[L4;b)tq!prAF;MiK;hHhZqKar!b)Z"(gNlLsSt'D0E']mF`8&)prYOcanB2f90u].Ar+NlJPEg%*^r>M8j%.%RlX\>`E)At%02ackoTgUH(M*Aft=iSitGT1<<LE8Z7G2K/bB0l"V@1o>Di/E:;S5CPZ@!.EPnldsNlU@4C/o\eZcTRZ@d^L)9u]*6NkHhZrd(GCr8P=5^O7,R1a]mEtmDOiOo9"/]o4?PammHp`kMnT?UjUrk31i1f`d%E[_(+hjWTe>pOAWu(GQS+7.OtU1VNZC3UAUF%2NTe`0(OQh9W;l_[09j9?h7M:A?/*cSdFd+H)bZjR8#*EiiJ/M$o]Ujt)MS"\mG$m.3.paiFQt0lCJl&m()A7^,?(Hg]rnO+]Qs*(IK%]n:Nu0X0ko(3[Vacb.p($EddgTL#+el0I/.sQg.e/$H0<JDc_!GJiK$R16\@$RqsN:PJ,]7VqtBEU4sNRX6q?t2O$Ap[<N8<8!oMk"B7sQDI9!O]7;m,5hS"8s+$Y59b*<es@o&ttUko#s7.e7Ye+rUud5*[tg(a3#eJ@BY1+4e/Y5n_0baptEh7@`a%j/N/m93Ig<9tu1F8,\4Hea)Gng1:l[]jQ!0%B:q'..hde>[35W_s@cPf^n`V/+\cbEjl3q!b!@c^J0,6:,X10UhWc"Uf'n=q!]c%*o"f3=-oojCWjiIWar*Ok,XaYsC^:m^5i_53QEVY?nnhpMQ3MPdHgF(mI)70jEGK>s*pmSND$*:Kt5A'a=a'DX,fTMde4`m1pHQkg>+o)htO8"13U]#>4(tANhq-<:%XQ8]Hu9[8M1h'OS4h=;>P,o\DMf3T99C0k/(a,tma8+q8nghuO2&X&lL#Qf&)97RfjR]Qb#a=M/nKnDV9S1hhQ9-!d8Q,BjhUN#^m<j2HFa&koD\4,_Veo]ag4(+e\$Y9+ZV#6tL5C]f"T$5G&KZ_5klpRXU!rn=bqd7oCLKV19EVoEs^lHnXBd#@o>\pHP03e4tfldce$<m7!i$T/3b"#SN+L*e5odMj&B)S3Mk[VXV0@u'aCfAF5d;r%[H6tukt(\Oq:]6;UkF6r8[>.8B4F660GFCfT3NupUC^3r(hgE1n>6)s^YnjA-?6/s2uOc5<\c8Z^@qXs.U6ct+E@Z;9`W`lfF]"5KJ(<Vmmf<&79A6a@aM:5T^jMWHSiPL9c;3iY0#&g<8Vha'AGk'c42Jc4@]9'>2I/.gTkg?9)VG^0@U"PklCRR+rAn5G*E`/Z%%3uAZp?bfJ-Sl/Np?^IbbbTRXlI`2CZ11USrIjaWH.9Bp;D($M()DXFFo;%)m"c3uo&\&]kKK?HUtWf,79U>HdaGF5c'mJ#GFpd1g5[18DV_mh1F3o!5?_.<:pf<9;/!kDOgqs4\Yl@gi5(%)DVY$Zl-gW.KIF;q;fL[1!OMsW&[8ihlctkP"69%?IUD/8Gi.D-qlODNP,R`dMA7'lG-'[2L*S#io]ju-7>hr=nmlGi]SD7I1-0O7hVR+&V4TkqU0nE%>s^nG0to/A[&DQj(Wd*n$HfWM9/)C\ZtWIbSin)7*>*h.ZST09cEU5(8Ep$Gn#ubp-;Bp[?bSXl$42U.T7?jn\8c#kOgVU)T:b"bAT"<+'Y3Ss`/,/85=$1dp9T"X$uOML\T?0I=]nm!fmE\ooeE],Z=V4mHhWcq(.s^RP_B!i^!sZ<Dg-DL.CUs9\ociDI5c*$*"ru13^=msp\*uY<&&*<F>l-;Up\O?4VJG7g80=M!$lSUWpA39(E=Eb[0-*S%Yb0cZh_/%*,T^e8BC;Z_kg`'d90,+iP5?H3`6;Ao%<@)](%?d/mR&L`s:L[fH4e&Een_3<$P4$GabEX5VA$>St;MpdO1hX3As%hl-lP$hP><$BcGBQ-HZ!gG.(GR>12k3.)YcPp.(,_akHWhlb(Hdc.-]@IscYATgOU^bXr]Fdacn@nF44`\9[\Ckg5.8cb"DiIfKB@]Qs+;R$_9oI,i3Ud1Q=1ZrC8=DFM0mAu]=ZML5'`q6$'Z+Z2#1P*W+;'<uB,1AUsE%?W!TgXt.t1;$^+2bfl+3Ih&+qYL'0OcCJGW_tWM&I]#d:I"f2Z@pX]IJS%s*DE6s'ce=NX]maK7%4W)2@.E,cn;G'Z_h9TOsgiS5^4kXP5!MMc6akbb+E=(^'TXEc^m;7lgW<4F6EDlkp%4%03u0]L_1lWSis,,$2iu)`Pl7=rVGi`deS"HbEnhYCR1nDMF?_5*Rj#eM[L:OQmY\$n`.Zjk)Wbss8@/"(+i@pCY,_;rquSq4s+W.gU:t\:UEWEfs"o&O8ht0p\+;=1c1H"'bV&hTH]#T>UUa=@G8)&f%/D#I\TAl;XkW!;,L3.LCZ="1Fl:p!.#Mh?R@./8;6RnZ57k7qt9:,$dW&(EhXkb[C&Hf?*Rjm8e"!V7A)$^[;2,4YA]+%'r9$u]">R!=j=GjN-'mTnDV8lhB;Zul-lP'^RjI=L(&:ogrYu1P*;&mPE-\Dd^s_l]Qs*XcSTLmFPF6@>S;hUF$`5]dC'l/(^q<>#d&dDE5(>UR5;6ceO#HZE8\Mb*5o@/l&qg:A&_NJd3_ho=A`:,gXO`[A]pC?=0La$,fN)/=0uX<jMiE7N`=8#A>W1>L(,)V;H1;Rnbr@ZM[h+95jQpq8J>'3j@(Q+(bDsM1nI7dRQ#/f7V.s-*fA"hX]t\smpEM>fh>ItPT?LE["O3iL\plAR$a7C=BK\3f^[=^6b-Y'R$a6X'GTWqm>\\aUdu(+?IWO<CSI>M6127&j,if^W)5pq(24'`%*Y%k+4Bh@9*(]*Rkn];hBs219!jfTldt%#B+GNO$MWo?1F,3[;VJQrX/6]fMMd:+h7>I-6CTlM3%E-QVbWegZa3#a5CNC8kZBTao&Rp0KaS\H<9W,JF/!.f<EH"hQ&OPJ(CniJL5*-Md6^>nVg.ak$Pk;7SZAPq/CUe05E'0TXK9F%*NN'_H6Q3m^3nV,5m&>VUUbI/$NILp$]k]f':Agpit'gq8>mFbCacD'rjbM(F6Cj.U8Is3jN%p;>MGl@Mgk=XA_"8.h`_8M#@qgFk=!@bRC6teL6`065M>&cWX4Z"j2R(@D!]l`96;_\\r_e^HE8RE6hIj+hsT@7]/1OMldi3'fNB_+9MEZ`#nnjA/IN7@Y\;E.T&<)Kfr\JfS=H+2JR#j4;04?lQ^3pqD;$hREZI2_q!d7[Z"(gjChtk%X\$RM_Lg<FXN?YRj'-<T]!]QU>)Fj@WFi`8,q6fj'e<*aqY0H^(=QjB[NGT<8Q`TJXlrkX7IB!Is/VR#ZlY6LgX4DgrVH2t@7JMN6^'TVn6c>#K2SO<KnP,8%YmT*Yct?`"UeA3<_`7"aFB,##7m8kRCTo?Ic5g)3]r!D8nr,+J,oc!4jBBN7s$:SL9>^>N#=$sIXZb4G*QXn[V[EEA&aH>*Q[sm2Ja6$q;&Z,M[kD>dHJuQ[C*Ek*LoW+C1CaP[VXV$%2s?VgppXuDUN6+86Ir%oQ.me_](OPN)k/dd%T5fPcNTPH.1L$\p!JpRP`pgo]ah<$-g`>$PtF3CMSj`51=S2A-)f67#.9O+iWiqTnB&4iKc'"7)tHreu`/3rjQOdT$6@4GNR*e,9ru_rVMK_jLaC*n'RncM2B?N9:&&e67V0X`JYBW:0b5Dfo@(7d!=HXF!k7;]Q3++@q4QAPq/oe\SRuk?bSWuSij0YY)6RnP"71;HM+:+M%\@>=4b+6B?m&0LXpCbO<O0*U4nPcNK&aM\97*QHI\3,:EDQ=B^=6O>dROf&L0bQOEL'N6.(6oYMe>H4[$Juj2Qoc7(p9_rOPO^,#+L_;:A+R.4H_=lIBs!G34MAkhBM_kjRuDXfXa,j@E#NrH=<cOm_Z*f%/EBE^L`UX[M3hNU?-#<I>hU/6fl<4k`1!'cdQk@eK$:pic..F<ESPac[tFYT#K:&06QFld2>XXf\^/:Ba-ZRm2E%DV_m\%YW=6#(Z*q[l5upa<g5LElH)>[qsaGd*QateubZV+j*8f+*;XJc^[!?3fn/7E8\NZq=:M-!hbZ",9tIXc2IS<6jJlr:_`N`c(!s/h!(k7T0A7^:iLBXkWfjTf3a$dK;eH("-d<lp[<$:Cjb<b&^c0.X45WulpKk*-Vg0C*=G`QLl$tn[^JYWU"mmVHhM:)VG.^O:/pXnZg>r+2h_VUk2MT)VI$r^/hSc5M2@r/aZ0Y6$-piAhVR+`"&V_AX&o>k`ufBt9s^fVoC28EiJ/M>]1p^9d`QC\[VZZuLjDEPhkj*e91qoad[`3m5X7U6r;#C4ifprI<0i"3qIsYXPq6'9p0a.8<JCu(Wl0,W?KdDlFEBA1o%%R@i5($o,b"[q:o96n43"+\ZJa63;qQ$Oc_&O7pQDpcRC6^"ET4nCCmJ_NdMH0!EeOnU.a._`n#KHhk3hZ?(5piYICmG9`.A.#B#jI[W&<hN^SX_p:7aRNO_m:0pe[*>@piWE=>?ZP#!lBm[r1$up$7Nr64?XccR)ATLlOgHFR.M[>e+n.[./7_MgTl:Yr,Gq(DdmH'U6=7dL>?GW`QB1[;&]a3S.KO5$BC>pp+,5DAa?2/m,>#>Mk,_LMbkY'r1cKNur#T`g,<Wh7Im7B$HbODIh>"=aBT!q=*?q;F2QrgpqJ2-02jm"/5l0,<.Yb>?a0E1/`3:C*P#N"dM$9/jo-Yjs?L[q<?A+>?P+.9<(HAm'"2'dacm]HM+<%5e`*7IC)muq6(\sEhoP.,o<1$:"#q8T5)oVA^eYaf_n6-7Cfq<.)*+$GOH`Ue#,tl,q;g2gpqLtk09B2f2t[<8hr1Y>InpUkWmY;hgbZcb*sEpCO]"KP"j'2oV'.=_N_cGdK!"11hkaTZ03UMM;irjZ?l>MHN*iQ^:sU/c'u':NJMT`.ZV9Y^EQm<O,onnF(Uak>m:`V<2E3P.9!+bN\\_f^Qars<1H^S3dH$t9)j57p?h=`s,L0k\[g7m>PIF5X(c9^4*KuSfs@TISK7!!M\[ngc->)#h5,`:GVZ^>@:@QqGAkGanOH)>7r1o9NKE.g2Jq0J<@^MHJ@s1Nb6nJukg6$Wg=k!*<AG=A'Ye.uNhLj[X+1'BENNEP$5Y>-B$D5e91ou!dA'3)>?eIJOcGH^P[/e!7UEfVWCZsDhVPA=[oR#I\]TL-$S_G#nj2Ug99r*bL;WDg\2^j!ZFf@iQ]1=^a8[LXR23H:_-e$g\n0'NAU+ZZWM6/_p%7l7D;(eMXaR@MIf9+#MXg2p_ghRN2jA(TNK&qrEd.F9ZRV'AO1p&>2I8@P`/%cMr=oe(Pq,qM\!L0*78(\u'4l$?81`7AN)(0knesY'l<8rQ*Md9J>nSV3C9-u6q<ec-O6eLU[q!I=2fIQ;re2p<-r9n<$3oYVfC6-R'.-+:7des9#IeKuW0)(8MJ1eT0cDmf[mLM>[tubAOY+)Q\6)m:8Jb?ChRkjpLJ3UAqS^j\:E(/hTa7>"4*9[_p[6k"Y0WRr&!-)2[7bg$MHmc:m65urI"#rXMSq_oe>Vs"b:BlP>fG%8&,j3d>:<[^W0Fu.]UQ'LO`.EY4s=FP;^AA`jiX8B.'a$)8B6c58#]FkF@e[J;^4GKG'90WpDiXU]1u*raQL=n*G8OZdT%0$$<7Kn5(*-U'YSVQdWkb8p%$8-B_%rD"2#I0Ba1QS3dg^AQFAP`egtXreu`0)?.@Pm.p&GcORC7m9[k!6h2m^0XUM"qW^M[VZL/G\Z*CPg0JLSX2+8XODq(_JinGU[=^"u]=gCGX/Qc4]UK#I/4W?Q6eZ2d3io7[K[*Z/;[f!E&Unjg'KaZ)L6:F66cThGWr*oKG\.M/;1k?:BPYL6Dh7@`EfW_%n><i97T?PL9:"R&![oXH>OKm^m'%N%-rn+,E+%<V')C[?od+HuQ.1,2#H>7qZIlo?5Yt2MV*g&)QnV-BjdjgH^b+O$HIWE;HOO`[]kt-qcHS;SXMC*9Arr(L?ldr>*[6Z!f*^4tMi51"8KWp/Sn(qXPhp:tMJ,JgA7bjEGjP,%9//p9NJGcV6,`9=Mrjm7<'\U?h/R(nC9i3V"gt^2H4o=brMO%f8baI2=g3<#B7:Ip>naa@4ag+pI<gf>B-u3T:YAN%&5Q15<,$XiFk2cumI)^c9Lo*n9G3I:=_2XQ=R58K9Xf\^'2YFVP\p!JpG[14a`r#N!it2e4O,mYL0:>jlN0O\%1-W[eET?EQm:EL"p1gP]MC.fQackBDe#-!,\4n/E&eYi<V\s#2[;+6rL!,f9BDUN3onF,,9JA@_:=l^@lb;LH167ZmA]pBsDhf$[IS0-q8abBE;n$XMPRUo(h%_G@I!a8(TW^(+1E//ad&'O,AEQ=.mmaU!g9bQh:/8scR`=[J\$(CM=Ai0Ts"QmW;^<h<:+1[NCk4F+[$6PJemA5Y:L0kn*B\f<g,7P.;H=p2Fo-mhnhII#OKOTd@7CaAB@!/kYPkV=W5OQ?Du97qg=k7cd"XB3\[hP,jib".nc8gsTU*!'h-+u&)TMG95s`rdch3$+UMsFdEVo(RY=j/sQ`GD:@`>VmWXSG!rhuq+.TWW1I/%YL[NN1+kCsEb:d"+2m(U/HaUB4Q3)?,.(uNFrbq*ZVC[fnTX&`6OeheG^&Q`%87CH$m<%33CZ5su1.GU2c0k>*,^6$QO/9m%?<MDkf"]$0_NHF^M7?fF$>ikHr4`s"T!$7anFfOer[r:/iB"!*b@X">V'hDD_E4\r?6IP8\`J_q)g:-hIb,o@J`f1qX""C$;4?YiSo]VG!QTocd6s:3+"8i<1(5s:t\j:rQdNQm1pinphkiaEXo?Ea`\;PA'a%pcAV7FY&\oh5dDV_6gUV+7PV!2iC^9#HZ.PL5Lq&_gAa>Gk6^2i=m,+geS3>pinXp:m4;"18&F0dE)^3n>Ud2tTtaip55DtWDG^JM:p'IeXS1TlCVn(p2J*?FqZNj>mOXDr<&lefIl;DsdZCtc6f:JXcKPE%A._q4)?muITcrquRm<`Z`BDr89nPa$:7MgTmE0gf`BZ/B1R,a9fb?/9AP[Uj^lUoD]P=^,+RBA-M^\Xj]C)ZsW8F4mpG+!2R]b>K#JL$gqL.ZgeGi>p=QSiV#ZcThHRT0GPHHg]\"LCYJUHS;S@MO%#jZ=V__OsX%RI#;/7j8FQ5$_h;#gpsb5^3N+7`5$p+[6FEHO$BA5U.1(Y+l1,!+8m!jFS"Y>;;#f&CjPgA.90J,1=C6`O!"DuokQZg\iY#td"I(*<NB0Zq$JbO+C,KVmbPL4CkS#s-n#A3frJ2XZFg?gQ,p+*=p>BPJE$4Z_1Rf@c3-^?[*WG[QnUfU9B`COZWuT$)Diih-:[us/8XBo]m0&K4l+DS3u-OGmNJ.]F8Yh'/8sMHrVK,t9MA-[<2jp6o&Z;tCNepg@Ddg/M2@)[bmV7$q=Y0AP]+fU@q.;HGZf+G^]Da:V9_HDP88^HHrHI,e/po7>Q+Kt]Y(n)I=6+qpYUHjFnka>mPrZFOKOXNZ!mn)Q7lVEjN3UD(+mDjqXs/!jnSOU?ATCkhLu=RYiYK>cRWRB7&iNK+V-$)kWj/ZT0@[Di0kAP/WdssXdV1eT'/GXQn`)?Sih94>hh*DEHZLH4F"*o.$U]LhnBHC*?kq.)B,WVWuDlm-oqp!;QjE?8sLl_Ne0gDW`H7UVG/#W;<3D_fN;'NdtJ/GM@P==cbP)6$PtFsPV]u%94DA)SXl=YrYp9tM%_9!bEl!cEi9!O&eZ`I/SEA!.68#<?"bK\k$PcG+Z^/DZ"D6!*??.h(@`VI:!u^7"m;V\L#Kq)>?P,!=K(MpJ,d6s^AcouF%$=se##p5DId;Mkg:X&JZ,!8W$jK'8mKk4XG%#u)B'MDnPV?BH/diCm-X0Z2/8qg;g!,eldr=MprqF^UlePR;a!6*gtgemI%>Ae&/H%9]Q)>n7A9mXrtmh@XGMd*Xu_L"p?gVS`l:rS9G&;$>3akOYFV6?kH8Zq7c(k->HhL$?XI0fJWQnDFQnsVR9B:Ph*hRChOZiTiooUil06;).7mHD]m:EMm^-]W6jJl\:jK*@WD^-=<QuShW2$/aUiPS>eYl=iQSbr:naVkp=*AY+j)MN/H1pTm\[f8c^VAtt'K(!rd(FYqVE=C<-rYKdm*X;2)_bZMFMS@]?BLA4/hScQ8sN<*ot-&[e#Z]YFEMa#mbKBSODN=D;^_4,[r:.>*=-69`f1q'QBo;`nr$B]D,=g-Lmp>ADJa6mPdR9-Xi627lfdOP3H@N0+B`pTfJ.c,Pq,pn%YW?O?[r#cCi&J*mEM&nhs:49o*#L;/6AuZ<)f+G=GX8RPjr(mGYrQ*8iCkZ=H$2Pn)#cZ&Gds=2?j?irVQ?@i1Ec+a`m(%c,duio]ai!@o7S;rUa$^6A<q]Uk?b08>I#<gU7h;#cX55kK_c5fT[g`-9%ITVA*`YBo<`Y_B>dKP9t5)]Fc.o;,2B9rdBD'%4j%]2!IEsOX!B]kiaF8Q!;BK>ISK-1c.UT,@*H#_k;#ns$WKbHhVF*Z"SaAfN;3V=(F1u+ZbqX'-/*!Z=M)Jji^;`+X?h9(^YM7H5[V;9Un));t[lkiPUFW?=%r(HD<ukk4BqA<>#rYRl+tnAnJK"qf^Al-jlTCB@!/SUfWNq4aJq\SijDrf9T^&:btL.7<s-&=B\njSdRU?!:3\j#DXd/Wi4=FIF"KJX&Q&rd@s&eXFsMI8ki$N3HM'[O\s)T("$WN%S%8IJ,auoo][,,(8XWgil.T>GP^gf6a'h0['d=?rVb8j0T1t*C=T?*%!V'j+Z^D8%\]Si,taCM:nW?Y9T'5f%aLCo?g6"8Y@#$s3YkG2kKY(q-RTUqHhZrbNofR<D6[QhMAIoe&J60I(/fK<DVSpXYb@AKQFF=^gD63a[']Mlf/l#SR[BJ$*^)P-+[L3<6m=3i^)R7TRPem;\ogYf/Dk=3g9jJD>[1O`0mJ$9k0:*ErefZFNugI6HEE7lkig<_46(s8l-`!&Q;U[V:S0hQ<2idpr;$*RfcrPD0A3mW-Q8g2<N;]kLlR0Ga5Opk.oraMUSEI+5*qn#PE_:G(`;K%lAE:&VG3QWp[=$#Le&gs\T5[6bmc-#Ue-d"jcYP#^J1.R6!YNc?iX!u=)49`D6gLSZaR=Ao?TYOmMDVYjQ+:<(L($F'e30rldi24_pNG%koDj/`1Y6(f2i+l3))q7nF?$7GhorRMiWo8*=cePeC7I)QB`t%f$`";o^pqID-LniVY9WEc_jI)@V]ap?sq?\;l=E_Y)/0p8@9QfR6H&1M2@(aUZ:XiX&XGAOm)#m6%]@Z)B+nk<@T7>7!(Da"EAF$K*Mq<e'iA]G$_LeNEW.MW%tDSXX[AQR(g<6d%NfeU<G?CJUutGk1K8T[D$NtE3POi;k?*seurF63Yp._a,V1(Nb&qR:uJh?IL?So'cg0F8kM^maJE%GAnZ!4/1g_sr7#h6/#&Pb$IZ7n:ZPKXY-'9VY#Mg(oFE!*5V5GiNe.##7>l3@5m`Me*Zj179,A;W&g^/oRlBg/ldqjUb$8b!llU`T+f4_b]6@>7=kjo"/_/03s/`&ne[0&>J,]76CbQYX>\MWc&V=`S^-,89V&U-d)**0DpnC38U?n-u?QQ[6C`U^nn)*Tf[AufY*r5Bg_oTg?bA5qFFdsCHoSmbE]%*cY-NaGQ)]P8sJ,nOAdSa"BNugHA^)LdX]tOBOC"#$n=bGPDHad([?=me]VP^6#ETYI_'tM0qb$dh3#dSXf',-<Qqt99q1g[7NLCUl,]5)1t2fIPXa=Q<a-VcL4dKHOK[;+6P*BTSY!>(rM6ojVi]=4?%*K"<g,"2\F)RO_W?M.T>*@]%OPq-(ICl'bE[2X79b*4=c+$LAZ(QhmIo&RpVdA%'`."L%4iSh%Td@t:"T&jJ_BVYS+qsU4GLDD@=#]3P+.TP''?dGM;\]!gcYNO0"kMkKQYMR+3_:R9T=hTp]2p'1`aPkN2@N^M8b*FWkE8a.Vm3jj<mbPLU<imj"2=p"Wc[flAa2Gp?SNBn&SCOZAhm[N2G/#9L=/![IE8cD`^HX1L8uA2O*pU_K@Dhg*fq[QM$R#"%GODP=]t/:JcAmpF#i=4d\5B"j99q,Sr:mP\k_M%r1)VnPmG#*/0ekspn)iajC=FZm2VE<J)28Qh2fJ-<[B$F3X`U'6n&Y13Eim^8:_\Em,taga=B\n:CtTH]ar<9WAF!qMfJncDJcuNcZtNlV@=bm??+T[\Z"(\g_QrW)8J+L'\p*U\C2/VGVI$r^M\e$IqOtP,%j#*u=1<'Q]S2cA=g)/Frr2e5jh:n\;FoVWhnFNdE+s`PT!VLu<g+n,5&fFF<)f+7n</rtd"ZJo\8g`ZTloYMOkNn_n@1W1r:gpQ:8lk\?QtL"mbPM5i*\AO:/4Q_GP_14mdBNAqtFI&@`=`kB<lnA$sD&mHh[7&h`ko-XC$GP"Utr"Y,eVhiScM2il"KV/uco+$PEr/s4k/+Rl5+uDJkJ$K"n^/fCnn1%1EY5#upD76IF3.Vb`pk[;+61^]!<Zl%r@KDilDCT'":ec_!Fo$_OGW2fIPhfW_&DRl8@QnI;4tlJ/rAZ=V5)T0Js%+&hZlZY.T:?+RCAVbU.=KMmS;$>C.!G:%J&r;#rtHh[O=qsQ+?Zm]1hYa!n;M5sUT;VSWsa,V0u-M6fd_e<GaUJsI+q@mFG,S(^tUNLG/\8h&u`A&?uZA8i&.UW\!B[J$R:aY["3U,tf]-\jOX]r:.naWS^[44Yp;WD/%D-`u1($&PsS"iK7SiV#ZdSJGt?QTsrKJX"EOV^`[1'KPH6\c.X?=%3cPVFpKP$W$9A(.5F'9((rfW4A,O/*,GPER`D>I%d2c^m9M<iftJBIFUh]Qs+CCM;A)@E4BKOlT<04;l7*9&6+hrYb>7DW!,g`4o+SnMEA=I/3?]E?RS]FE;NheZ0M75BK0'KY%"P84Y^doOpKT5b0rYUr6SD>8t+9#(XJfqWj4d6dS)l#ba@srWG.q04'SBnLm"u<ioP'p+@@>`2h6A*BSF<"kUX;qCXF-]Jsoj"<'Wl5JQ@*S!P[/;Uu4K7ke1Q>Wb,2clJl*o^C[ee>Q6C(UI_uOud\fF,Ei$oEa^oSq':QfW\dt4>E'ikO.d+mc`kJ?sk,3Z?5U?FT!%WTZ19OI$qC!8/.jYeZ)V:#*kF;,X%<ZRX5#5r<!97+AkW5K`nA@K*LG[Pq-%FW0NX5V5:"F#"SZRgB@s#/68hh[a;*Y1Lss)`f(34$p8b%>\n5Xf[!"O9.GM6`6`]:*&t0<f<3uehC)k^Bm+ZC.!=aFUtu5G47;+Eil-i9#oIpHaWj96^hXH&4rbFXWQH`s;O69WNJNDCZ""%0NP9i<U@COHJHcJ7"j2I^kMld7i^)WEGXB/orUAn+i8CiD0XP='-;5!L+c*E91An1SYO:8\HeG]9(]sU0piPfN#o*K9>,aHIg/=#][?T2[#tDXBDr'4(lIDqj)jMpT*]eE,Zt\"?Y$HDPq!gFimViIN,*h0VmuOjRk09Bi"!RN%*^+h6/mXp0Z:O6"N#@71TCZfR^;\0U,Ah:7\Pr`pauXh=Uoplgd\TT*#=A&)Y?nmt2)UphJ%k,38-?iL`0cs\c(-ptF<Etdi5($Na:j/WJj]i17%$<SjQPg[U.#I;JInY:HhM9O><LGfZAFX':SC+/A9/-8kR3h:CK@?.*RR^q;'t#*D/3csVr4!e6qWf3Q<(;%ahE3#M@P:r<`E%_JUtY;<NALm6DOhZmG"P8V021Z2:6sdd=86&\PbpfkKoniU&uQ2&&f/%7qcS7kWh\&Fme%q<2ibX7@NG@daHQ9PUJ7o^];c5&CLN9Lkm`D2]k)&W9?L&1@`gh5C%R$MN39Fgs)<IF`_`6D;-Bu&0`tcA&\qQ%<6B-U&uR5s-7RU8g;gUq!hjBIJjTo2M_ir1`qI3mdBM;UEEG:Z*CP\-74We0,>Q6&cFAc77jLqba:-\oB5;5""=I[\8X`,9C'Z],GG8`;?L49FE)GG'cdGiE@jd\BcfNdYd:YT2/8B>5Ua,:n])a;eZ1&Y$6h?Hrqq$MIR?Fg6jH&CX%@)(2K.GWF<Eu>gU(Z.#+PAUh\R:=jVA(3*^kHtp?Yr0JInf3b*=KdDr4lC'L]JMf:jN*=1`Wm%Q5bk<NB0&<NB/pUEEG:.or`*0JIbFm$['&LiOrI77eus`f1qkg=lGumhZuMjXu&]obZ?%ldr=u%YRC',pXa<=]nIf1eDd37(Eo]U*S:@^OQ8m`JSZkDouK:E\8ssh7@_B*=.cGnFcHsE,\?>8J)sK;=;</-qX*FIJYouSiefAc4h9)j[Lb$XO,SNJ+2BIkWjr'?$LV(NfME1SNB7F6Bo*$/P8ohM\[m"2E$SPM%La6j[L=UHuO%D(d*&IkWjsR5lLQP)`DL\3XVTd6s>Lhac[sE"!RN(EokGdmFkQ^'U3shSitiH`.[FY&:N)h*BUX9[;Xs:/NOH;>_-ZfP$5Y_;bKdL_M&Al"/4L#5!IiWg,^?!5]e,:W\,SDV+?^m6\Z!]*=,NF^pPR^/[T<FY%#A-U8+C:DVVaA<`W7>hRjF@#a)-V3,rEa]Ql47(**[CL>uI%U_]]"UC@YA;-ZNp6FkpqQS6V.c"G:i,ruS]<QB9P-jN..7-)IRLMKbMlJiHt;B<Kc^@q9o>kj6@X8%T&;7>IfPb]okpQALuUIU@R$k/FT?S4AN,#u[)SVXQdf:jO5_,V(<eTC9:]i_OK]I"-9=)es1U27]S-qTCTpdB3<7/no&4<.)ZQ7Z</#=>6OG^U-tm(g"W8WE43Ju"i=[r,KF6A;eR1spjcWAIqlRj^A*D;3X]`obs\B;,JOqRRh;L,_.PE'=B'R`h$NCMR]-3,h-)+@N64J,fMeMA8cY9beZSObQuGC)&e&]mKL2%YX'3&eYiJji]SsdNm4k&7qSbrVC[%e.E])OfH$5is$-WrVQ>I%YR@dE%O[[0.U))0JG3=Y=PIXNZL?`V58>2oP)^(&?37p[;0i(09P7i[4'4a/c5PGHdT)0I?Vg=/%9HS???lLT2hXUN>=*LLlR'XeSX0U=]\]!rr)_g"!LQ\rr2md7Rl"4>n\4ad5O(8rk+P_<_,c;kWjqfC]!hmg=k7s=,FXB3B>dLhB$rukWjsR(tYK-[F:sF(KX[>d8:I'8Qo;$R5/>7Fm:55&0b+5G3mlZq=>s\-Ai:d81dDK;)W=IR&d0J\ql?*2)-gg]Qg^F5`!,u0JH=1?_?opLq`6Gj2\)Ildr<V*=.d2C=fU/f:jP`11S<4F*$r_\2_le&:MNQ%j)c3*=!&o-oqn`<S+NfbF1;(MN39Ze]#JFUcUi[[4"Tu1i(ZYo]X\";,JE"9jK/EU;VQ_"%3A_oM+JmRqH2>o)/<)fcuh9?&FZ&()R[H$9E:mOHu3`5QCZQn^GXu.p&mT>IX%nldnSG7AO,@[;0D_@'F%T!bk+5f:jOunF#*o[.$,K+KM+kBbKk)Ud@rqnaZ,Q$5==7C(tRSgUGMH_ZL'eaH.R>j!%AQa@o3l/;Zd6f@Lh\#o\2.D=+`Hf8>TH8;3k8UmRX@UD#r\B[EEgj2[4]<NB/t9Gt!%8Lj/MP:'Q6daQ[_?YaHCWDf_7`5IHANTcj*QnZA+eC;IV74Q2gKRa!sB@0!WWK>WZe3f!$H$Xc\LY(/0QPt8,=L;b(kg5,b84Z:-/0co(0YjpEb0'"hN>nVP,5R1$[r,pY(NL[)?!Tfb_ld:W?G1YbFFZcOQ'@LI(`;Jtj<PID=W+AG[ArH;LfD77QS0^]S7l\RM`N%Tj!AC"VbEL&3^=l(132GHjRDa)&H;CifeYfU??BjK?Qq'NT.(K7@`=4]%Zi(P.4H^PB$JJj5<j15*?C\m7G$DQ??C]c.Ugu6@@q>oOj#%m&KN!V$7T8lFN0cDVl/_Em!Rp;("(D@I?ntU<2Q(r^:sTOA&gtB8<eseLkq!M]SqDm!ET@MqY9<rI#/I^dN+O<<Khn1qM>]D86&&H77i9o1QnUc8EZ$IWM%$*qWi4EHr*Y$kidgdC\-]5?c_DUdKboqdA'28$Pnt%M3<YZe$3CQdErQ*MPWt4b"pV_='9:iY)T-[kST.3[rUTQN27>Yr9W+C7>FA)'rtE>rnN'hd*PV:d1N@8Ycog&F7Y?C?Z0k$d@h/OMC)&dA5%dN5++HSC2.L`kQ$H'$V@u.koS7YeBcH:FBh5k"Ja@<o6F[#K1Okhj2^icp!ZnV%hB2uE=o1'`5G&RA)iN9]X+s9ji`uZ7n<1dj2[3>1c1FM]"e16$V-kc7[>]7Sh<IZe^_WkU>mFq/Xn\;:01A!>[0Z%7ALP+*&s&JW2:?^Yp&cpAB5>8Oa1L.St;MjT8F,9kkco8[S/kX_>"_><7*uDWLQD8(<L2?KaJP-*>+E+nF?%2j[-J>042FVHhN7*MWe8Qi$k36V6@(0\od2gY@!3JLaXe9cCHIY;,EX,p[0Uo+sL%JkN=4^4J+QN?I@^CW<<G2#H:U7CMPkIhOI4eOF$`ukFYUnOj=gn<9WSqVkV'Pb.?94B?TlA7ZA=C%YmRiV5:#2m+>/rL4d78_]]Z]p?gU4)K0G.]Q3++dGYXb[sI`4TaY.-=J.@+NeL#$;l<CPA72,b91hgV;l>XT;r59=001)IYB]a*<GZL<]mKJt+sJXfEoFlh6Q'^p[Oin[K*MpaHeR`5VkoC.\oeB"I/a'>jN3T_(Ymj&EEDdFV;),h01tota,a*__SX0c1)U];P-2;93,g!MWCB`\pU$)09,\WaXBrRY)nC%Q%^m5g'8,]D**?*eDr/,m=ag/=.EZLPGdp]hqXs00B%btp4C(fSPFf$KI'0j^e>Z+@MYQ8cZY+Np[r:/]rnKp!8*Vt-RXtYH7Jc)ePJrCo6VTlBQS8%oGOE[W61A:%$?GRi3VeV)WZ<&tckdrQ,WpJLnF+-lQ<N>1bEr8!`uj?]NUui9mEq\!Rl5,r]Y(7FX]i;Xl(UV)>$G38>$?C6@NsJK:S'[n;b'?uil-hf\[g7m>PG%fId5_!o>#nZ7u\EED;)@n9:'PO\8fid4_N'16-9lX(FOO,P$gjQ8Pbp?\U*r6dA'3o@j@P92fIQkM%bXT+5X&"YI8<&2K%=&e'kXNq=5raG'8$W?l@Qjb&.t1(3n^\7>f/&lqX*4%2^e7hqrqKe>Z*,/D779_sZ?m:RsP#-CpK&TPoUepq_Rf=0>do'gT3X()$#qN#=FkNupT&fJ(g,?[r"hjfMk&HLC4hY-+q5ML]0(_\F=nH1U/e0_Y56#RoZlWDWnn,%-(`i),X,6"\E4.5h,"JB*Zj_hUZf`o-o/%C5*M[r3LLfXl@rk09BlqD*6\f\_/T:!/1Tf<8PpH?H3mf\"iLI*+*CQ=Gl4N:>C(!+D*@;[+Bg0SG3(&LmiOfE`P_gqJ46Unm5)X&l%i/h-)A]6?2PhE5i>aI4u%OS95&1'D<1P9s#N2Bn&52)S*0:=,.?/mK74'd]YAK*E_IBK:hX*BIWG"=^rJ+[J,T*H/K5nKJ0uiSibDd?PM$?GugZ"q0Z^8kDU2c/AU"qpH8,+Cg%;R:Sn]=0,MT2at>AA]b^oiI1RpC#?Y<\$pR`>.#hZW.=GtJt6d2H346OFA1f=PsbH+Y$F+2+!8G9CtUT)7A6EKdF$?.^'di)q"T*@]#TjR?b:J5$AP1F?e;GdRl5,@6L4")S1ts;0ek+ZY[E;#-'0pX8@33dZ:gN:-l!R-U/]I03u8&/'a04B3&k#`f^RV&CJpQgL6/[YAj!XW*M8ILoK2&>(b]BgW/91+?[r$.p\OL-5Ge?go&Ro\(2PKOX)o-n`*Kb/W1LD4f5BEUFh`D(cu`cfZ@2WDF6Ch3HLrUG3EaE^69,7(lGef&-Vg2aZtU2fqLF(rPiRiF4/,`Y;56U[;Pd2V11"</,tC!A;S$saW>7=+edS<W2"0WB`f(dfMD/hsXJMO[/Nd30PZ?3gkm3uaOiJ:^@lk3hQ9@?tnX4oe86`]QpTClOWQiJQiiT%V$4mgO6[/l7)MTJQ%"%LVn4=W?*&9GO;YuNGJ5;%CJdR4&K3^<Ogc4XQC`0hp4-2hi>Qou2X]r:(eZW>prf9;CnFu\Gfs<'GL7Y!./hSb)/a5li[^NVD?]Zj@X&dKgb6tjWp[6iB%j!9%(9,nf]m;Pnl])uIA2OMsN3(8o),"&t&Osdm0`:i8a)UqGAQeE9)r^2RVKhDeF64U(dA'2V,QoG7G=AIo*Me"DYm$6c%eMFLi2BB&$+"9jhQUG+ace+"T5p&Z<Ib8e?TPK.,hr*7Ofm_[71me.-]dVp`"3P-'0/2/HoqFH,BE[H.p!pA_:T2KWk+8I:ed[YUAjuO+,i[Oj.V\]<C;IWd@u>MLI]IL--a]Zji=f#Q>5!PM,`Baf,%4P2*pfQnuOm8P*/Wm%idR5Gk#6jPpj$4ldnY+cC6brI'8O7-[PK@%3'KSciMDF`/,-^C.!$"KH.m3A0's,hkEdg91L(T`Z,F@&eZJZ8E5iV,Gdoj>bF=_facEWdD7Nfh;')3:]LFmYr>Jq:7j_pdr3c*8kKH)DR@OL[?5S?)`A*N^N&;RPq#e>\$q^="rY-joZjBIBZDfi`R@Z_-VTm]J,Xh+/:7-Z`V9pk1oc)G08PJr(`aWV%t"$:=a]^]ldfJlN#t8*4/>fQ:=qSj!i2>\rb#g/9^G[D=R9A\4Ue::&T$.+"WMabpbCsKWL_YE?_a/[j,`X@)%LtG++EtcK0K+6+#tpeo^_+e9*b:t$lFNR0M2_A<b,%JS<66Rb`=i(hRn./n0't05+9uFi5;9r^n;Mh@dF5>(@oM(O>12M>c1=;m(/lXLLRoH]I5Tn'\a5u;)Ahf/UTEhE0,tOmbJfc&kT(hlTh%?[VT)'9c0kg>Eb(9UNf"Qr`jR'.KPh,`f1p-NZ8?6%%KG*o"]eYOm6#M=qsJ0<h9[7/6JZ:NK,#@@L(n,8;&Zp(*0o>6X+Qh_M*sg2boeu#t5Yi#mR!,6RA%aQL^kul-cE?G4!/F%1-cQ>+4[-<<AVCqtKQO3d#3/k07Rjd163Ql`[^2eT,hVQMhA2@U`649Go*6K*DdR4*N=NiLN&Se:"-f^/3t>P4.2:'0Rm%G2sCZaW2?@A-^Y]ELAB.`,h$p@q^TOh:8Q-;>?PrAc]nDfQGht88k^gYtP&nr31Me2/6*q@R]X&=gjAE!j*$JPkOM!A*5)o_j?)&<+@[Hon>'hmbPJl[4PXn&8b^R<it04goRTYA=^64XXtS[>DF24gph>pKOe?mCJ?kB+]"[lq>9WqZ&?u<@X%M1e]Z_%)_DS@+k\KmQS2_-b*C_gBnQ8fB[NQ&qt>`!LZ=:(*PU5u8kKEu$O[:K64SY(ki1SGTAcHQikaTkLZ9mM$dTJT'nKYM*JiO-SV^X0*K/`(RtcU0mG[#T6B4_GcU$M+*NpB.p$1)(9:%>/_L=tLJ^LFGJRV<1gDHPl5>Rh2'u_4ij%)d^fSA+CfUpfsfXK9@!9l7(aB3C#hZCNMs(UrFj(_cPpR="?-lJdZLgt0hKoij,+k32HM%EQ/3Fs[sA13<BOU@MIOp3[bbibA9PfiM7?:&`BVsj<Cq7Z+'cee&#e"5!/rR%OVp=di;h=l?RCH^!IQk>iXDb^TZ/E9NR$QM7%4ip]\1]R7?USJjc&:n7C0/"^E"`I1G!LuC7VJ,H61TIITL^Jb0\@K.YjAf2[H#8<C)>#\i&:q[\eO@QER"Ue4+#oseTR[M9"6c8=-Vo>[(c4TI6fL6C'bu5pl)4(3a!5:">s[g!rjJej!(lLO7urab7RfjnH?rb!>;PTMF`hgI*#o_G>-reZI[hYIQ:a"U5(&/`$47+Y4ErQDm&R1f>?G#*r:A6Bqk6B4MMmDW<FTqL?5J02kK]V+(G6[bC6Z!.0tC,2Pc@Z[:6R#!>-hg8?="\$dFG_cn`.ZXR@3O]mdBLN39)aO`]J;+0QcO*fs>=p?bcU(dA(pRgnBe,W(4X6h7e=7aH7_5eubE!CY"Rj6XVdqSJ3Y-/PA`0KSd*Pf4JT*Q'IV+]"RbOL_gpH),$8HJP'J02$<H$DKg8I7N@!2.P*-HY"=4q;S@>Fif5$@+G!"C*fZ7I$pdop[U$LgNfK,C+X%(#*,&0skl(DQq>'ie=0J2L@=jW(&`IT-<in%o9:%9e[r3A$#8K6sL!nCIq!+fV-oX(D\/1<Il0.?H[kD(#(^-]TCnEh8!pW)u,2^f!f#IJM-t98_?!S',+E\TeNRntG<E3>>IQ]87/N>_7fW\f/Rl;_?)2cDP`<GN@Sr._VHNQc,70QR1M">?0VY0B5S(Z/>UikV2JTKttft;TOG'<S3#7p#MkoUP^L:,[d=C5Fm!<WN;_]eU-`l?$QgO$hm%Bpk!d?5T/Mi2fHg,4BZI!^3eZ?$[V[:@7;E'*,Y%p]_prV60Xj5%=kTmsqs_oIf[O/P@?;:DC:@2/_?rk!CC^3B%;UmifD]R0A_mN%]']Y1VV1:)i?XrokjSM&m"?[2JAD*^HRFEB@;[Vt';4[-m)`BAVD:sode'?\MA_-TYN$j%+c;=EPbN<@K;+$NA"bLB$i:,-s[_%@n]OB\am$4:BWB#IV*bVq:%AmMuiM9Fa!gFt0<6C-TXmD]STbXt3($DKY(3tb!cQO&`sA2NB?Cf'8Q&WpktE%J4?`e*E\L40+f)DP7mI7pq";I)[(jCg5uHFgrrm*3_s$O@"l2`E,]<BG<di9BK_Si.S%f+@HJp$8ACO"OP=TNA='jMhjd]t:n'>$BX@G?YW8kI,6^OG4FFVkTp6[r:.M99s+"A^S[t59:k/HBaqiN-rmg`!#lSFDU^>h;P:g1GaOIjW\Zk8P)LXiiZS!P/TuGg=h/a%jlM[8kVf'h*;<]a5b4$1GU_;Jq=s^*6;/Ta8hUR0>IDd%8]r#,3];h*1oHF5',ipU4]#-*I4W>Y-+pkP>c"&jOpkPl`%%^&0.'H&0N/@_U6b.7n8=sPG)?uIN]jXkKfcerYq1W?G&PuRkS7P\c(6eA&h`YAjP%r9/d:\n(t`>H1L%"^]%t`CC:ROD/X?2^Lk`Z]6E^9\nU&_042Fu\8WTN37ua1'T*B<H0EVK8@2g'J,fJVUg$>4-9QYK$p&Rg]Qk&6n8)iSC2hR)[VUM.O`]'*"!Z[$9UX>3>s"ICLY3kK7?X76T)RZa"%ft^U42/%rVMZW!<E3t[cD^4"pP91VbZ'^IJXP`"L5&0CtlC8j2R''lY"R=:JXbg<kSup'QqI`gU@h/'&;=!M1\6O$_7]88DDQ,B_[s^(`OD582s%,`IS*rY$8B<\@>Yhm@o[Z?G:fTP*.S7dNij9`n8p'-n+<1X]ps+Q_8k`ccs^g+)]Z2);;9tYOCN3F6qO6\qlfL['VYB0$_S\M*1_Cnp\Q8(%q*O,KP8na:U'Y0+qWRW:o];5;Y2R5<o1g^@a`76%E-aH$LPV+ikG@;?V6rC"&rq]@L??h77S3L=<8/2e#9EL(&p!NlF@V[u3Qk!?i-l($4B3!<10ab4b&HA,5]WOql2@<E8qim6a^&J4EjcF`kYn]&%sh';%L=5(39L5X9jkSfSlB\[a`5S2@tdi;3-4BPj4sD9uHB1UDmnLd1q;;ppZ"O@I"dAn>PuRPd`><u4'R`l;W^k0;>hr:SaLB8MJ%UIUAG<E5<JPI%X'>e5%AWDf_YXa^[4K*_?]J,L+%!>YeQ0kSXsmG#*7J,W^$9bRdY,pfTnYO:)M-eTUrHhQgMbY3?!LI+7*<`UE"p$qPq]?"CaCY,^(o/al]NulQ:4.!T`HI/<N4*U+gYEkhh#J&DKFm;p8%1NIE"lt1Fq3#XFrs-D5I!e&eZsmEN&0)ZpO7"5h8/@g]I=b7d1hdT`Z(duPfWer4SNA4`7WAM_3[#Yt/:g`#<ZXGP3!_0S2gHhj/BZ,XO:)R>3`J[B#o)d][r5/Bd^s_l,i,V,!..L99h"W5"Jfb\VI!S83B9+J^C$DrC'!mq3,ugQ_ZQW::/7s!^OH(Rm1V@PY$JXtH1GL%Z*nN(+t"rq0,J>F'L*Yq^OMl=OoeDbfkbMB]mp'2ahFV>`JYPUQS1jDN$&1;3cjElIF0O`pAokkkK]W+27VJSGAi=ZS)EYdZ_!b[lK[Z]n.R0EbfIke:5qY-;-d[":bq(OO,$*Rd*R;B^2W%_U`9",nFG\a<NB0bl00AIE-?CgHLrV6fboJT;,pV=kg1J#-RVH2I=;(8aN.Gd?4"<2)`MXC));=\W`urMaiVYh_\@73\T?q'NuebY)B0WnVP]6c!AK_JF6BR'W]"_J1ajc.DUYHo(((BU7ZA;iDAsH2mFns@,3^8Vk*VMQ',)%bY^aQF%J5LV'_M_b?G))SNpbW/.gZ(%:Hr^LZ:0?q_4El@5(!!>2)R6c:!NM*kL[a;1)0Bep[6k,1M72\=`nl[H1U/)C\;:.70Q:^:f+C%ZHCD8Ut71IKS[6amnTE7'sbm:hHk"K>J>L\P)tcu>D)V7f@(+m'V[ii;3@cS-b+#/CO>I&26k[>)'9G&dCaaG'bqI%Dsp>c/r?]F$4<K%YcuKtb=bDuWFa8=;,L2"QLl7`IU'@"?'?U0:cgFA\grk/Ck23`pYa0$[C%r1g/Q*oM5@,JK>T`23a9(2(%X$;Vb`q^VP^LuYsOtG$5&g&8&Y5Mp%gXc(G8rH1G`grW)6r1TW!;3p$:3]/M3*TqYL&GiZ8jClJpB56;j&Nf790q[^MKgQ_-Ef[M[H4?+Y:El051JX"RY`#^d;.F^,Ka6&>X8h.D-R4F-KC+<WpL<E3C55:nH]4I'MkB6W^p;-@$>eg16SJR$tD)\nLM'GM7;\eYVR!D*ga,FRrIV+Z8drcaTW$(X(tVQ?lcZt\"-s+lD6[r2$:plL9]Mk^.0a,a#e3gI@V/iP_UpOk>8cB)soq;msLB?poknqR_t?u?8-EcQ3AUfO[*9fAOKX6#s<J)7JBbCBTq0XF-%%NREAe>ufZ_Sa:ir;<SjN#T.)^V@Of)B^5s?a6l@)B'Mp<`YsLd%-PkW1p"q@q0T?`XNM[_%2dYr30\ONh/C\R[T\RC=S3K0IJ5<=G9BMrqY_!&5QM7)`B4X#M,0*Q,+VONkE$;`4WFAP9Jqe=4@eZ4,o;^?bCW'hnFLnN2"$V=YCscXT6K!h;'5I*$$%g\hFce-nm=d'oa(e7O!b*\@<pOn3I&N(DIRZY-*eB6rsc8GG)IUGiZr.#eM6'+l@BI]rJ(>`e$3F:JVd4o@STo+]@U>J,c)g#7M45[k99cjMbunnaKbI9\pXa?.02PXE>\n\E;U"h7@apg9p73.p'f<-VS;rE\aZanF.R`n;\GK(`!lfQ[6XEEZ@Uj#bH5,g54goX".8SKQCJ,BT]*^4?t@?$`I;E[;XqdnhD@6!t!f/SNDO'\5]/tU]_l67n;b5ji]tD*1:"%k061Dr$1jN"T]u<fMTE?Zm?''b)=p)=>_rnABM)^]c'%[oYl_)Kj-amR#@[Hi^A6E^7h5DEdn\gNQ%]WB=B35,`&1B_4/9_4]-tF!pC!^`_qrM+t;$tq+0(b_,2U0.8?0`6,7\F@Q#T/S>`Ed.IdYEM42$:Tb@u^77BY8a.GJ>io&aFWkY%OSA21!3Li?hKq_bZCrq%=0/"sho?2Lqm^PE)nA*&`7TcL8'e`q.['6cbSq$J#R1P;4\8e:6SD<8ORtXu,GCWS[$[-]:.#N(k7VZ[Q]iH%&W3!'?4F"*=[eB[spOu^cG'5chg8&924pf(50fp&B5R\"B`5JH=LCPLX]KVAO=7PFtRo,qMWMla<p'J4h042GdA1]Ab8`dp]i8U=FW)tWNpF]IE]-0^t.HT^SC1q9Gmg6:JFj$(&$47+G&7T;i42de>daQ\8GNR,;SB!ua6Ot.r+Do7K/hRXq@!6;`QFXG,/_"bj/M6AF\[*+m#Uc3.Ir8Y%!-'3a!e:7KG>MH],U0'A(]*jmMkXh0T$?%Cq=NoM7Ri,/$C=)lJ,eBLbcGI'T#/'%FS"Wh<E3$X2`HRX#4nmsOGG]l42deb0S:RLU7RCU+FjV]dPPjs=Lbh[=0,MtUnf7^MoM``(Dc:R#h!3Td.<-PMJLeE@6a/HgUB4)3WT6^ib;D8c.+;NC?j<JF6:]O['U5P%qhUL-["n7]o.8`iPL;4-Vq1WZX]R:JQOgDd%I&)+Felj=]nn5ft>mg]Kl9h%W0t/KeI#/g\1C!J+r6Y$]]h*d][#m7Y-,AJb/$K6i$N#q5`H3?lpI4;CQmF./AabK-iT<3,!&A,-rM<;'F-)U58*'4Ur;3k$tN!(ccU^^A[)Q5JB1Sbda>_Bk_9Gs894*XY'>Uo=KDGEf;mj`IIskDVVaQr9iLZK3hkjX]i./c[YqH6&'`nYco7Nb&K1/6aOJ>]t[aS&<WTWO*XTl3$FO7ltRZO#;K(J<sqK3*(5ZMcKWfU%rY;,V(6kSQ^<JYD:bprH$MEi9i"Q'kK]W/N<^@qIMa"C.jl^"r)`AS`3qJ#W2L!)3'KN4.&C'L=]ns594[-$$U\[j2QnpqB*+TJp[2=-EjCU]$TPeCn(s?^>J`JX^4#nDeZ5@,L5(Gn\N-V-SBkCd]8N_m\J`)(m93J?L1+h-rWi"2XmWQVAMQ5cj9SLgL'?MB)GVORC5oX4*Nh-[N<lq<J?RNMTK<cD5(<ECC2/W/(05utAS!>@.M37)_CA@nYZQH!@NL_UmbBfe5<jD!P*1u:_hMU20j1DLSRO7E?_$*a'9SE>N>a[C4*N<&aWnQp=P1pbIVTr,IZ4pT56Z$jhl;AUBEcSF/Q5_PB7Ik9mbPK0(GB+-&5SK44>7\VY-)<p&E#6I(f0]S-ZtE.NSCp\?X70V(f(eY'65)';U_L;M,&,4El&O[43.dr2UE3=0_W+kcQ4(*k/gCR;eSNh8-o$I1@`c-^u3bD=(j]u3b?GJ;WGH;pZ1Gt\WkEl"UcGITm"Lm,!dK%KcY57_>05&$f/F=a1$X_&;,&Z+AnMe.*^#]%<7JWKot!;eV17NjWo1Z^lV'I*Z[=cN3(Ug/PVc!f<69d6f#q:G![!?Sig0MU'(Ln[,@/qa.Y-,.SXJcAMB3KdU+M1T07OEp?YqPM=]]qZa6u$4ZsB12Jh#r,EPCUAC,S\`/3ATLd2V)$m9.JK\*mWZDmZohg_hV;;V_(L@F4]QS[TE)HTAGKXJ1oZEgbW5CSRk%1NbJX]bncKb03(81Icb6jq[R>]b'E;Ekfe@U`g9'f6"k@'/k(Nb*6^CKP=/,5)pXg^[EES.U=E#Cp,in"#!s8.6Uf:fpgJPg\J!RPek-i.>KJJ].s!&bAQ?i:i$dK;sTZLPj").4?SU^K54H/;.HK"K2BqHi<g6Y;VXfgM:rH85Zq/^ooK0jl]^9cW?*pWrr`4_>Euqi=D&9Z(0k?lcZY?$p\;V50OZ]0WKtdM9N@ncCol&+P3nQh3\6TPoM/,@,8D:30"-!n>+Wf]HE/eFAYt8CX]-iGnUra72it<I#rj:,NiP\G3mk4,67fG8P)MKLPtb/b(k9%,&!$u&.cERE.6m8!lQ[N#dW0MF54Pfk$p\CJIE'Froqe'"&h(+d_'jHa>;]$`!L*SI=;(*Q]mr0$qD\R70o.+JlA*u%1OX;ZbQm\HM&IJJVC8&0q?kD&V'KGoU)IXM\e%\EokHQ(*YXZIt@6oqlBHlY$=QXOncc<&:WEsE[L]ZirZ+l"#t3"!,tt5RPahTR4Kt.nDM-gZEcm8+X5+Z]UYE>OInV:9:9&C)AX)5i`@@_gYjWPZO8<*JA$..\g-_FHls4Ul4-<Sa%;IA$)K&d_.!S"Lj9&2I7tQ2WPM(X0/%e9ZOhl\%8+OU_h2af)S`0?@loVGjTN?<#a_.b3Zl2GOCYJ$C^jKAQni61&D&C]'rXc[s4(_aTmQb72.T'fBP?__XdRSn]6>oM$U1#IR@QQlT&j@^jcb1+c'j@dp[$Q8!PmJXiUWpXEA-M:]8$n=b1%sQE-?EE5F%M!bZ?>'N03PeUP4C*moQ#$H+PbYqK.*IIf)1?mdM/Sk$q@i'QV<!J&9VH8Vq^0)Y3"$Qa:\l7bD5,b7P;MdXkDd$TE"\1b^W!$#XWue_`\pJi.>p+J9Db(F,e2?LD#*&J%X.4=QLW_U$P(-s-2Y"7-Gqk/2%BB2\&0]\r]2$ccAlAGOd(V+^>Cfr5!@JcD&f=]0%cK"$EH9U=P?(X)7t(:V1Ck0+DQ&&@$1!Srl_?tsEp(`4ZcU24[`iAlTie2MrN'aQGS\L%\^S25ZU/Y@_NUo7%Z3n:gbZIYoD@loVGjTN?<#a_.b3Zl2GOCYHn@GTesT&g*N6K1s^+<-'plIDrCI`j`nVb`r)J0-jrXI<e/Mi*Ar$lFL>o()@qZ_V>!aBLiL11Yp3V5:)f-aW`6X-Wb`qoenaaZ=\[i36Y-i(UZO7i(hl*\c^:jM^p1Hb]:ChiIdl6+-E?hmdZT>deI:MM_b-acP&];CLZD/6L9,CY-.aF7A*R3B9+)^!;@1>&[*skN?n<&L"lW,]SFbPlRCY?!Vm(S2mRJWQ]-h^9nOB+>u+n9s+:>%OA&KRl2#QWW3*DL@F4]QSW&)!A4X1k4t:angdDPeu`/G1hkt<mltR:W:9:qc92Hj-g'+*AEb+]Z2D=FEB>^\T#Cf92ksP1G9dC.q.OGTOPMX6a.u:j"qMb+PbJ9cM\UWKQmY(Cd%E]&b%Dk+3ToVRUG=^-&-Zbt5IRo.?V^*+N,\SAT_%t+/L3V4kh!#1]=U/J$08ONf\QU'XriZE4-j"QJS<=kgn&TN$k3[#ZtVo,2_m.OWEDSj?*j9q*)&pq_800S>4F\q"Y^9j0t\^b98<on_OSDe[fm$D$,OY^X&^rFmbYW-;fe.6r:ogW-RgL$q20kFAGmm$-k2>H)33m/PKT-eqM!tf]U"l7K*MpsqLT?gDr8ifjQ?R;mFs#[mgDOFH,r[))p(NV$pO+[MA4DbqYL'8o5u^dU7stW=W-e0mR7E`8nl*jIJNHqhS"8WXYsnM]K',P.6(TNbagg3OaYH@0he"m;2?(9Vb\CnE8A\d.k=Op:e48RXF!h%$?h0nj#35[iHH1n";g\-b%1=uVb`qH"-QA#lr=GM')"*6X'dY+IPnF@*F8ur<6*u!fR#!%3t`&^Dr.RoW$nb/b32Tq7ZC#48q^*2J7,X6mhYNa%/<AjWRgWC#f@>k'GMfC.neqUHW0aFS]1PJJmW#@b>//0O5O24JlY/1..,p,TB.&7a3)QIcH]0ICQ+lJGsWQ>JJ;qLVG4nC_8qO+*`lKIM<"!W[3K>D1c[S,1M=uU!Gp>g)8<\$iPOWqO0uC'ag*NU(db]5Y?q"=eq:V8bA^]hb0A2Ma2<ZC1FJ8G0?=:<8$o0eQS(8=r5@4=(I8oq/hAQl^nOgV:7T,q3B9*Z)`PcT1#UU^o??9]3ehjuN#B^'am_W>aOFI2LE%KSg$nO@hgU2!X0i=C1*eL+OHu2%j9f(El37_<aQrod)RhYDhV]W-;I-&ZaiZXT&!(#.FtI%5(bHm=]l605%jCE$,ZjnI[VUf]]%.*\L^pXr<%=tNn'.Fe)\Q"1gU\i1"fF2eLMn=DR6:^a_\(!a=m-2COK!MC&(_(0cc(tu?bW$jnf<F?)LM2E6&66+qecrM1!%!6^8Sln&:WEsE[L]Zj/T/[WX<)f:LY[j6CF>3A0.-YQ=$%2/oKq%V'pE>[V[/Pfs>>[gpt>XlsOh2eZ<YPV+`N"3.AiWpOU;>psmIFG.>P^ZO8<*JA$/Y\0E^.!>3Gc&Dq(-VSQOt3B;r`d:_#-)9]u^Y)cg1RZjuX\57Eaip(;2s5M"Ur!5ZQ8'EMtJ8[;&29GhBQDX4_4,a!t"@)SeQ_+=?+2P@HUoXRH%37L:F6ChUh0!l9nmuBDAYE?C'a+e0aN.PlBE=GWA]b^M@c+qM*s,-5##S5pM"M&\#oNU.h7K:CI6'8E(B6HU3';]i*%/OiK1cJbYX+FNf6WMl#7hjq0k(8\)a8X/H-Q`YDY3/?`"nFsP+<CE2;@sm:@]pF_17%9YgLeC&-"mN0REdqSN:=tCQ!/_[V]6uMuUK(]hpNlbg+LWFEFn![ms;W4ctkhN.-:Z"aa6L<@odSY?nnW@q4QalA@-R"Ku"@J2SMlm*VR5aO@P4=*&G(SAVEOi>T2RdaEgW(QshMAmn*c.S@VB6/6d3GnDOCI)n;rlLjJpAFGINc.7,aK;>:gS.@Ci,n'\UW6e"n)KFp"FThIA$cPpuo-I:28deC.N"V-q,3)a<L6\#=k8P(Zkm@s9CtUSl&NFq\atT2=B+A"op)SjC%bImka,k>T"e[J5]JDE&73m<Rk`N*l'G)f(iQ#dfB>X*oc<?f'I6)lWI*@hLU*>D[R@-VfRtHR86pp:'H&RQ8+?us8bg=^5()MaR6s!GkL'.2cZj43)%1<R@N\\/bnFl8(O=p;Dq;$c7)p!mrIRZa!$1b.%<ju"5ZW3D2F"j4:,4P1(lp9U2mRRaOg'H\@>?cTt/$2s9T:_2._m7*EkbscO&DN`1]6*9M=8:]'KS]FU>IHYt6$RW6o*RL,<lRe"QS2^K>e-$I!gs)+P7=FoENgH=K3qJ,Cp-iZn:Da/Kud%US.E6,i$q#j<WI-BUnf9o93maFPEE0oqMR-oV4[hH(=^j`>[1Neb<9Cb8:P$Lid:eN"U-7\$OaAM[?1UBrAcd+5VPWMhlKs:AALS`[c%5VNnh.JY.<g$%C:-=:<\s0PtAe7.k;"-ceR<G=4YqCOEo2;OH's'&Y%^?i1e&&b'%d`oB4H@l/^sf1#RZ`$5o7`JqC>8ZXf[h7F?'>?9A8>\[f8-@e%@tbEjAs3d:">lddY](J[94NqiBoAS'u^_hU%kS:l]Bn(s$C2\$/tY+DMkhZWKm%PCJ#n(p3#91u66PCh`cldt"MhQjGmP:'-AKddUq([_\M1l2+D4OO<<ML!?fnXutbXDd"1#U5ctY6Dl/e#-F$!5`%VD53b3E9GN;JHH-$jU;G%&`*DYdaHS#]mIXiqtg.ebsNWq'GV>l*BFo*"0<1#')hIpFIa=<7n8Je00hZ("Ii*0*^-f4"4!gKYRm4bJ9tA:<[Pf+O!!EAilGm=K_>*Y(0nFmaiMOo91s'NW`A%]T32tL0'sE1.,.0"0HVoQ;c=>Y)nuX>I20i3&:bn.qXs1KkF[52[tPM1eMS-X+lFNJ9he?9[4@=B&37Z]>.8BDZW%9oU9_';gf@<NlJB4$5s^&=C4-$Y3BT4$ajABGJk,Z+LrAiUku/ZG*s2TI844C9Rk\EmCtZ+jNhT&YAN"'a--!sElKdcRPl1IW`:foa@_XBB.`TKJbS/*o%<(.<%1!4^9=q)qRDS<G&fW7R7>gHuC_IHq<E7Sb^qdNgJNSG]4G4IOKY+iXQ1Pd-!dsQr'e>_3Dm$4E*?Q@Vc39)TrUlMHS"$L\D"$5o1GU`NdFq-KH3(nM(+i]4^hqf4M<,W8U;6a)pV"8RTmU6Q#kZ@,e0ug2(N/*B$2(I%X/i>'%)jWrkF6l5;!GK0j()o]<O?u=?@'qU64EYanRH<KWjT5l<6E.9'7$5?p"_ke8k_qFgpo45*^4srIX]#88u?9PJ:$q]oi5'pLXZV;$51ZP,C+:sgc7kp7l`Ri,9ru9fN?GN=]/(D+7@ss2fn+T2)R71Hf;hqr1;af#*bI@LPCPH-`o[i,U=Y^V.CA6!cQr.ft);VH'_A)p?e1u>P?ZUIn@(?B?m"b2/3hW"Uo/=lIDW]GY:='5RrL%KsbXD7UBEXg"BLrn!<q8T7;k@3FZW6#8?FVZY+B%FFDg`66Qg5nDV:A]mHHF'bhA?'%a6i-OoA#mbPM3hVK_3.b`V1OC82SnVMjL'?C<#n(p3LkYQqZaH-#[f1Q4TX(rb/ET4nC(Ddm!AS%[`j2[5<[;-SD+r!o\aI&M[GE*\*(:c-_3dL;WS=CRuHDKErqtK9uS#;sRJJOu*7un^flU`LXJuYiN6\c/f;+$4SBkdD?qhsWO_\Xq1nF5qoeC9.$)`DM78kP!)p6AS+GJG.6'GPe;H%D\\2?sa6]P#P3BtIODm+J`7nF4_o4!RT[1,91C#q7>RP'!HIU`H'lJ'Q3ZEcZ;S:2\R[d>/AZp?gT^k!_-/ioS@MZ*CPD%M"ARMX]Bop@cn]dGfZ1'EnXVMMmDEY$KekDdPm;,pai?Lb2i>0J?4a6G.U8-71(::S0hVZEd2o2FV<&c-<)#2(?6AjLm.,e)VfUG'8%KEH1(,?/bti4B1#'iPQ6G)E2PmKR3OhmD=1S1.?W3LCYJe+$]2Rj$R_VGOOB/*h.G?S(-H?Pq.<4IcTGfVP^6,_85<\T9i;u7Nj3[<)i5?],)NuH1U1V8ZuI62Jq0dosQ*E"WF#!Q8WI*,kBMT',-QI1M5PN^!0.m2BWR,Uni6^H]r(l65$oA\u)C'6RPO<C#=H(P*4@r=82(7'4$,=Qo]@>'To1lNDe7N+B\!e^"^fVNP')Ngt[;%RPgq<V35^t2$?$N)%p[qAS!,'<`W8EQS4+BP,]I3']K-!M:Bu$d8<nD<E<-9NXgC1`f1q#DV)@KjNGV4aNNRcFEA(0i2FWg+9`*$`6Fc1,9nH1p[@"<;'U@3GoI]lYct@kiaPKglT=Y$e#/_+SA;p*CMR\h"U-+:Vb`opSkFR]9i:@U?="*B1Mti&,2baIAAJWi0$MSbQ*qX>hhjL>m]9[(da$,JSUtL)6%t&J?FXs*?3R'2!&C'-HZmMo,o.73d)cP;rVH1k[;(tKXoWeIr]MNgYHMl62Jlu>hU4T,i'=ZXTV+Q[00Q+m._n]TVl+%]c-4BSi)N`U0^mE:d6cW?/OA1,Iij))Nt`<DabD@bUE)F>LhB9uKk,bf7rmnWk!j5BBkqLF)`J6s,ebL!\9Rc9*F*eZ8-jICUni[8[VXW;`/#!bEqo-4$#\e"W5#:0W'KR%o7Zq$'o^MNL_7]M6)rP??V@t]_?[=jKL4ZNeCE+Ho]\a>/'SHW-q"4-!@@dU$suWpKXPRA!p0Kr<+#FicThG7^3k4ng9ls$N_Q!$72Id<22;\aN_\^!kLZnABb\5To]ai4CY.S+iu*s]!FTDIZZu$"XK3uDnq\@uLcu%R*1/['T"2Bl\WUZCD!^->Od)+&`uff\pPVZY"Ag5=:7[8uLg]!kj1?5NJucA!ha3EXKnYL-4^(WWO$(;5aN2HA`<@mmjN3TM=<^*U/3J4K"O(#TB$Gu8'+><Z$$4h/D*)@RR.0V7S=CSh0*[^bDVi#D)]S,.l:Ps_P!fL8J'X]L77BXeNVs@o9^A62G>_=:B$[&cC2,4O02F2#67Kmm`Si==2m?%Bmr$pjZ#SgDET>%^.m_eJjQ&@El83eWjJ]"*`(d9!V&r+=-R9u4q"Rro=XbjO@ieWM<UK2@6UO64o(!^Q%VUq^1G^gH37uO%NZ!g_]m@qn3AWBE&S"8;I=2-:[+sHlaN2GZ'.7tifFctsXFM<QG3o(ul`XX.g(4BL$_BP1HK</0OH:#a1h;XI\O-D[:S0g6-7/rZ?XNL7:^@ZZSiq_bCtc6&1pFBq-!0KT[7;LZL^Q_6*i45I#g1<4daHRbc"h>CW,^k;2E!J"B$EYA]lN3AI4@uT"X`ZcV+Y%%DFNdXh7L/-\iNF</1`@7baGe]n(o.2a^Rh58Oc1hil-h2$lRKp=YiP%,BWq]l`VEnPWpJ&AF[u1s#b](nCY!UX&lKJGBX9D<E)pO;tpa6$NH<SP_<bFHBmFKa,c=0,h'$,[O,JfKl:jH5%Vm$<NB.@5(*.^]mKBLN&735Z4al13B;B4U.(hHNA<=IPa.L[$=qen@7un;3H3mVI$CFr.D:8?ccO;^Y[N0n[s+H.IE9Y@5Z_$rDr88M*Ze`u@;t7n044]%f24@u]R'5X<g/u@\oQn)6j2Rj,^'84!0fUeY]8\m&;..,qC4[VpeY'p(`+!D,fn-N8l\k+_q:nbUE2RE\@B%"?+La4F7%\h+8#h^]uKsDmh+ko#U(?7'.-E:eu]l<%b%>QV?U`kA&aK&q"W`rs1Mjd*M`#BN#C*<6O/d]i\0B+Za4^lE%o/sfs>>UNEsr*U7q_egqS>g6pq0r-R:+-8K;lR<ilQ9*/F_R0enfjG6*7l_H:[4^4"kNGn(;oD;2KFK*cf6G<Ks*`"ae'm+J`.il-iJHDX5aM*OfCJ['@`<e#UKBQXCZ"!ZP9'c"?(m5f^oG_Ahf>%M8VP&>)!#"J("M%```;%P*o(Dp\'EuBMh6[J(`l5CQZ\mrbjbf/DMG8o7A]Qs]Sc(-q?:7aQSpBA)_H1GK>T8npAR8(W]p?gTF)Dh^5]l)Xe9R:u0\YP^"n+$5FkF4DKmbYX(_1DiNNfM-!`^Bum2cd_0c(@3Bb!.C,$aru6<@-o'2ABPt@1/KkR@?-Rp@Ikp11UYQ)nBmF$%c8"2/6)u?slT!b3drm)u/7D>4M@EIp]s>*Jr+*,tfBC9h\7%Y!]LRiMW;sEcQ2P7bY@lj0<+7rquB6qQbrC)LuY/\@=LO0/"Il!SJ,cV5:"7j/=,A+?L`10t\&^8>,2!$4Ce/]Rb0#8kO]I*\h+,>VpHPA<V94mbLBo*Y"/N',,Hbpi4IADZq+06q(Nm@=!7rW`?*s9q)@#@;'=FY*kAgBVqZ(:aR\oY0=u.5YRtfWCR%KN^3l;2f..)lg$W[q!_%L3g%s+"E6FnCe'L*3HO?,nF5r.jQ'7;:*Cr^k)09?rU55Sh7AlDT>,I1cEON,+!2Ra-$UR[(6G#i#ei8^GOA^(gY[JWXf/1S5/fiNJGC;pm+]!f`JPE">%VAY#STn!DV_n3NK&peRi=1^@U`eaDD!bYKA)8,>eGL^(7lm$-YM2BD8F')Y-+pUqXeLPWYN)2"))C_=]ed6^gSekp[<n):db"AI/3?0UniZBJm);[1&(I!aR@cdA,lQ,1"m!O/k#IoE8\P-oB.2XGT\:c@2'ZB99tj.?+Y7hR1>T%)B/Iq0>AWmG4"!`>?dR70f:gG*8sSL5\?JUM\GRap[@"ccH_H2NsBC>NunmV_)Y#=ec#@;K5X$_Y^ZOspi^1M#cS8Po`DMpe#,tRi8AXL5Tp)=c^p+)aP,>dToI0QjQ5Lrp%@8N4?Yh>#?+Mui!8JG?0T23B@!_c\T7K7@CVlD^d)knf%/Ef^jrt),?(q6?;FACdaAb#dbW_"4s/kCZY'fekD^E>i86"7.ja!^klh9h['UMLL#E+5USFS=J/C`a-9Otk2JpO1M?kp&mG#+ZZa7P;^^G#5ZjBZPp$,P'a&!-5o&\%fQS'Eg6q0Wi"\)V_gpo4DdRhfqEF\':n9uWn@-Z4ie'FOE"0%=fD6V=m8&s#*.%Gm@K!_mA$qiiN!/:ca[8WtuA;NA]F1ZPY!_\q=CY%4ICSBMAXQ[j5`IKmchB9=@AS!/6,qWE6eD&^sZd>I;&+U9\#0P*2n6e6Di8B,2GKu^=bEa`<NK&Xe4*pNIk4e`FlOP($`0<hFgX/rQ0][j&/mLAUiWLeH$?5\'ec,RI;l<AZY9@Tg%1QahS/hi-@G1eg%fH.cTAe++@Ue8o042Fe?O\7)W2QWpX"uOf_.jO(`f(c[7ufD`2/Ua8"`pA&VIkBjbEa`BOhl09QnSQT4X;9U!XV3fi5(&V\[c\V8/C.%Uj;hDLg==n%QAb)i^Moc+>u"%2/Cc.k';2r3''+ol-fkT%C<="&UTUh2E!JW33pr1W$j&W(c%7uHGQDK!l"ENP:(=g^]!jF3"-;lq>%S3\IBTB\6HF[+@!2MLZ&7.%l"0@^d-i;i7JVF2Jh$-R$\.'_,!D;+;Vj%O?qCFl]uJH^-sN//taFs3.`0^L(9rITqS1D1-,pFO$UQX@$EX)3lu4n8f5>e6\\u&kKfb2M1X]?HbiPYp"*PK)tGB[#6HsMETG1QVuj24g9bRe"@<<iSu`5A_#MZJ21p8[>F_4Ri*[`'OVbsT`IV!m44jp]5b`t.I!aK.c_&TU3.0'ibspa@"`smA#XTQ2.u>;1XH&;NBACEJ?s(Xsbht=N(bo9"[r-m06ip#bq+)m5WiAZ`8tZ`U*BU]>`t!?u7>hq,H?t1\6lp#WCGT&`2uu1t\ohdJ7SL:nXY#bk=>=^K\1(@R^ddJ3SI:j:OKn)#M#0,=:$M\tp?gVFc9Ys]Do9K1;&TiM-$so_Tb_9RB@LU5Di`VaGOM]<YMZ-I'2C#4d*g?Wf<1[@V<+pi_r/iQpqjnb+G:lu81"g@.-X<r&2GBO+$Y45F:>m!f</E,dF#eH_:,;X+#@MfSXj&Q/mXo)DpGnVJMWpP)b7IE?<LE6JRd%ti1#X_$b1s)^dAqE_ePF[79UN?(U68KY&bd2,08)3XB:#TTc?lgN"-SrKr>]2#9!SV_*VrI%1PH`]q.B6U4o,:p\t-goCMR9k"qE!0EKi5d;nR(Xg;Zd,5=KeY$\pbZ.R[[(GZ`jV0DCb-71&N[%*K:Ghlu4<iq=?NQl2l@))c^_bZd^EEWeo#/FQ0ba8JpFrV#*&e`W<J:kLI+u*M`6EqpY<KOdg.B5i>cjVac[*$J2#`V5Nq=Oe06oR[]K8u-`"smbEP*;(a3#Ehba;?P0eJgJ3IJQA"eE>oRUo($/`5FpS^guA,Ol)RrRmTUu)q_]oVPXQd&S$C?!(@nJ*'i-Gj2Vi,6Fq]k&0?MZ&CS5P8#;^[JrdS-0S'<p0o?5R=+`ek#,,cgJ=$OM*8*!h$ZlN6`PTIn?"7=K\t#(PQCF?OfjA&l:01NrW2Qf!I.H>)Ui0[M@<QhfhS"9pNRt::#Ju*mi&hk<lKS^G5r4-j]mB>QUQ>kjY<gpOD4CGB]Q$>:;3C/a,_k^d#F#FF6HNUdC7-ba!c"5[@g6\':*\<j.RLea5QC8o+377si"?ETDZVcqoB4HghnO[*d\XUh]L.Ga+iM9rOlXpIhnN3Oh4mINL6fE^\m2%B(8#ZZHEM>CZtVmVcKY?hZN_Kn++D.Wo]Qn#Rn4bk]R'5XZ+Hs5Lfa['0"H-A'c"-(q/T6T0PSr\7Ss7U;0V<TM(o6+RO1/TQSnB+am&:l/1I4@jlGKUWmLfAFbF!:0o0'f4a-0/)NQKb(Dii.eG3%!#Se'hOT!6$)(h)?R#(Br>a_!=D]\]<iShU@%4:g[\./Ja`I(BS9jSdT6%4B;>]+#VChIBn</4(C[@a'50b#rg.4Jug^3sZ?RYh<e0'KXd.4?Sm-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n(l)rs,XR?Fg~>endstream
endobj
56 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 251 /Length 942 
  /Subtype /Image /Type /XObject /Width 1007 >>
stream
Gb"0M0`_7s%)=RS84!=ML'ou0.-T+tT],eY!+)olACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]es4(Qta1@,JgG)$L<6\aD?_sWUpGK@!MACqnXljanVLCCd^L>=#jmZ:k$aKRa:fGua6%N0GF%(el]h''](OC<@SYWHCJ*AZsk)0UcD]0h>/+iE`0@<]dP)i.T4'EB.^~>endstream
endobj
57 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font >>
endobj
58 0 obj
<< /Contents 120 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.rst2pdf_image_0 55 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
59 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Modbus) >> /Border [ 0 0 0 ] /Rect [ 60.58575 481.0394 215.6457 493.0394 ] /Subtype /Link /Type /Annot >>
endobj
60 0 obj
<< /BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font >>
endobj
61 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 747.0394 0 ] /Rect [ 279.1024 434.0394 411.1024 446.0394 ] /Subtype /Link /Type /Annot >>
endobj
62 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 75 0 R /XYZ 50.01575 126.0394 0 ] /Rect [ 279.1024 416.0394 351.1024 428.0394 ] /Subtype /Link /Type /Annot >>
endobj
63 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 678.0394 0 ] /Rect [ 279.1024 398.0394 393.1024 410.0394 ] /Subtype /Link /Type /Annot >>
endobj
64 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 168.0394 0 ] /Rect [ 279.1024 380.0394 411.1024 392.0394 ] /Subtype /Link /Type /Annot >>
endobj
65 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 525.0394 0 ] /Rect [ 279.1024 362.0394 411.1024 374.0394 ] /Subtype /Link /Type /Annot >>
endobj
66 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 50.01575 636.0394 0 ] /Rect [ 279.1024 344.0394 423.1024 356.0394 ] /Subtype /Link /Type /Annot >>
endobj
67 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 567.0394 0 ] /Rect [ 279.1024 326.0394 417.1024 338.0394 ] /Subtype /Link /Type /Annot >>
endobj
68 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 789.0394 0 ] /Rect [ 279.1024 308.0394 435.1024 320.0394 ] /Subtype /Link /Type /Annot >>
endobj
69 0 obj
<< /Annots [ 59 0 R 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R ] /Contents 121 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
70 0 obj
<< /A << /S /URI /Type /Action /URI (http://en.wikipedia.org/wiki/Two%27s_complement) >> /Border [ 0 0 0 ] /Rect [ 167.7357 316.4394 391.1457 328.4394 ] /Subtype /Link /Type /Annot >>
endobj
71 0 obj
<< /Annots [ 70 0 R ] /Contents 122 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
72 0 obj
<< /BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font >>
endobj
73 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 581.8394 0 ] /Rect [ 151.0551 310.5894 212.1851 322.5894 ] /Subtype /Link /Type /Annot >>
endobj
74 0 obj
<< /Annots [ 73 0 R ] /Contents 123 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
75 0 obj
<< /Contents 124 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
76 0 obj
<< /Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
77 0 obj
<< /Contents 126 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
78 0 obj
<< /Contents 127 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
79 0 obj
<< /Contents 128 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
80 0 obj
<< /Contents 129 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
81 0 obj
<< /Contents 130 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
82 0 obj
<< /Contents 131 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
83 0 obj
<< /Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
84 0 obj
<< /Contents 133 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
85 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 665.8394 0 ] /Rect [ 40.01575 708.6394 132.2657 720.6394 ] /Subtype /Link /Type /Annot >>
endobj
86 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 40.01575 452.8394 0 ] /Rect [ 40.01575 690.6394 136.7057 702.6394 ] /Subtype /Link /Type /Annot >>
endobj
87 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 77 0 R /XYZ 50.01575 99.03937 0 ] /Rect [ 40.01575 672.6394 126.7057 684.6394 ] /Subtype /Link /Type /Annot >>
endobj
88 0 obj
<< /Annots [ 85 0 R 86 0 R 87 0 R ] /Contents 134 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 115 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
89 0 obj
<< /Outlines 91 0 R /PageLabels 135 0 R /PageMode /UseNone /Pages 115 0 R /Type /Catalog >>
endobj
90 0 obj
<< /Author () /CreationDate <rst2pdf.createpdf.PDFDate instance at 0x7f4f74a1b488> /Creator (\(unspecified\)) /Keywords () /ModDate <rst2pdf.createpdf.PDFDate instance at 0x7f4f74a1b488> /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False >>
endobj
91 0 obj
<< /Count 29 /First 92 0 R /Last 114 0 R /Type /Outlines >>
endobj
92 0 obj
<< /Count 20 /Dest [ 58 0 R /XYZ 40.01575 787.0394 0 ] /First 93 0 R /Last 107 0 R /Next 113 0 R /Parent 91 0 R 
  /Title (Welcome to pyModbusTCP's documentation) >>
endobj
93 0 obj
<< /Count 7 /Dest [ 58 0 R /XYZ 40.01575 747.0394 0 ] /First 94 0 R /Last 100 0 R /Next 101 0 R /Parent 92 0 R 
  /Title (Quick start guide) >>
endobj
94 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 711.8394 0 ] /Next 95 0 R /Parent 93 0 R /Title (Overview of the package) >>
endobj
95 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 519.8594 0 ] /Next 96 0 R /Parent 93 0 R /Prev 94 0 R /Title (Package setup) >>
endobj
96 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 315.4594 0 ] /Next 97 0 R /Parent 93 0 R /Prev 95 0 R /Title (ModbusClient: init) >>
endobj
97 0 obj
<< /Dest [ 58 0 R /XYZ 40.01575 99.05937 0 ] /Next 98 0 R /Parent 93 0 R /Prev 96 0 R /Title (ModbusClient: manage TCP link) >>
endobj
98 0 obj
<< /Dest [ 69 0 R /XYZ 40.01575 515.8394 0 ] /Next 99 0 R /Parent 93 0 R /Prev 97 0 R /Title (ModbusClient: available modbus requests functions) >>
endobj
99 0 obj
<< /Dest [ 71 0 R /XYZ 40.01575 787.0394 0 ] /Next 100 0 R /Parent 93 0 R /Prev 98 0 R /Title (ModbusClient: debug mode) >>
endobj
100 0 obj
<< /Dest [ 71 0 R /XYZ 40.01575 541.0394 0 ] /Parent 93 0 R /Prev 99 0 R /Title (utils module: Modbus data mangling) >>
endobj
101 0 obj
<< /Count 5 /Dest [ 74 0 R /XYZ 40.01575 716.2394 0 ] /First 102 0 R /Last 106 0 R /Next 107 0 R /Parent 92 0 R 
  /Prev 93 0 R /Title (pyModbusTCP modules documentation) >>
endobj
102 0 obj
<< /Count 1 /Dest [ 74 0 R /XYZ 40.01575 663.0394 0 ] /First 103 0 R /Last 103 0 R /Next 104 0 R /Parent 101 0 R 
  /Title (Module pyModbusTCP.client) >>
endobj
103 0 obj
<< /Dest [ 74 0 R /XYZ 40.01575 612.2394 0 ] /Parent 102 0 R /Title (class pyModbusTCP.client.ModbusClient) >>
endobj
104 0 obj
<< /Count 1 /Dest [ 77 0 R /XYZ 40.01575 450.0394 0 ] /First 105 0 R /Last 105 0 R /Next 106 0 R /Parent 101 0 R 
  /Prev 102 0 R /Title (Module pyModbusTCP.server) >>
endobj
105 0 obj
<< /Dest [ 77 0 R /XYZ 40.01575 399.2394 0 ] /Parent 104 0 R /Title (class pyModbusTCP.client.ModbusServer) >>
endobj
106 0 obj
<< /Dest [ 77 0 R /XYZ 40.01575 149.8394 0 ] /Parent 101 0 R /Prev 104 0 R /Title (Module pyModbusTCP.utils) >>
endobj
107 0 obj
<< /Count 5 /Dest [ 79 0 R /XYZ 40.01575 414.0394 0 ] /First 108 0 R /Last 112 0 R /Parent 92 0 R /Prev 101 0 R 
  /Title (pyModbusTCP examples) >>
endobj
108 0 obj
<< /Dest [ 79 0 R /XYZ 40.01575 360.8394 0 ] /Next 109 0 R /Parent 107 0 R /Title (Simple read registers example) >>
endobj
109 0 obj
<< /Dest [ 80 0 R /XYZ 40.01575 524.2394 0 ] /Next 110 0 R /Parent 107 0 R /Prev 108 0 R /Title (Simple read bits example) >>
endobj
110 0 obj
<< /Dest [ 81 0 R /XYZ 40.01575 740.2394 0 ] /Next 111 0 R /Parent 107 0 R /Prev 109 0 R /Title (Simple write bits example) >>
endobj
111 0 obj
<< /Dest [ 82 0 R /XYZ 40.01575 704.2394 0 ] /Next 112 0 R /Parent 107 0 R /Prev 110 0 R /Title (An example with a modbus polling thread) >>
endobj
112 0 obj
<< /Dest [ 83 0 R /XYZ 40.01575 787.0394 0 ] /Parent 107 0 R /Prev 111 0 R /Title (Simple blocking server example) >>
endobj
113 0 obj
<< /Dest [ 83 0 R /XYZ 40.01575 537.4394 0 ] /Next 114 0 R /Parent 91 0 R /Prev 92 0 R /Title (Indices and tables) >>
endobj
114 0 obj
<< /Dest [ 88 0 R /XYZ 40.01575 799.0394 0 ] /Parent 91 0 R /Prev 113 0 R /Title (Python Module Index) >>
endobj
115 0 obj
<< /Count 19 /Kids [ 4 0 R 5 0 R 52 0 R 53 0 R 58 0 R 69 0 R 71 0 R 74 0 R 75 0 R 76 0 R 
  77 0 R 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 88 0 R ] /Type /Pages >>
endobj
116 0 obj
<< /Length 949 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 113.172 0 Td (pyModbusTCP documentation) Tj T* -113.172 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 212.1795 0 Td (version 0.1.2) Tj T* -212.1795 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 218.61 0 Td (Loic Lefebvre) Tj T* -218.61 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F1 12 Tf 14.4 TL 203.256 0 Td (September 28, 2017) Tj T* -203.256 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
117 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
118 0 obj
<< /Length 6369 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 355.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 399 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 399 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 381 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 381 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 363 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 363 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 345 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 345 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 309 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 309 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 291 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 291 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.server) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (class pyModbusTCP.client.ModbusServer) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (10) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (11) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (12) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Simple blocking server example) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 60.88 0 Td (13) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (13) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 60.88 0 Td (15) Tj T* -60.88 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 355.0394 cm
Q
q
1 0 0 1 40.01575 355.0394 cm
Q
 
endstream
endobj
119 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
120 0 obj
<< /Length 5004 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Quick start guide) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 695.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Overview of the package) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 665.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .072131 Tw (pyModbusTCP give access to modbus/TCP server through the ModbusClient object. This class is define in the client) Tj T* 0 Tw (module.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 635.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .324426 Tw (Since version 0.1.0, a server is available as ModbusServer class. This server is currently in test \(API can change at) Tj T* 0 Tw (any time\).) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 605.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .666705 Tw (To deal with frequent need of modbus data mangling \(for example convert 32 bits IEEE float to 2x16 bits words\) a) Tj T* 0 Tw (special module named utils provide some helpful functions.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 587.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Package map:) Tj T* ET
Q
Q
q
1 0 0 1 207.0078 535.8594 cm
q
181.26 0 0 45.18 0 0 cm
/FormXob.rst2pdf_image_0 Do
Q
Q
q
1 0 0 1 40.01575 503.0594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Package setup) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 485.0594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from PyPi:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 406.2594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (# for Python 2.7) Tj T* (sudo pip-2.7 install pyModbusTCP) Tj T* (# or for Python 3.2) Tj T* (sudo pip-3.2 install pyModbusTCP) Tj T* (# or upgrade from an older release) Tj T* (sudo pip-3.2 install pyModbusTCP --upgrade) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 386.2594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (from Github:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 331.4594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (git clone https://github.com/sourceperl/pyModbusTCP.git) Tj T* (cd pyModbusTCP) Tj T* (# here change "python" by your python target\(s\) version\(s\) \(like python3.2\)) Tj T* (sudo python setup.py install) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 298.6594 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: init) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 280.6594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (init module from constructor \(raise ValueError if host/port error\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 213.8594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (from pyModbusTCP.client import ModbusClient) Tj T* (try:) Tj T* (    c = ModbusClient\(host="localhost", port=502\)) Tj T* (except ValueError:) Tj T* (    print\("Error with host or port params"\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 193.8594 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (you can also init module from functions host/port return None if error:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 115.0594 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (from pyModbusTCP.client import ModbusClient) Tj T* (c = ModbusClient\(\)) Tj T* (if not c.host\("localhost"\):) Tj T* (    print\("host error"\)) Tj T* (if not c.port\(502\):) Tj T* (    print\("port error"\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 82.25937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: manage TCP link) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 64.25937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now, it's possible to use auto mode to let module deal with TCP open/close.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
121 0 obj
<< /Length 12298 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For keep TCP open, add auto_open=True in init:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c = ModbusClient\(host="localhost", auto_open=True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 736.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For open/close socket before/after read or write, do this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 717.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c = ModbusClient\(host="localhost", auto_open=True, auto_close=True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 697.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can also open manually the TCP link. After this, you call a modbus request function \(see list in next section\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 642.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (if c.open\(\):) Tj T* (    regs_list_1 = c.read_holding_registers\(0, 10\)) Tj T* (    regs_list_2 = c.read_holding_registers\(55, 10\)) Tj T* (    c.close\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 622.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (With a forever polling loop, TCP always open \(auto-reconnect code\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 531.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 90 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F4 10 Tf 12 TL (while True:) Tj T* (    if c.is_open\(\):) Tj T* (        regs_list_1 = c.read_holding_registers\(0, 10\)) Tj T* (        regs_list_2 = c.read_holding_registers\(55, 10\)) Tj T* (    else:) Tj T* (        c.open\(\)) Tj T* (    time.sleep\(1\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 499.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: available modbus requests functions) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 481.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (See ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Modbus ) Tj 0 0 0 rg (for full table.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 475.0394 cm
Q
q
1 0 0 1 40.01575 83.03937 cm
1 1 1 rg
n 0 392 515.2441 -26 re f*
.878431 .878431 .878431 rg
n 0 366 515.2441 -18 re f*
1 1 1 rg
n 0 348 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 330 515.2441 -18 re f*
1 1 1 rg
n 0 312 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 294 515.2441 -18 re f*
1 1 1 rg
n 0 276 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 258 515.2441 -18 re f*
1 1 1 rg
n 0 240 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 222 515.2441 -30 re f*
1 1 1 rg
n 0 192 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 174 515.2441 -18 re f*
1 1 1 rg
n 0 156 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 138 515.2441 -18 re f*
1 1 1 rg
n 0 120 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 102 515.2441 -18 re f*
1 1 1 rg
n 0 84 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 66 515.2441 -18 re f*
1 1 1 rg
n 0 48 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 30 515.2441 -30 re f*
.960784 .960784 .862745 rg
n 0 392 515.2441 -26 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 369 cm
q
.960784 .960784 .862745 rg
n 0 0 37.07087 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL .200433 0 Td (Domain) Tj T* -0.200433 0 Td ET
Q
Q
q
1 0 0 1 55.07087 369 cm
q
.960784 .960784 .862745 rg
n 0 0 110.6772 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 19.77858 0 Td (Function name) Tj T* -19.77858 0 Td ET
Q
Q
q
1 0 0 1 177.748 369 cm
q
.960784 .960784 .862745 rg
n 0 0 49.33858 20 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 10 Tm /F2 10 Tf 10 TL 3.559291 0 Td (Function) Tj T* 9.44 0 Td (code) Tj T* -12.99929 0 Td ET
Q
Q
q
1 0 0 1 239.0866 369 cm
q
.960784 .960784 .862745 rg
n 0 0 270.1575 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 80.91374 0 Td (ModbusClient function) Tj T* -80.91374 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Bit) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Discrete Inputs) Tj T* ET
Q
Q
q
1 0 0 1 177.748 351 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 351 cm
q
.933333 1 .8 rg
n 0 0 132 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_discrete_inputs\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 333 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 333 cm
q
.933333 1 .8 rg
n 0 0 72 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_coils\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Coil) Tj T* ET
Q
Q
q
1 0 0 1 177.748 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 315 cm
q
.933333 1 .8 rg
n 0 0 114 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_coil\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Coils) Tj T* ET
Q
Q
q
1 0 0 1 177.748 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (15) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 297 cm
q
.933333 1 .8 rg
n 0 0 132 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_coils\(\)) Tj T* ET
Q
Q
q
1 0 0 1 6 267 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Registe) Tj T* (r) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Input Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 279 cm
q
.933333 1 .8 rg
n 0 0 132 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_input_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Holding Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 261 cm
q
.933333 1 .8 rg
n 0 0 144 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_holding_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Single Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 243 cm
q
.933333 1 .8 rg
n 0 0 138 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_register\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write Multiple Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 225 cm
q
.933333 1 .8 rg
n 0 0 156 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_registers\(\)) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 195 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read/Write Multiple) Tj T* (Registers) Tj T* ET
Q
Q
q
1 0 0 1 177.748 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (23) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Mask Write Register) Tj T* ET
Q
Q
q
1 0 0 1 177.748 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (22) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (File) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read FIFO Queue) Tj T* ET
Q
Q
q
1 0 0 1 177.748 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (24) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (20) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write File Record) Tj T* ET
Q
Q
q
1 0 0 1 177.748 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (21) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read Exception Status) Tj T* ET
Q
Q
q
1 0 0 1 177.748 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Diagnos) Tj T* (tic) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Diagnostic) Tj T* ET
Q
Q
q
1 0 0 1 177.748 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Counter) Tj T* ET
Q
Q
q
1 0 0 1 177.748 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get Com Event Log) Tj T* ET
Q
Q
q
1 0 0 1 177.748 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Report Slave ID) Tj T* ET
Q
Q
q
1 0 0 1 177.748 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (17) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 0 0 1 55.07087 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (Read Device) Tj T* (Identification) Tj T* ET
Q
Q
q
1 0 0 1 177.748 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (43) Tj T* ET
Q
Q
q
1 0 0 1 239.0866 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (n/a) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 366 m 515.2441 366 l S
n 49.07087 348 m 515.2441 348 l S
n 49.07087 330 m 515.2441 330 l S
n 49.07087 312 m 515.2441 312 l S
n 0 294 m 515.2441 294 l S
n 49.07087 276 m 515.2441 276 l S
n 49.07087 258 m 515.2441 258 l S
n 49.07087 240 m 515.2441 240 l S
n 49.07087 222 m 515.2441 222 l S
n 49.07087 192 m 515.2441 192 l S
n 0 174 m 515.2441 174 l S
n 49.07087 156 m 515.2441 156 l S
n 49.07087 138 m 515.2441 138 l S
n 49.07087 120 m 515.2441 120 l S
n 0 102 m 515.2441 102 l S
n 49.07087 84 m 515.2441 84 l S
n 49.07087 66 m 515.2441 66 l S
n 49.07087 48 m 515.2441 48 l S
n 49.07087 30 m 515.2441 30 l S
n 49.07087 0 m 49.07087 392 l S
n 171.748 0 m 171.748 392 l S
n 233.0866 0 m 233.0866 392 l S
n 0 392 m 515.2441 392 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 392 l S
n 515.2441 0 m 515.2441 392 l S
Q
Q
q
1 0 0 1 40.01575 83.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
122 0 obj
<< /Length 6084 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (ModbusClient: debug mode) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 752.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If need, you can enable a debug mode for ModbusClient like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (from pyModbusTCP.client import ModbusClient) Tj T* (c = ModbusClient\(host="localhost", port=502, debug=True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 701.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 682.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c.debug\(True\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 662.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (when debug is enable all debug message is print on console and you can see modbus frame:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 643.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (c.read_holding_registers\(0, 4\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 623.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (print:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 557.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (Tx) Tj T* ([E7 53 00 00 00 06 01] 03 00 00 00 04) Tj T* (Rx) Tj T* ([E7 53 00 00 00 0B 01] 03 08 00 00 00 6F 00 00 00 00) Tj T* ([0, 111, 0, 0]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 524.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (utils module: Modbus data mangling) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 506.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sample data mangling, usefull for interface PLC device.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 500.2394 cm
Q
q
1 0 0 1 40.01575 500.2394 cm
Q
q
1 0 0 1 40.01575 337.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 147.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (16 bits to 32 bits integers:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 150 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 134 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T* (list_16_bits = [0x0123, 0x4567, 0x89ab, 0xcdef]) Tj T*  T* (# big endian sample \(default\)) Tj T* (list_32_bits = utils.word_list_to_long\(list_16_bits\)) Tj T* (# display "['0x1234567', '0x89abcdef']") Tj T* (print\([hex\(i\) for i in list_32_bits]\)) Tj T*  T* (# little endian sample) Tj T* (list_32_bits = utils.word_list_to_long\(list_16_bits, big_endian=False\)) Tj T* (# display "['0x45670123', '0xcdef89ab']") Tj T* (print\([hex\(i\) for i in list_32_bits]\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 331.4394 cm
Q
q
1 0 0 1 40.01575 216.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 99.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 99.8 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (two's complement \(see ) Tj 0 0 .501961 rg (http://en.wikipedia.org/wiki/Two%27s_complement) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 102 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T* (list_16_bits = [0x0000, 0xFFFF, 0x00FF, 0x8001]) Tj T*  T* (# display "[0, -1, 255, -32767]") Tj T* (print\(utils.get_list_2comp\(list_16_bits, 16\)\)) Tj T*  T* (# display "-1") Tj T* (print\(utils.get_2comp\(list_16_bits[1], 16\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 210.6394 cm
Q
q
1 0 0 1 40.01575 155.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 39.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (an integer of val_size bits \(default is 16\) to an array of boolean:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 491.4441 42 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T* (# display "[True, False, True, False, False, False, False, False]") Tj T* (print\(utils.get_bits_from_int\(0x05, val_size=8\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 149.8394 cm
Q
q
1 0 0 1 40.01575 54.85039 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 79.98898 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 79.98898 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (gateway between IEEE single precision float and python float:) Tj T* ET
Q
Q
q
1 0 0 1 23 13.18898 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 488.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (from pyModbusTCP import utils) Tj T*  T* (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj T* (# display "0x3e99999a") Tj T* (print\(hex\(utils.encode_ieee\(0.3\)\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to pyModbusTCP's documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
123 0 obj
<< /Length 11360 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 732.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 41.8 Tm  T* ET
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 488.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL  T* (# convert python float 0.3 to 0x3e99999a \(32 bits IEEE representation\)) Tj T* (# display "0.300000011921" \(it's not 0.3, precision leak with float...\)) Tj T* (print\(utils.decode_ieee\(0x3e99999a\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 732.2394 cm
Q
q
1 0 0 1 40.01575 697.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 679.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Contents:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 646.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.client) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 628.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (This module provide the ModbusClient class used to deal with modbus server.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 597.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (class pyModbusTCP.client.ModbusClient) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 585.8394 cm
Q
q
1 0 0 1 40.01575 555.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.578819 Tw 12 TL /F6 10 Tf 0 0 0 rg (class ) Tj /F4 10 Tf 0 0 0 rg (pyModbusTCP.client.) Tj /F5 10 Tf 0 0 0 rg (ModbusClient ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (unit_id=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (timeout=None) Tj /F1 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (debug=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (auto_open=None) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (auto_close=None) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 543.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus TCP client) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 537.8394 cm
Q
q
1 0 0 1 50.01575 507.8394 cm
q
BT 1 0 0 1 0 14 Tm 4.092349 Tw 12 TL /F5 10 Tf 0 0 0 rg (__init__ ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (debug=None) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (auto_open=None) Tj /F2 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (auto_close=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 495.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Constructor) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 483.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Modbus server params \(host, port\) can be set here or with host\(\), port\(\) functions. Same for debug option.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 471.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use functions avoid to launch ValueError except if params is incorrect.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 465.8394 cm
Q
q
1 0 0 1 60.01575 336.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 123 cm
Q
q
1 0 0 1 91.03937 111 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (host ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address server address \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 105 cm
Q
q
1 0 0 1 91.03937 93 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- TCP port number \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 87 cm
Q
q
1 0 0 1 91.03937 75 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- unit ID \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 57 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (float) Tj /F1 10 Tf (\) -- socket timeout in seconds \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 51 cm
Q
q
1 0 0 1 91.03937 39 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (debug ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- debug state \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_open ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP connect \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (auto_close ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- auto TCP close \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 321.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Object ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 306.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ModbusClient) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 291.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 37.46937 0 Td (Raises:) Tj T* -37.46937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ValueError ) Tj /F1 10 Tf (-- if a set parameter value is incorrect) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 285.8394 cm
Q
q
1 0 0 1 50.01575 267.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_close ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 255.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP close mode \(after each request\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 249.8394 cm
Q
q
1 0 0 1 60.01575 234.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_close state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 219.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_close state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 204.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 198.8394 cm
Q
q
1 0 0 1 50.01575 180.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (auto_open ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 168.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set automatic TCP connect mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 162.8394 cm
Q
q
1 0 0 1 60.01575 147.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool or None) Tj /F1 10 Tf (\) -- auto_open state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 132.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (auto_open state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 117.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 111.8394 cm
Q
q
1 0 0 1 50.01575 93.83937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (close ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 81.83937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Close TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 75.83937 cm
Q
q
1 0 0 1 60.01575 60.83937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (close status \(True for close/None if already close\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
 
endstream
endobj
124 0 obj
<< /Length 11560 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 60.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 766.0394 cm
Q
q
1 0 0 1 50.01575 748.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (debug ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (state=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 736.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set debug mode) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 730.0394 cm
Q
q
1 0 0 1 60.01575 715.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (state ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool or None) Tj /F1 10 Tf (\) -- debug state or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 700.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (debug state or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 685.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 679.0394 cm
Q
q
1 0 0 1 50.01575 661.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (host ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (hostname=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 649.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set host \(IPv4/IPv6 or hostname like 'plc.domain.net'\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 643.0394 cm
Q
q
1 0 0 1 60.01575 628.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hostname ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str or None) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 613.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (hostname or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 598.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 592.0394 cm
Q
q
1 0 0 1 50.01575 574.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (is_open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 562.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get status of TCP connection) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 556.0394 cm
Q
q
1 0 0 1 60.01575 541.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (status \(True for open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 526.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 520.0394 cm
Q
q
1 0 0 1 50.01575 502.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_error ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 490.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last error code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 484.0394 cm
Q
q
1 0 0 1 60.01575 469.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last error code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 454.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 448.0394 cm
Q
q
1 0 0 1 50.01575 430.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (last_except ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 418.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get last except code) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 412.0394 cm
Q
q
1 0 0 1 60.01575 397.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (last except code) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 382.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 376.0394 cm
Q
q
1 0 0 1 50.01575 358.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (mode ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (mode=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 346.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set modbus mode \(TCP or RTU\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 340.0394 cm
Q
q
1 0 0 1 60.01575 325.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (mode ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- mode \(MODBUS_TCP/MODBUS_RTU\) to set or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 310.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (mode or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 295.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 289.0394 cm
Q
q
1 0 0 1 50.01575 271.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (open ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 259.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Connect to modbus server \(open TCP connection\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 253.0394 cm
Q
q
1 0 0 1 60.01575 238.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (connect status \(True if open\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 223.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 217.0394 cm
Q
q
1 0 0 1 50.01575 199.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (port ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (port=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 187.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set TCP port) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 181.0394 cm
Q
q
1 0 0 1 60.01575 166.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int or None) Tj /F1 10 Tf (\) -- TCP port number or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 151.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TCP port or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 136.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 130.0394 cm
Q
q
1 0 0 1 50.01575 112.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_coils ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 100.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_COILS \(0x01\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 94.03937 cm
Q
q
1 0 0 1 60.01575 55.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
 
endstream
endobj
125 0 obj
<< /Length 13387 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 60.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 751.0394 cm
Q
q
1 0 0 1 50.01575 733.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_discrete_inputs ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bit_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 721.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_DISCRETE_INPUTS \(0x02\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 715.0394 cm
Q
q
1 0 0 1 60.01575 676.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of bits to read \(1 to 2000\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 661.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bits list or None if error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 646.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 640.0394 cm
Q
q
1 0 0 1 50.01575 622.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_holding_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 610.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_HOLDING_REGISTERS \(0x03\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 604.0394 cm
Q
q
1 0 0 1 60.01575 565.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 550.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 535.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 529.0394 cm
Q
q
1 0 0 1 50.01575 511.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (read_input_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (reg_nb=1) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 499.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function READ_INPUT_REGISTERS \(0x04\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 493.0394 cm
Q
q
1 0 0 1 60.01575 454.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_nb ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- number of registers to read \(1 to 125\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 439.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (registers list or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 424.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 418.0394 cm
Q
q
1 0 0 1 50.01575 400.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (timeout ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (timeout=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 388.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set timeout field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 382.0394 cm
Q
q
1 0 0 1 60.01575 367.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (timeout ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (float or None) Tj /F1 10 Tf (\) -- socket timeout in seconds or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 352.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (timeout or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 337.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 331.0394 cm
Q
q
1 0 0 1 50.01575 313.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (unit_id ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (unit_id=None) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 301.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get or set unit ID field) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 295.0394 cm
Q
q
1 0 0 1 60.01575 280.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (unit_id ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int or None) Tj /F1 10 Tf (\) -- unit ID \(0 to 255\) or None for get value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 265.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unit ID or None if set fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 250.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 244.0394 cm
Q
q
1 0 0 1 50.01575 226.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (version ) Tj /F2 10 Tf 0 0 0 rg (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 214.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get package version) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 208.0394 cm
Q
q
1 0 0 1 60.01575 193.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (current version of the package \(like "0.0.1"\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 178.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (str) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 172.0394 cm
Q
q
1 0 0 1 50.01575 154.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_coils ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bits_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bits_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 142.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_MULTIPLE_COILS \(0x0F\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 136.0394 cm
Q
q
1 0 0 1 60.01575 97.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bits_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bits address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bits_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- bits values to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 82.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 67.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 61.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
 
endstream
endobj
126 0 obj
<< /Length 11988 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 775.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_multiple_registers ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (regs_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (regs_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 763.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_MULTIPLE_REGISTERS \(0x10\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 757.0394 cm
Q
q
1 0 0 1 60.01575 718.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (regs_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- registers address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (regs_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- registers values to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 703.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 688.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 682.0394 cm
Q
q
1 0 0 1 50.01575 664.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_coil ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (bit_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (bit_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 652.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_COIL \(0x05\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 646.0394 cm
Q
q
1 0 0 1 60.01575 607.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bit_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- bit value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 592.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 577.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 571.0394 cm
Q
q
1 0 0 1 50.01575 553.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (write_single_register ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (reg_addr) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (reg_value) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 541.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus function WRITE_SINGLE_REGISTER \(0x06\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 535.0394 cm
Q
q
1 0 0 1 60.01575 496.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_addr ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register address \(0 to 65535\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (reg_value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- register value to write) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 60.01575 481.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True if write ok or None if fail) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 60.01575 466.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool or None) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 433.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.server) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 415.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (This module provide the ModbusServer class.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 384.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (class pyModbusTCP.client.ModbusServer) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 372.8394 cm
Q
q
1 0 0 1 40.01575 342.8394 cm
q
BT 1 0 0 1 0 14 Tm 13.11352 Tw 12 TL /F6 10 Tf 0 0 0 rg (class ) Tj /F4 10 Tf 0 0 0 rg (pyModbusTCP.server.) Tj /F5 10 Tf 0 0 0 rg (ModbusServer ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host='localhost') Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=502) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (no_block=False) Tj /F1 10 Tf 0 0 0 rg (,) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (ipv6=False) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 330.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Modbus TCP server) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 324.8394 cm
Q
q
1 0 0 1 50.01575 306.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (__init__ ) Tj /F2 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (host='localhost') Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (port=502) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (no_block=False) Tj /F2 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (ipv6=False) Tj /F2 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 294.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Constructor) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 282.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Modbus server constructor.) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 276.8394 cm
Q
q
1 0 0 1 60.01575 201.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 69 cm
Q
q
1 0 0 1 91.03937 57 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (host ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str) Tj /F1 10 Tf (\) -- hostname or IPv4/IPv6 address server address \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 51 cm
Q
q
1 0 0 1 91.03937 39 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (port ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- TCP port number \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (no_block ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- set no block mode, in this mode start\(\) return \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ipv6 ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- use ipv6 stack) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 195.8394 cm
Q
q
1 0 0 1 50.01575 177.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (__weakref__) Tj T* ET
Q
Q
q
1 0 0 1 60.01575 165.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (list of weak references to the object \(if defined\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 133.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Module pyModbusTCP.utils) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 115.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (This module provide a set of functions for modbus data mangling.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 109.0394 cm
Q
q
1 0 0 1 40.01575 97.03937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (crc16 ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (frame) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 85.03937 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Compute CRC16) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 79.03937 cm
Q
q
1 0 0 1 50.01575 64.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (frame ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (str \(Python2\) or class bytes \(Python3\)) Tj /F1 10 Tf (\) -- frame) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
 
endstream
endobj
127 0 obj
<< /Length 14571 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CRC16) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 751.0394 cm
Q
q
1 0 0 1 40.01575 739.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (decode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 727.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Decode Python int \(32 bits integer\) as an IEEE single precision format) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 715.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 709.0394 cm
Q
q
1 0 0 1 50.01575 694.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- a 32 bit integer as an int Python value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 679.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 664.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (float) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 658.0394 cm
Q
q
1 0 0 1 40.01575 646.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (encode_ieee ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_float) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 634.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Encode Python float to int \(32 bits integer\) as an IEEE single precision) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 622.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Support NaN.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 616.0394 cm
Q
q
1 0 0 1 50.01575 601.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_float ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (float) Tj /F1 10 Tf (\) -- float value to convert) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 586.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (IEEE 32 bits \(single precision\) as Python int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 571.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 565.0394 cm
Q
q
1 0 0 1 40.01575 553.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 541.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python int val_int) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 535.0394 cm
Q
q
1 0 0 1 50.01575 496.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 481.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 466.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 460.0394 cm
Q
q
1 0 0 1 40.01575 448.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_bits_from_int ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_int) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 436.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the list of bits of val_int integer \(default size is 16 bits\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 424.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Return bits list, least significant bit first. Use list.reverse\(\) if need.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 418.0394 cm
Q
q
1 0 0 1 50.01575 379.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_int ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- integer value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of integer \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 364.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list of boolean "bits" \(least significant first\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 349.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 343.0394 cm
Q
q
1 0 0 1 40.01575 331.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (get_list_2comp ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (val_size=16) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 319.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the 2's complement of Python list val_list) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 313.0394 cm
Q
q
1 0 0 1 50.01575 274.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- list of int value to apply 2's complement) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_size ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit size of int value \(word = 16, long = 32\) \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 259.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 244.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 238.0394 cm
Q
q
1 0 0 1 40.01575 226.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (reset_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 214.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Reset a bit at offset position) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 208.0394 cm
Q
q
1 0 0 1 50.01575 169.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer where reset the bit) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 154.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of integer with bit reset) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 139.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 133.0394 cm
Q
q
1 0 0 1 40.01575 121.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (set_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 109.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Set a bit at offset position) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 103.0394 cm
Q
q
1 0 0 1 50.01575 64.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer where set the bit) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP modules documentation) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
 
endstream
endobj
128 0 obj
<< /Length 9099 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 50.01575 772.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of integer with bit set) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 757.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 751.0394 cm
Q
q
1 0 0 1 40.01575 739.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (test_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 727.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Test a bit at offset position) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 721.0394 cm
Q
q
1 0 0 1 50.01575 682.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer to test) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 667.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of bit at offset position) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 652.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bool) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 646.0394 cm
Q
q
1 0 0 1 40.01575 634.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (toggle_bit ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (value) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (offset) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 622.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Return an integer with the bit at offset position inverted) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 616.0394 cm
Q
q
1 0 0 1 50.01575 577.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (value ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- value of integer where invert the bit) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (offset ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (int) Tj /F1 10 Tf (\) -- bit offset \(0 is lsb\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 562.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (value of integer with bit inverted) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 547.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (int) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 541.0394 cm
Q
q
1 0 0 1 40.01575 529.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (pyModbusTCP.utils.) Tj /F5 10 Tf 0 0 0 rg (word_list_to_long ) Tj /F1 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 0 0 rg (val_list) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F4 10 Tf 0 0 0 rg (big_endian=True) Tj /F1 10 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 517.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Word list \(16 bits int\) to long list \(32 bits int\)) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 505.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (By default word_list2long\(\) use big endian order. For use little endian, set big_endian param to False.) Tj T* ET
Q
Q
q
1 0 0 1 50.01575 499.0394 cm
Q
q
1 0 0 1 50.01575 460.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 15.23937 0 Td (Parameters:) Tj T* -15.23937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 33 cm
Q
q
1 0 0 1 91.03937 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (val_list ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (list) Tj /F1 10 Tf (\) -- list of 16 bits int value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 15 cm
Q
q
1 0 0 1 91.03937 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (big_endian ) Tj /F1 10 Tf (\() Tj /F6 10 Tf (bool) Tj /F1 10 Tf (\) -- True for big endian/False for little \(optional\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 91.03937 3 cm
Q
q
Q
Q
q
1 0 0 1 50.01575 445.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 31.92937 0 Td (Returns:) Tj T* -31.92937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2's complement result) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 50.01575 430.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 14.14937 0 Td (Return type:) Tj T* -14.14937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (list) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 394.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 376.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F6 10 Tf 12 TL (Here some examples to see pyModbusTCP in some usages cases) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 344.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read registers example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 55.23937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 282 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 266 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# read_register) Tj T* (# read 10 registers and print result on stdout) Tj T*  T* (# you can use the tiny modbus server "mbserverd" to test this code) Tj T* (# mbserverd is here: https://github.com/sourceperl/mbserverd) Tj T*  T* (# the command line modbus client mbtget can also be useful) Tj T* (# mbtget is here: https://github.com/sourceperl/mbtget) Tj T*  T* (from pyModbusTCP.client import ModbusClient) Tj T* (import time) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (c = ModbusClient\(\)) Tj T*  T* (# uncomment this line to see debug message) Tj T* (#c.debug\(True\)) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
 
endstream
endobj
129 0 obj
<< /Length 2743 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 540.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 246 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 230 Tm /F4 10 Tf 12 TL (# define modbus server host, port) Tj T* (c.host\(SERVER_HOST\)) Tj T* (c.port\(SERVER_PORT\)) Tj T*  T* (while True:) Tj T* (    # open or reconnect TCP to server) Tj T* (    if not c.is_open\(\):) Tj T* (        if not c.open\(\):) Tj T* (            print\("unable to connect to "+SERVER_HOST+":"+str\(SERVER_PORT\)\)) Tj T*  T* (    # if open\(\) is ok, read register \(modbus function 0x03\)) Tj T* (    if c.is_open\(\):) Tj T* (        # read 10 registers at address 0, store result in regs list) Tj T* (        regs = c.read_holding_registers\(0, 10\)) Tj T* (        # if success display registers) Tj T* (        if regs:) Tj T* (            print\("reg ad #0 to 9: "+str\(regs\)\)) Tj T*  T* (    # sleep 2s before next polling) Tj T* (    time.sleep\(2\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 507.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple read bits example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 74.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 426 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 410 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# read_bit) Tj T* (# read 10 bits and print result on stdout) Tj T*  T* (from pyModbusTCP.client import ModbusClient) Tj T* (import time) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (c = ModbusClient\(\)) Tj T*  T* (# uncomment this line to see debug message) Tj T* (#c.debug\(True\)) Tj T*  T* (# define modbus server host, port) Tj T* (c.host\(SERVER_HOST\)) Tj T* (c.port\(SERVER_PORT\)) Tj T*  T* (while True:) Tj T* (    # open or reconnect TCP to server) Tj T* (    if not c.is_open\(\):) Tj T* (        if not c.open\(\):) Tj T* (            print\("unable to connect to "+SERVER_HOST+":"+str\(SERVER_PORT\)\)) Tj T*  T* (    # if open\(\) is ok, read coils \(modbus function 0x01\)) Tj T* (    if c.is_open\(\):) Tj T* (        # read 10 bits at address 0, store result in regs list) Tj T* (        bits = c.read_coils\(0, 10\)) Tj T* (        # if success display registers) Tj T* (        if bits:) Tj T* (            print\("bit ad #0 to 9: "+str\(bits\)\)) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (10) Tj T* ET
Q
Q
 
endstream
endobj
130 0 obj
<< /Length 2715 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (    # sleep 2s before next polling) Tj T* (    time.sleep\(2\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 723.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple write bits example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 654 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 638 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# write_bit) Tj T* (# write 4 bits to True, wait 2s, write False, restart...) Tj T*  T* (from pyModbusTCP.client import ModbusClient) Tj T* (import time) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (c = ModbusClient\(\)) Tj T*  T* (# uncomment this line to see debug message) Tj T* (#c.debug\(True\)) Tj T*  T* (# define modbus server host, port) Tj T* (c.host\(SERVER_HOST\)) Tj T* (c.port\(SERVER_PORT\)) Tj T*  T* (toggle = True) Tj T*  T* (while True:) Tj T* (    # open or reconnect TCP to server) Tj T* (    if not c.is_open\(\):) Tj T* (        if not c.open\(\):) Tj T* (            print\("unable to connect to "+SERVER_HOST+":"+str\(SERVER_PORT\)\)) Tj T*  T* (    # if open\(\) is ok, write coils \(modbus function 0x01\)) Tj T* (    if c.is_open\(\):) Tj T* (        # write 4 bits in modbus address 0 to 3) Tj T* (        print\(""\)) Tj T* (        print\("write bits"\)) Tj T* (        print\("----------"\)) Tj T* (        print\(""\)) Tj T* (        for addr in range\(4\):) Tj T* (            is_ok = c.write_single_coil\(addr, toggle\)) Tj T* (            if is_ok:) Tj T* (                print\("bit #" + str\(addr\) + ": write to " + str\(toggle\)\)) Tj T* (            else:) Tj T* (                print\("bit #" + str\(addr\) + ": unable to write " + str\(toggle\)\)) Tj T* (            time.sleep\(0.5\)) Tj T*  T* (        time.sleep\(1\)) Tj T*  T* (        print\(""\)) Tj T* (        print\("read bits"\)) Tj T* (        print\("---------"\)) Tj T* (        print\(""\)) Tj T* (        bits = c.read_coils\(0, 4\)) Tj T* (        if bits:) Tj T* (            print\("bits #0 to 3: "+str\(bits\)\)) Tj T* (        else:) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (11) Tj T* ET
Q
Q
 
endstream
endobj
131 0 obj
<< /Length 2679 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 720.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (            print\("unable to read"\)) Tj T*  T* (    toggle = not toggle) Tj T* (    # sleep 2s before next polling) Tj T* (    time.sleep\(2\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 687.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (An example with a modbus polling thread) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 62.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 618 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 602 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# modbus_thread) Tj T* (# start a thread for polling a set of registers, display result on console) Tj T* (# exit with ctrl+c) Tj T*  T* (import time) Tj T* (from threading import Thread, Lock) Tj T* (from pyModbusTCP.client import ModbusClient) Tj T*  T* (SERVER_HOST = "localhost") Tj T* (SERVER_PORT = 502) Tj T*  T* (# set global) Tj T* (regs = []) Tj T*  T* (# init a thread lock) Tj T* (regs_lock = Lock\(\)) Tj T*  T* (# modbus polling thread) Tj T* (def polling_thread\(\):) Tj T* (    global regs) Tj T* (    c = ModbusClient\(host=SERVER_HOST, port=SERVER_PORT\)) Tj T* (    # polling loop) Tj T* (    while True:) Tj T* (        # keep TCP open) Tj T* (        if not c.is_open\(\):) Tj T* (            c.open\(\)) Tj T* (        # do modbus reading on socket) Tj T* (        reg_list = c.read_holding_registers\(0,10\)) Tj T* (        # if read is ok, store result in regs \(with thread lock synchronization\)) Tj T* (        if reg_list:) Tj T* (            with regs_lock:) Tj T* (                regs = reg_list) Tj T* (        # 1s before next polling) Tj T* (        time.sleep\(1\)) Tj T*  T* (# start polling thread) Tj T* (tp = Thread\(target=polling_thread\)) Tj T* (# set daemon: polling thread will exit if main thread exit) Tj T* (tp.daemon = True) Tj T* (tp.start\(\)) Tj T*  T* (# display loop \(in main thread\)) Tj T* (while True:) Tj T* (    # print regs list \(with thread lock synchronization\)) Tj T* (    with regs_lock:) Tj T* (        print\(regs\)) Tj T* (    # 1s before next print) Tj T* (    time.sleep\(1\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (pyModbusTCP examples) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (12) Tj T* ET
Q
Q
 
endstream
endobj
132 0 obj
<< /Length 2745 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Simple blocking server example) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 553.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 210 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 194 Tm /F4 10 Tf 12 TL (#!/usr/bin/env python3) Tj T* (# -*- coding: utf-8 -*-) Tj T*  T* (# Modbus/TCP server) Tj T*  T* (import argparse) Tj T* (from pyModbusTCP.server import ModbusServer) Tj T*  T* (if __name__ == '__main__':) Tj T* (    # parse args) Tj T* (    parser = argparse.ArgumentParser\(\)) Tj T* (    parser.add_argument\('-H', '--host', type=str, default='localhost', help='Host'\)) Tj T* (    parser.add_argument\('-p', '--port', type=int, default=502, help='TCP port'\)) Tj T* (    args = parser.parse_args\(\)) Tj T* (    # start modbus server) Tj T* (    server = ModbusServer\(host=args.host, port=args.port\)) Tj T* (    server.start\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 513.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 501.4394 cm
Q
q
1 0 0 1 40.01575 501.4394 cm
Q
q
1 0 0 1 40.01575 489.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 483.4394 cm
Q
q
1 0 0 1 40.01575 471.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 465.4394 cm
Q
q
1 0 0 1 40.01575 453.4394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 36 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 453.4394 cm
Q
q
1 0 0 1 40.01575 453.4394 cm
Q
q
1 0 0 1 40.01575 453.4394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (13) Tj T* ET
Q
Q
 
endstream
endobj
133 0 obj
<< /Length 80 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
134 0 obj
<< /Length 969 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Python Module Index) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 744.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 256.3496 20.4 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 2.4 Tm /F3 12 Tf 14.4 TL (p) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 726.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (pyModbusTCP) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 708.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.client) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 690.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.server) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 672.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pyModbusTCP.utils) Tj  T* ET
Q
Q
q
1 0 0 1 40.01575 672.6394 cm
Q
 
endstream
endobj
135 0 obj
<< /Nums [ 0 136 0 R 1 137 0 R 2 138 0 R 3 139 0 R 4 140 0 R 
  5 141 0 R 6 142 0 R 7 143 0 R 8 144 0 R 9 145 0 R 
  10 146 0 R 11 147 0 R 12 148 0 R 13 149 0 R 14 150 0 R 
  15 151 0 R 16 152 0 R 17 153 0 R 18 154 0 R ] >>
endobj
136 0 obj
<< /S /D /St 1 >>
endobj
137 0 obj
<< /S /D /St 2 >>
endobj
138 0 obj
<< /S /r /St 1 >>
endobj
139 0 obj
<< /S /r /St 2 >>
endobj
140 0 obj
<< /S /D /St 1 >>
endobj
141 0 obj
<< /S /D /St 2 >>
endobj
142 0 obj
<< /S /D /St 3 >>
endobj
143 0 obj
<< /S /D /St 4 >>
endobj
144 0 obj
<< /S /D /St 5 >>
endobj
145 0 obj
<< /S /D /St 6 >>
endobj
146 0 obj
<< /S /D /St 7 >>
endobj
147 0 obj
<< /S /D /St 8 >>
endobj
148 0 obj
<< /S /D /St 9 >>
endobj
149 0 obj
<< /S /D /St 10 >>
endobj
150 0 obj
<< /S /D /St 11 >>
endobj
151 0 obj
<< /S /D /St 12 >>
endobj
152 0 obj
<< /S /D /St 13 >>
endobj
153 0 obj
<< /S /D /St 14 >>
endobj
154 0 obj
<< /S /D /St 15 >>
endobj
xref
0 155
0000000000 65535 f
0000000075 00000 n
0000000163 00000 n
0000000273 00000 n
0000000388 00000 n
0000000599 00000 n
0000000810 00000 n
0000000981 00000 n
0000001152 00000 n
0000001323 00000 n
0000001494 00000 n
0000001666 00000 n
0000001838 00000 n
0000002010 00000 n
0000002182 00000 n
0000002354 00000 n
0000002526 00000 n
0000002698 00000 n
0000002870 00000 n
0000003042 00000 n
0000003214 00000 n
0000003386 00000 n
0000003558 00000 n
0000003730 00000 n
0000003902 00000 n
0000004074 00000 n
0000004246 00000 n
0000004418 00000 n
0000004590 00000 n
0000004762 00000 n
0000004934 00000 n
0000005106 00000 n
0000005278 00000 n
0000005450 00000 n
0000005622 00000 n
0000005794 00000 n
0000005966 00000 n
0000006138 00000 n
0000006310 00000 n
0000006482 00000 n
0000006654 00000 n
0000006826 00000 n
0000006998 00000 n
0000007170 00000 n
0000007342 00000 n
0000007514 00000 n
0000007686 00000 n
0000007858 00000 n
0000008030 00000 n
0000008202 00000 n
0000008374 00000 n
0000008546 00000 n
0000008718 00000 n
0000009276 00000 n
0000009488 00000 n
0000009611 00000 n
0000052790 00000 n
0000053947 00000 n
0000054056 00000 n
0000054315 00000 n
0000054506 00000 n
0000054620 00000 n
0000054792 00000 n
0000054964 00000 n
0000055136 00000 n
0000055308 00000 n
0000055480 00000 n
0000055652 00000 n
0000055824 00000 n
0000055996 00000 n
0000056283 00000 n
0000056486 00000 n
0000056717 00000 n
0000056836 00000 n
0000057008 00000 n
0000057239 00000 n
0000057451 00000 n
0000057663 00000 n
0000057875 00000 n
0000058087 00000 n
0000058299 00000 n
0000058511 00000 n
0000058723 00000 n
0000058935 00000 n
0000059147 00000 n
0000059359 00000 n
0000059531 00000 n
0000059703 00000 n
0000059875 00000 n
0000060120 00000 n
0000060231 00000 n
0000060551 00000 n
0000060630 00000 n
0000060816 00000 n
0000060980 00000 n
0000061108 00000 n
0000061239 00000 n
0000061375 00000 n
0000061522 00000 n
0000061689 00000 n
0000061832 00000 n
0000061972 00000 n
0000062167 00000 n
0000062342 00000 n
0000062473 00000 n
0000062662 00000 n
0000062793 00000 n
0000062925 00000 n
0000063094 00000 n
0000063231 00000 n
0000063377 00000 n
0000063524 00000 n
0000063685 00000 n
0000063823 00000 n
0000063961 00000 n
0000064087 00000 n
0000064281 00000 n
0000065287 00000 n
0000065423 00000 n
0000071850 00000 n
0000071986 00000 n
0000077048 00000 n
0000089405 00000 n
0000095547 00000 n
0000106966 00000 n
0000118585 00000 n
0000132031 00000 n
0000144078 00000 n
0000158708 00000 n
0000167865 00000 n
0000170666 00000 n
0000173439 00000 n
0000176176 00000 n
0000178979 00000 n
0000179115 00000 n
0000180141 00000 n
0000180388 00000 n
0000180426 00000 n
0000180464 00000 n
0000180502 00000 n
0000180540 00000 n
0000180578 00000 n
0000180616 00000 n
0000180654 00000 n
0000180692 00000 n
0000180730 00000 n
0000180768 00000 n
0000180806 00000 n
0000180844 00000 n
0000180882 00000 n
0000180921 00000 n
0000180960 00000 n
0000180999 00000 n
0000181038 00000 n
0000181077 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(-\270/\215\023\374\232\255\017j\310\301DYu\363) (-\270/\215\023\374\232\255\017j\310\301DYu\363)]
 /Info 90 0 R /Root 89 0 R /Size 155 >>
startxref
181116
%%EOF
